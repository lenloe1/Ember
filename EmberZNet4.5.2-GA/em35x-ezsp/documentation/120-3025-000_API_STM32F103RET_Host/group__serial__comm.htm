<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the STM32F103RET Host platform: Serial Communication</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
<div class="contents">
<h1>Serial Communication<br/>
<small>
[<a class="el" href="group__apputil.htm">Application Utilities API Reference</a>]</small>
</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#gaa13b14c431a7286b441aacc7f034ed03">emberSerialWriteUsed</a>(port)</td></tr>
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#gab8c8048967bbfbd0df576c91d56fc7bc">emberSerialInit</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, <a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a> rate, SerialParity parity, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> stopBits)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37">int16u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga14299c02bb630cbaae72388dbd809027">emberSerialReadAvailable</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga5ec7399a96801f90250533228fedb433">emberSerialReadByte</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *dataByte)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga769293b3dfe7ec8e176d0424ada84571">emberSerialReadLine</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, char *data, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> max)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga5ea636643702a7b31d7939eebcb5a4b8">emberSerialReadPartialLine</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, char *data, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> max, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *index)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37">int16u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#gad0089af1d04459c6e470ea218a88753b">emberSerialWriteAvailable</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga6577bb795f1702fea8de38ca81365bd4">emberSerialWriteByte</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> dataByte)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga268c5375af4e74a3d65d42dd01f628f4">emberSerialWriteHex</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> dataByte)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga9b74a7e1f7bcbbd16e7148948118a085">emberSerialWriteString</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, PGM_P string)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">XAP2B_PAGEZERO_ON <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga6f1d724a898f91deb001d0366edc3f79">emberSerialPrintf</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, PGM_P formatString,...)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">XAP2B_PAGEZERO_OFF <br class="typebreak"/>
XAP2B_PAGEZERO_ON <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga2e91508fd527e70c7bd992478d06d649">emberSerialPrintfLine</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, PGM_P formatString,...)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">XAP2B_PAGEZERO_OFF <br class="typebreak"/>
XAP2B_PAGEZERO_ON <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga247a945b782990503b0c6d974760ba4d">emberSerialPrintCarriageReturn</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">XAP2B_PAGEZERO_OFF <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga8beb2b233719e9aa526c8a6da10762d2">emberSerialPrintfVarArg</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, PGM_P formatString, va_list ap)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#gab465fa88b861e06d032d07a4df39bcce">emberSerialWriteData</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *data, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> length)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">XAP2B_PAGEZERO_ON <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#gae3e7ac095ef47dc007df6ddf80e8fd6d">emberSerialWaitSend</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">XAP2B_PAGEZERO_OFF <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#gadcf39db3d76b91327f9aeb7c70c04b38">emberSerialGuaranteedPrintf</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, PGM_P formatString,...)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#gaf721671bb351885fbc42f7af0115bd34">emberSerialBufferTick</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#gaf826760aaa265b9ce9bb105d5c4779f0">emberSerialFlushRx</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port)</td></tr>
<tr><td colspan="2"><h2>Printf Prototypes</h2></td></tr>
<tr><td colspan="2"><p><a class="anchor" id="amgrp54e2e5328f88a845d0ade8a48db39c9d"></a> These prototypes are for the internal printf implementation, in case it is desired to use it elsewhere. See the code for <a class="el" href="group__serial__comm.htm#ga6f1d724a898f91deb001d0366edc3f79" title="Printf for printing on a specified port. Supports the following format specifiers:%%...">emberSerialPrintf()</a> for an example of printf usage. </p>
<br/><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>(&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#ga21f7705adc8e0b3d49b6f843230763e2">emPrintfFlushHandler</a> )(<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> flushVar, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *contents, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> length)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial__comm.htm#gacd364b306df863e0d3e23db1d003ab09">emPrintfInternal</a> (<a class="el" href="group__serial__comm.htm#ga21f7705adc8e0b3d49b6f843230763e2">emPrintfFlushHandler</a> <a class="el" href="ember-types_8h.htm#a375175dbe9c02f0331df24258dbca000">handler</a>, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, PGM_P buff, va_list list)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Unless otherwise noted, the EmberNet stack does not use these functions, and therefore the HAL is not required to implement them. However, many of the supplied example applications do use them. On some platforms, they are also required by DEBUG builds of the stack</p>
<p>Many of these functions return an <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec" title="Return type for Ember functions.">EmberStatus</a> value. See stack/include/error-defs.h for definitions of all <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec" title="Return type for Ember functions.">EmberStatus</a> return values. See <a class="el" href="app_2util_2serial_2serial_8h.htm" title="High-level serial communication functions.">app/util/serial/serial.h</a> for source code. To use these serial routines, they must be properly configured.</p>
<p>If the Ember serial library is built using EMBER_SERIAL_USE_STDIO, then the Ember serial code will redirect to stdio.h. EMBER_SERIAL_USE_STDIO will not consume any of the usual Ember serial library buffers and does not require use of any of the other EMBER_SERIALx definitions described here. In this mode, the only required lower layers are:</p>
<ul>
<li>putchar()</li>
<li>getchar()</li>
<li>fflush(stdout)</li>
<li><a class="el" href="group__serial.htm#ga34c407551884ddac42d8db59b39f4ba8" title="Initializes the UART to the given settings (same parameters as emberSerialInit()...">halInternalUartInit()</a></li>
<li><a class="el" href="group__serial.htm#ga58eb9d5e19caf7941d487aa8d9198f71" title="Returns the number bytes available in the transmit queue when using the EMBER_SERIAL_USE_STDIO...">halInternalPrintfWriteAvailable()</a></li>
<li><a class="el" href="group__serial.htm#gab633dfe51e997336491816336822dbe7" title="Returns the number bytes available in the receive queue when using the EMBER_SERIAL_USE_STDIO...">halInternalPrintfReadAvailable()</a></li>
<li><a class="el" href="group__serial.htm#ga5544ff3159abd290d0f534074c09cc79" title="This function enables/disables EMBER_SERIAL_USE_STDIO printing behavior that is compatible...">halInternalForcePrintf()</a></li>
</ul>
<p>The functions can work in two ways, depending on how messages waiting for transmission are stored:</p>
<ul>
<li>Buffered mode: Uses stack linked buffers. This method can be more efficient if many messages received over the air also need to be transmitted over the serial interface.</li>
<li>FIFO mode: Uses a statically allocated queue of bytes, and data to be transmitted is copied into the queue.</li>
</ul>
<p>(These modes deal only with data transmission. Data <b>reception</b> always occurs in a FIFO mode.)</p>
<p>The current version of these sources provides support for as many as two serial ports, but it can be easily extended. The ports are numbered 0 and 1 and should be accessed using those numbers. The ports can be set up independently of each other.</p>
<p>To enable a port, a Use mode (buffered or FIFO) and a Queue Size must be declared on the port. In FIFO mode, the Queue Size is the size of the FIFO and represents the number of bytes that can be waiting for transmission at any given time. In buffered mode, the Queue Size represents the number of whole messages that can be waiting for transmission at any given time. A single message is created for each call to any of the serial APIs.</p>
<p>To specify a Use mode and Queue Size, place declarations in the compiler preprocessor options when building your application:</p>
<ul>
<li><b>Use Mode:</b><ul>
<li>EMBER_SERIAL0_MODE=EMBER_SERIAL_BUFFER or EMBER_SERIAL_FIFO</li>
<li>EMBER_SERIAL1_MODE=EMBER_SERIAL_BUFFER or EMBER_SERIAL_FIFO</li>
</ul>
</li>
<li><b>Queue Size:</b><ul>
<li>EMBER_SERIAL0_TX_QUEUE_SIZE=2</li>
<li>EMBER_SERIAL0_RX_QUEUE_SIZE=4</li>
<li>EMBER_SERIAL1_TX_QUEUE_SIZE=8</li>
<li>EMBER_SERIAL1_RX_QUEUE_SIZE=16</li>
</ul>
</li>
</ul>
<p>Note the following:</p>
<ul>
<li>If buffered mode is declared, <a class="el" href="group__serial__comm.htm#gaf721671bb351885fbc42f7af0115bd34" title="When a serial port is used in buffered mode, this must be called in an application&#39;s...">emberSerialBufferTick()</a> should be called in the application's main event loop.</li>
<li>If buffered mode is declared, the Tx queue size <b>MUST</b> be &lt;= 255</li>
<li>On the AVR platform, Rx &amp; Tx queue sizes are limited to powers of 2 &lt;= 128</li>
<li>By default, both ports are unused.</li>
</ul>
<p>You can also use declarations to specify what should be done if an attempt is made to send more data than the queue can accommodate:</p>
<ul>
<li>EMBER_SERIAL0_BLOCKING</li>
<li>EMBER_SERIAL1_BLOCKING</li>
</ul>
<p>Be aware that since blocking spins in a loop, doing nothing until space is available, it can adversely affect any code that has tight timing requirements.</p>
<p>If EMBER_SERIAL0_BLOCKING or EMBER_SERIAL1_BLOCKING is defined, then the call to the port will block until space is available, guaranteeing that the entire message is sent. Note that in buffered mode, even if blocking mode is in effect entire messages may be dropped if insufficient stack buffers are available to hold them. When this happens, <a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> is returned.</p>
<p>If no blocking mode is defined, the serial code defaults to non-blocking mode. In this event, when the queue is too short, the data that don't fit are dropped. In FIFO mode, this may result bytes being dropped, starting in the middle of message. In buffered mode, the entire message is dropped. When data is dropped, EMBER_SERIALTX_OVERFLOW is returned.</p>
<p>To minimize code size, very little error checking is done on the given parameters. Specifying an invalid or unused serial port may result in unexplained behavior. In some cases <a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message.">EMBER_ERR_FATAL</a> may be returned. </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="gaa13b14c431a7286b441aacc7f034ed03"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialWriteUsed" ref="gaa13b14c431a7286b441aacc7f034ed03" args="(port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberSerialWriteUsed</td>
          <td>(</td>
          <td class="paramtype">port&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns the number of bytes (in FIFO mode) or messages (in buffered mode) that are currently queued and still being sent. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of bytes or messages available for queueing. </dd></dl>

<p>Definition at line <a class="el" href="app_2util_2serial_2serial_8h_source.htm#l00227">227</a> of file <a class="el" href="app_2util_2serial_2serial_8h_source.htm">app/util/serial/serial.h</a>.</p>

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="ga21f7705adc8e0b3d49b6f843230763e2"></a><!-- doxytag: member="app/util/serial/serial.h::emPrintfFlushHandler" ref="ga21f7705adc8e0b3d49b6f843230763e2" args=")(int8u flushVar, int8u *contents, int8u length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>( <a class="el" href="group__serial__comm.htm#ga21f7705adc8e0b3d49b6f843230763e2">emPrintfFlushHandler</a>)(<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> flushVar, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *contents, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> length)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Typedefine to cast a function into the appropriate format to be used inside the <code>emPrintfInternal</code> function below, for performing the actual flushing of a formatted string to a destination such as a serial port. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flushVar,:</em>&nbsp;</td><td>The destination of the flush, most commonly a serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>contents</em>&nbsp;</td><td>A pointer to the string to flush.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>length</em>&nbsp;</td><td>The number of bytes to flush.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The EmberStatus value of the typedefined function. </dd></dl>

<p>Definition at line <a class="el" href="app_2util_2serial_2serial_8h_source.htm#l00466">466</a> of file <a class="el" href="app_2util_2serial_2serial_8h_source.htm">app/util/serial/serial.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="gab8c8048967bbfbd0df576c91d56fc7bc"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialInit" ref="gab8c8048967bbfbd0df576c91d56fc7bc" args="(int8u port, SerialBaudRate rate, SerialParity parity, int8u stopBits)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialInit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a>&nbsp;</td>
          <td class="paramname"> <em>rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SerialParity&nbsp;</td>
          <td class="paramname"> <em>parity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>stopBits</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initializes a serial port to a specific baud rate, parity, and number of stop bits. Eight data bits are always used. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rate</em>&nbsp;</td><td>The baud rate (see SerialBaudRate).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>parity</em>&nbsp;</td><td>The parity value (see SerialParity).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>stopBits</em>&nbsp;</td><td>The number of stop bits.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>An error code if initialization failed (such as invalid baudrate), or <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="ga14299c02bb630cbaae72388dbd809027"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialReadAvailable" ref="ga14299c02bb630cbaae72388dbd809027" args="(int8u port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37">int16u</a> emberSerialReadAvailable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns the number of bytes currently available for reading in the specified RX queue. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of bytes available. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5ec7399a96801f90250533228fedb433"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialReadByte" ref="ga5ec7399a96801f90250533228fedb433" args="(int8u port, int8u *dataByte)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialReadByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>dataByte</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reads a byte from the specified RX queue. If an error is returned, the dataByte should be ignored. For errors other than <a class="el" href="group__status__codes.htm#gadf460bf86e4a7fb395d9969962860f22" title="There is no received data to process.">EMBER_SERIAL_RX_EMPTY</a> multiple bytes of data may have been lost and serial protocols should attempt to resynchronize. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dataByte</em>&nbsp;</td><td>A pointer to storage location for the byte.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#gadf460bf86e4a7fb395d9969962860f22" title="There is no received data to process.">EMBER_SERIAL_RX_EMPTY</a> if no data is available</li>
<li><a class="el" href="group__status__codes.htm#ga00f1eb47ffdce9bada18b7ff11d8b561" title="There was not enough space to store a received character and the character was dropped...">EMBER_SERIAL_RX_OVERFLOW</a> if the serial receive fifo was out of space</li>
<li><a class="el" href="group__status__codes.htm#gab0fc848db91442d5082134080baeb0ee" title="Detected a UART framing error.">EMBER_SERIAL_RX_FRAME_ERROR</a> if a framing error was received</li>
<li><a class="el" href="group__status__codes.htm#gaade26a197b4584190ac69449bac4e978" title="Detected a UART parity error.">EMBER_SERIAL_RX_PARITY_ERROR</a> if a parity error was received</li>
<li><a class="el" href="group__status__codes.htm#ga113b804311f2101c55e5345cc01bd22d" title="The receive interrupt was not handled in time, and a character was dropped.">EMBER_SERIAL_RX_OVERRUN_ERROR</a> if the hardware fifo was out of space</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> if a data byte is returned </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga769293b3dfe7ec8e176d0424ada84571"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialReadLine" ref="ga769293b3dfe7ec8e176d0424ada84571" args="(int8u port, char *data, int8u max)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialReadLine </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>max</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Simulates a terminal interface, reading a line of characters at a time. Supports backspace. Always converts to uppercase. Blocks until a line has been read or max has been exceeded. Calls on <a class="el" href="group__stm32f103ret__iar__config.htm#ga12ef4b3c98231a44d2c2cd3b04cec5a4" title="Macro to reset the watchdog timer.">halResetWatchdog()</a>. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>A pointer to storage location for the read line. There must be <code>max</code> contiguous bytes available at this location.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>max</em>&nbsp;</td><td>The maximum number of bytes to read.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ga5ea636643702a7b31d7939eebcb5a4b8"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialReadPartialLine" ref="ga5ea636643702a7b31d7939eebcb5a4b8" args="(int8u port, char *data, int8u max, int8u *index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialReadPartialLine </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>index</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Simulates a partial terminal interface, reading a line of characters at a time. Supports backspace. Always converts to uppercase. returns <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> when a line has been read or max has been exceeded. Must initialize the index variable to 0 to start a line. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>A pointer to storage location for the read line. There must be <code>max</code> contiguous bytes available at this location.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>max</em>&nbsp;</td><td>The maximum number of bytes to read.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>index</em>&nbsp;</td><td>The address of a variable that holds the place in the <code>data</code> to continue. Set to 0 to start a line read.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#gadf460bf86e4a7fb395d9969962860f22" title="There is no received data to process.">EMBER_SERIAL_RX_EMPTY</a> if a partial line is in progress.</li>
<li><a class="el" href="group__status__codes.htm#ga00f1eb47ffdce9bada18b7ff11d8b561" title="There was not enough space to store a received character and the character was dropped...">EMBER_SERIAL_RX_OVERFLOW</a> if the serial receive fifo was out of space.</li>
<li><a class="el" href="group__status__codes.htm#gab0fc848db91442d5082134080baeb0ee" title="Detected a UART framing error.">EMBER_SERIAL_RX_FRAME_ERROR</a> if a framing error was received.</li>
<li><a class="el" href="group__status__codes.htm#gaade26a197b4584190ac69449bac4e978" title="Detected a UART parity error.">EMBER_SERIAL_RX_PARITY_ERROR</a> if a parity error was received.</li>
<li><a class="el" href="group__status__codes.htm#ga113b804311f2101c55e5345cc01bd22d" title="The receive interrupt was not handled in time, and a character was dropped.">EMBER_SERIAL_RX_OVERRUN_ERROR</a> if the hardware fifo was out of space.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> if a full ine is ready. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gad0089af1d04459c6e470ea218a88753b"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialWriteAvailable" ref="gad0089af1d04459c6e470ea218a88753b" args="(int8u port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37">int16u</a> emberSerialWriteAvailable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns the number of bytes (in FIFO mode) or messages (in buffered mode) that can currently be queued to send without blocking or dropping. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of bytes or messages available for queueing. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6577bb795f1702fea8de38ca81365bd4"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialWriteByte" ref="ga6577bb795f1702fea8de38ca81365bd4" args="(int8u port, int8u dataByte)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialWriteByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>dataByte</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Queues a single byte of data for transmission on the specified port. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dataByte</em>&nbsp;</td><td>The byte to be queued.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga268c5375af4e74a3d65d42dd01f628f4"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialWriteHex" ref="ga268c5375af4e74a3d65d42dd01f628f4" args="(int8u port, int8u dataByte)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialWriteHex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>dataByte</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Converts a given byte of data to its two-character ASCII hex representation and queues it for transmission on the specified port. Values less than 0xF are always zero padded and queued as "0F". </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>dataByte</em>&nbsp;</td><td>The byte to be converted.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga9b74a7e1f7bcbbd16e7148948118a085"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialWriteString" ref="ga9b74a7e1f7bcbbd16e7148948118a085" args="(int8u port, PGM_P string)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialWriteString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PGM_P&nbsp;</td>
          <td class="paramname"> <em>string</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Queues a string for transmission on the specified port. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>string</em>&nbsp;</td><td>The string to be queued.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga6f1d724a898f91deb001d0366edc3f79"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialPrintf" ref="ga6f1d724a898f91deb001d0366edc3f79" args="(int8u port, PGM_P formatString,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XAP2B_PAGEZERO_ON <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialPrintf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PGM_P&nbsp;</td>
          <td class="paramname"> <em>formatString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>...</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Printf for printing on a specified port. Supports the following format specifiers:</p>
<ul>
<li>%% percent sign</li>
<li>c single-byte character</li>
<li>s RAM string</li>
<li>p flash string (nonstandard specifier)</li>
<li>u 2-byte unsigned decimal</li>
<li>d 2-byte signed decimal</li>
<li>l 4-byte signed decimal</li>
<li>x 2x 4x 1-, 2-, 4-byte hex value (always 0 padded) (nonstandard specifier). </li>
</ul>
</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>formatString</em>&nbsp;</td><td>The string to print.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>...</em>&nbsp;</td><td>Format specifiers.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga2e91508fd527e70c7bd992478d06d649"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialPrintfLine" ref="ga2e91508fd527e70c7bd992478d06d649" args="(int8u port, PGM_P formatString,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XAP2B_PAGEZERO_OFF XAP2B_PAGEZERO_ON <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialPrintfLine </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PGM_P&nbsp;</td>
          <td class="paramname"> <em>formatString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>...</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Printf for printing on a specified port. Same as <a class="el" href="group__serial__comm.htm#ga6f1d724a898f91deb001d0366edc3f79" title="Printf for printing on a specified port. Supports the following format specifiers:%%...">emberSerialPrintf()</a> except it prints a carriage return at the the end of the text. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>formatString</em>&nbsp;</td><td>The string to print.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>...</em>&nbsp;</td><td>Format specifiers.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga247a945b782990503b0c6d974760ba4d"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialPrintCarriageReturn" ref="ga247a945b782990503b0c6d974760ba4d" args="(int8u port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XAP2B_PAGEZERO_OFF XAP2B_PAGEZERO_ON <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialPrintCarriageReturn </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Prints "\r\n" to the specified serial port. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga8beb2b233719e9aa526c8a6da10762d2"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialPrintfVarArg" ref="ga8beb2b233719e9aa526c8a6da10762d2" args="(int8u port, PGM_P formatString, va_list ap)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XAP2B_PAGEZERO_OFF <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialPrintfVarArg </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PGM_P&nbsp;</td>
          <td class="paramname"> <em>formatString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&nbsp;</td>
          <td class="paramname"> <em>ap</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Prints a format string with a variable argument list. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>formatString</em>&nbsp;</td><td>A printf style format string. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>ap</em>&nbsp;</td><td>A variable argument list.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gab465fa88b861e06d032d07a4df39bcce"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialWriteData" ref="gab465fa88b861e06d032d07a4df39bcce" args="(int8u port, int8u *data, int8u length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialWriteData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>length</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Queues an arbitrary chunk of data for transmission on a specified port. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>data</em>&nbsp;</td><td>A pointer to data.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>length</em>&nbsp;</td><td>The number of bytes to queue.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gae3e7ac095ef47dc007df6ddf80e8fd6d"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialWaitSend" ref="gae3e7ac095ef47dc007df6ddf80e8fd6d" args="(int8u port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XAP2B_PAGEZERO_ON <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialWaitSend </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Waits for all data currently queued on the specified port to be transmitted before returning. <b>Note:</b> Call this function before serial reinitialization to ensure that transmission is complete. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gadcf39db3d76b91327f9aeb7c70c04b38"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialGuaranteedPrintf" ref="gadcf39db3d76b91327f9aeb7c70c04b38" args="(int8u port, PGM_P formatString,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XAP2B_PAGEZERO_OFF <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSerialGuaranteedPrintf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PGM_P&nbsp;</td>
          <td class="paramname"> <em>formatString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>...</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>A printf routine that takes over the specified serial port and immediately transmits the given data regardless of what is currently queued. Does not return until the transmission is complete. </p>
<dl class="user"><dt><b>Application Usage:</b></dt><dd>Useful for fatal situations (such as asserts) where the node will be reset, but information on the cause for the reset needs to be transmitted first.</dd></dl>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>formatString</em>&nbsp;</td><td>The string to print.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>...</em>&nbsp;</td><td>Formatting specifiers. See <a class="el" href="group__serial__comm.htm#ga6f1d724a898f91deb001d0366edc3f79" title="Printf for printing on a specified port. Supports the following format specifiers:%%...">emberSerialPrintf()</a> for arguments.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>One of the following (see the Main Page):<ul>
<li><a class="el" href="group__status__codes.htm#ga7dfde8cccb51f232b6748edeb83437df" title="Tried to send too much data.">EMBER_SERIAL_TX_OVERFLOW</a> indicates that data was dropped.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers.">EMBER_NO_BUFFERS</a> indicates that there was an insufficient number of available stack buffers.</li>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a>. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gaf721671bb351885fbc42f7af0115bd34"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialBufferTick" ref="gaf721671bb351885fbc42f7af0115bd34" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberSerialBufferTick </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>When a serial port is used in buffered mode, this must be called in an application's main event loop, similar to emberTick(). It frees buffers that are used to queue messages. <b>Note:</b> This function has no effect if FIFO mode is being used. </p>

</div>
</div>
<a class="anchor" id="gaf826760aaa265b9ce9bb105d5c4779f0"></a><!-- doxytag: member="app/util/serial/serial.h::emberSerialFlushRx" ref="gaf826760aaa265b9ce9bb105d5c4779f0" args="(int8u port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberSerialFlushRx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Flushes the receive buffer in case none of the incoming serial data is wanted. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>A serial port number (0 or 1). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gacd364b306df863e0d3e23db1d003ab09"></a><!-- doxytag: member="app/util/serial/serial.h::emPrintfInternal" ref="gacd364b306df863e0d3e23db1d003ab09" args="(emPrintfFlushHandler handler, int8u port, PGM_P buff, va_list list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> emPrintfInternal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__serial__comm.htm#ga21f7705adc8e0b3d49b6f843230763e2">emPrintfFlushHandler</a>&nbsp;</td>
          <td class="paramname"> <em>handler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PGM_P&nbsp;</td>
          <td class="paramname"> <em>buff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&nbsp;</td>
          <td class="paramname"> <em>list</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>The internal printf function, which scans the string for the format specifiers and appropriately implants the passed data into the string. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>handler,:</em>&nbsp;</td><td>The name of an internal function, which has parameters matching the function <code>emPrintfFlushHandler</code> above, responsible for flushing a string formatted by this function, <code>emPrintfInternal</code>, to the appropriate buffer or function that performs the actual transmission.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>The destination of the flush performed above, most commonly serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buff</em>&nbsp;</td><td>The string to print.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>The list of arguments for the format specifiers.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of characters written. </dd></dl>

</div>
</div>
</div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the STM32F103RET Host platform. <br>

EmberZNet 4.5.0 - Document 120-3025-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:12:53 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
