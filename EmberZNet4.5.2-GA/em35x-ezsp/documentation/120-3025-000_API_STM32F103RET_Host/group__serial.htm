<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the STM32F103RET Host platform: Serial UART Communication</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
<div class="contents">
<h1>Serial UART Communication<br/>
<small>
[<a class="el" href="group__peripherals.htm">Sample APIs for Peripheral Access</a>]</small>
</h1>
<p>This API contains the common HAL interfaces that hosts must implement for the high-level serial code.  
<a href="#_details">More...</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Modules</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__stm32f103ret__uart.htm">STM32F103RET Specific UART</a></td></tr>
<tr><td colspan="2"><h2>Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a> { <br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd">DEFINE_BAUD</a>
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga2ef5202380ba5c66c597f205203ca233">NameOfType</a> { <br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815">DEFINE_PARITY</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815">DEFINE_PARITY</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__serial.htm#gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815">DEFINE_PARITY</a>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2>Serial HAL APIs</h2></td></tr>
<tr><td colspan="2"><p><a class="anchor" id="amgrp778efa1e462aba92b3616d2c1883aca1"></a> These functions must be implemented by the HAL in order for the serial code to operate. Only the higher-level serial code uses these functions, so they should not be called directly. The HAL should also implement the appropriate interrupt handlers to drain the TX queues and fill the RX FIFO queue, as necessary. </p>
<br/><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga34c407551884ddac42d8db59b39f4ba8">halInternalUartInit</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> port, <a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a> rate, SerialParity parity, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> stopBits)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37">int16u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga58eb9d5e19caf7941d487aa8d9198f71">halInternalPrintfWriteAvailable</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37">int16u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#gab633dfe51e997336491816336822dbe7">halInternalPrintfReadAvailable</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__serial.htm#ga5544ff3159abd290d0f534074c09cc79">halInternalForcePrintf</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a> onOff)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This API contains the common HAL interfaces that hosts must implement for the high-level serial code. </p>
<p>This header describes the interface between the high-level serial APIs in <a class="el" href="app_2util_2serial_2serial_8h.htm" title="High-level serial communication functions.">app/util/serial/serial.h</a> and the low level UART implementation.</p>
<p>Some functions in this file return an <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec" title="Return type for Ember functions.">EmberStatus</a> value. See <a class="el" href="error-def_8h.htm" title="Return-code definitions for EmberZNet stack API functions.">error-def.h</a> for definitions of all <a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec" title="Return type for Ember functions.">EmberStatus</a> return values.</p>
<p>See serial.h for source code. </p>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga79e9d2305515318a1ae0ab5aaffd6fcb"></a><!-- doxytag: member="hal/host/serial.h::SerialBaudRate" ref="ga79e9d2305515318a1ae0ab5aaffd6fcb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Assign numerical values for variables that hold Baud Rate parameters. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd"></a><!-- doxytag: member="DEFINE_BAUD" ref="gga79e9d2305515318a1ae0ab5aaffd6fcbaddd7d1b8d46d2e29d36ba073b1ea8dcd" args="" -->DEFINE_BAUD</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="hal_2host_2serial_8h_source.htm#l00033">33</a> of file <a class="el" href="hal_2host_2serial_8h_source.htm">hal/host/serial.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga2ef5202380ba5c66c597f205203ca233"></a><!-- doxytag: member="hal/host/serial.h::NameOfType" ref="ga2ef5202380ba5c66c597f205203ca233" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__serial.htm#ga2ef5202380ba5c66c597f205203ca233">NameOfType</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Assign numerical values for the types of parity. Use for variables that hold Parity parameters. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815"></a><!-- doxytag: member="DEFINE_PARITY" ref="gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815" args="" -->DEFINE_PARITY</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815"></a><!-- doxytag: member="DEFINE_PARITY" ref="gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815" args="" -->DEFINE_PARITY</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815"></a><!-- doxytag: member="DEFINE_PARITY" ref="gga2ef5202380ba5c66c597f205203ca233a9569a17323e2dd2a5bb1db6a96621815" args="" -->DEFINE_PARITY</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="hal_2host_2serial_8h_source.htm#l00069">69</a> of file <a class="el" href="hal_2host_2serial_8h_source.htm">hal/host/serial.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga34c407551884ddac42d8db59b39f4ba8"></a><!-- doxytag: member="hal/host/serial.h::halInternalUartInit" ref="ga34c407551884ddac42d8db59b39f4ba8" args="(int8u port, SerialBaudRate rate, SerialParity parity, int8u stopBits)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> halInternalUartInit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__serial.htm#ga79e9d2305515318a1ae0ab5aaffd6fcb">SerialBaudRate</a>&nbsp;</td>
          <td class="paramname"> <em>rate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SerialParity&nbsp;</td>
          <td class="paramname"> <em>parity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>stopBits</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initializes the UART to the given settings (same parameters as <a class="el" href="group__serial__comm.htm#gab8c8048967bbfbd0df576c91d56fc7bc" title="Initializes a serial port to a specific baud rate, parity, and number of stop bits...">emberSerialInit()</a> ). </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>port</em>&nbsp;</td><td>Serial port number (0 or 1).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rate</em>&nbsp;</td><td>Baud rate (see SerialBaudRate).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>parity</em>&nbsp;</td><td>Parity value (see SerialParity).</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>stopBits</em>&nbsp;</td><td>Number of stop bits.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>An error code if initialization failed (such as invalid baud rate), otherise EMBER_SUCCESS. </dd></dl>

</div>
</div>
<a class="anchor" id="ga58eb9d5e19caf7941d487aa8d9198f71"></a><!-- doxytag: member="hal/host/serial.h::halInternalPrintfWriteAvailable" ref="ga58eb9d5e19caf7941d487aa8d9198f71" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37">int16u</a> halInternalPrintfWriteAvailable </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns the number bytes available in the transmit queue when using the EMBER_SERIAL_USE_STDIO variant of the Ember serial library. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Number of bytes available in the transmit queue. </dd></dl>

</div>
</div>
<a class="anchor" id="gab633dfe51e997336491816336822dbe7"></a><!-- doxytag: member="hal/host/serial.h::halInternalPrintfReadAvailable" ref="gab633dfe51e997336491816336822dbe7" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37">int16u</a> halInternalPrintfReadAvailable </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns the number bytes available in the receive queue when using the EMBER_SERIAL_USE_STDIO variant of the Ember serial library. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Number of bytes available in the receive queue. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5544ff3159abd290d0f534074c09cc79"></a><!-- doxytag: member="hal/host/serial.h::halInternalForcePrintf" ref="ga5544ff3159abd290d0f534074c09cc79" args="(boolean onOff)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void halInternalForcePrintf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a>&nbsp;</td>
          <td class="paramname"> <em>onOff</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function enables/disables EMBER_SERIAL_USE_STDIO printing behavior that is compatible with <a class="el" href="group__serial__comm.htm#gadcf39db3d76b91327f9aeb7c70c04b38" title="A printf routine that takes over the specified serial port and immediately transmits...">emberSerialGuaranteedPrintf()</a> and a replacement for halInternalForceWriteUartData(). (blocking, bypass queue, and polling). </p>

</div>
</div>
</div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the STM32F103RET Host platform. <br>

EmberZNet 4.5.0 - Document 120-3025-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:12:52 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
