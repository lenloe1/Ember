<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the STM32F103RET Host platform: bootload-ezsp-utils.h Source File</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
  <div class="navpath"><a class="el" href="dir_20396ffc616a28dbb6d73622b23934c9.htm">app</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_99acc1c0b623527d651e7c133a8e2a3d.htm">util</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_e6da62c56a0435eb47722847cf2fd045.htm">bootload</a>
  </div>
<div class="contents">
<h1>bootload-ezsp-utils.h</h1><a href="bootload-ezsp-utils_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00016"></a>00016 <span class="comment">// application timers are based on quarter second intervals, each</span>
<a name="l00017"></a>00017 <span class="comment">// quarter second is measured in millisecond ticks. This value defines</span>
<a name="l00018"></a>00018 <span class="comment">// the approximate number of millisecond ticks in a quarter second.</span>
<a name="l00019"></a>00019 <span class="comment">// Account for variations in system timers.</span>
<a name="l00020"></a>00020 <span class="preprocessor">#ifdef AVR_ATMEGA_32</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define TICKS_PER_QUARTER_SECOND 225</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00023"></a><a class="code" href="group__Standalone__bootload__EZSP.htm#ga1f77ea6a4a58164fd5c6c7946f85c884">00023</a> <span class="preprocessor"></span><span class="preprocessor">#define TICKS_PER_QUARTER_SECOND 250</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="comment">// Node build info</span>
<a name="l00027"></a>00027 <span class="keyword">extern</span> <a class="code" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37" title="A typedef to make the size of the variable explicitly known.">int16u</a> <a class="code" href="group__Standalone__bootload__EZSP.htm#ga0cb0a22c8d98c2853d09bbc3a8fe80f8">nodeBlVersion</a>;
<a name="l00028"></a>00028 <span class="keyword">extern</span> <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> <a class="code" href="group__Standalone__bootload__EZSP.htm#gae4dec150e96840bccf638ef13c3273a3">nodePlat</a>;
<a name="l00029"></a>00029 <span class="keyword">extern</span> <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> <a class="code" href="group__Standalone__bootload__EZSP.htm#gad02b323780cc93c995cae418845afcbf">nodeMicro</a>;
<a name="l00030"></a>00030 <span class="keyword">extern</span> <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> <a class="code" href="group__Standalone__bootload__EZSP.htm#ga60e5260eb8c5f61f35e56e3615a24efe">nodePhy</a>;
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="comment">// Both of these need to be correctly handled in the applications&apos;s</span>
<a name="l00034"></a>00034 <span class="comment">// ezspErrorHandler().</span>
<a name="l00035"></a>00035 <span class="comment">// ezsp error info</span>
<a name="l00036"></a>00036 <span class="keyword">extern</span> EzspStatus <a class="code" href="group__Standalone__bootload__EZSP.htm#ga8af92775d78500a8a811193f55838f46">bootloadEzspLastError</a>;
<a name="l00037"></a>00037 <span class="comment">// If this is not EZSP_SUCCESS, the next call to ezspErrorHandler()</span>
<a name="l00038"></a>00038 <span class="comment">// will ignore this error.</span>
<a name="l00039"></a>00039 <span class="keyword">extern</span> EzspStatus <a class="code" href="group__Standalone__bootload__EZSP.htm#ga84f28d5ce3160eac013882ed0bc56a66">ignoreNextEzspError</a>;
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="comment">// *******************************************************************</span>
<a name="l00043"></a>00043 <span class="comment">// Callback functions used by the bootload library.</span>
<a name="l00044"></a>00044 
<a name="l00072"></a>00072 <span class="keywordtype">boolean</span> <a class="code" href="group__Standalone__bootload__EZSP.htm#gaf5c03aff191f4fe42dbaaab9c476513d" title="A callback function invoked by bootload-ezsp-utils when a bootload launch request...">hostBootloadUtilLaunchRequestHandler</a>(<a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> lqi,
<a name="l00073"></a>00073                                              <a class="code" href="group__stm32f103ret__iar__config.htm#gac2017492c2bef74dd69c73d0c3452222" title="A typedef to make the size of the variable explicitly known.">int8s</a> rssi,
<a name="l00074"></a>00074                                              <a class="code" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37" title="A typedef to make the size of the variable explicitly known.">int16u</a> manufacturerId,
<a name="l00075"></a>00075                                              <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> *hardwareTag,
<a name="l00076"></a>00076                                              <a class="code" href="group__ember__types.htm#ga02a0425b19cee073902ca89f6a16d8e1" title="EUI 64-bit ID (an IEEE address).">EmberEUI64</a> sourceEui);
<a name="l00077"></a>00077 
<a name="l00121"></a>00121 <span class="keywordtype">void</span> <a class="code" href="group__Standalone__bootload__EZSP.htm#ga1ce04e4386480634c0140090386a4aa8" title="A callback function invoked by bootload-ezsp-utils when a bootload query response...">hostBootloadUtilQueryResponseHandler</a>(<a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> lqi,
<a name="l00122"></a>00122                                           <a class="code" href="group__stm32f103ret__iar__config.htm#gac2017492c2bef74dd69c73d0c3452222" title="A typedef to make the size of the variable explicitly known.">int8s</a> rssi,
<a name="l00123"></a>00123                                           <span class="keywordtype">boolean</span> bootloaderActive,
<a name="l00124"></a>00124                                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37" title="A typedef to make the size of the variable explicitly known.">int16u</a> manufacturerId,
<a name="l00125"></a>00125                                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> *hardwareTag,
<a name="l00126"></a>00126                                           <a class="code" href="group__ember__types.htm#ga02a0425b19cee073902ca89f6a16d8e1" title="EUI 64-bit ID (an IEEE address).">EmberEUI64</a> targetEui,
<a name="l00127"></a>00127                                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> bootloaderCapabilities,
<a name="l00128"></a>00128                                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> platform,
<a name="l00129"></a>00129                                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> micro,
<a name="l00130"></a>00130                                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> phy,
<a name="l00131"></a>00131                                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37" title="A typedef to make the size of the variable explicitly known.">int16u</a> blVersion);
<a name="l00132"></a>00132 
<a name="l00140"></a>00140 <span class="keywordtype">void</span> <a class="code" href="group__Standalone__bootload__EZSP.htm#ga5239eabe3a5792b5af0c1e4bf0ca1e13" title="A callback function invoked by bootload-ezsp-utils when a NCP has finished being...">hostBootloadReinitHandler</a>(<span class="keywordtype">void</span>);
<a name="l00141"></a>00141 
<a name="l00142"></a>00142 
<a name="l00143"></a>00143 <span class="comment">// Suppport routines in the bootloader utils library</span>
<a name="l00144"></a>00144 
<a name="l00156"></a>00156 <span class="keywordtype">boolean</span> <a class="code" href="group__Standalone__bootload__EZSP.htm#gaa4c376bb2f4b0e20e92640f5dcf7cf89" title="A function to compare EUI64s.">isTheSameEui64</a>(<a class="code" href="group__ember__types.htm#ga02a0425b19cee073902ca89f6a16d8e1" title="EUI 64-bit ID (an IEEE address).">EmberEUI64</a> sourceEui, <a class="code" href="group__ember__types.htm#ga02a0425b19cee073902ca89f6a16d8e1" title="EUI 64-bit ID (an IEEE address).">EmberEUI64</a> targetEui);
<a name="l00157"></a>00157 
<a name="l00168"></a>00168 <span class="keywordtype">void</span> <a class="code" href="group__Standalone__bootload__EZSP.htm#ga335dba3dd8e1fc8a917cf7ab776da878" title="A function to display an EUI64.">printLittleEndianEui64</a>(<a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> port, <a class="code" href="group__ember__types.htm#ga02a0425b19cee073902ca89f6a16d8e1" title="EUI 64-bit ID (an IEEE address).">EmberEUI64</a> eui64);
<a name="l00169"></a>00169 
<a name="l00180"></a>00180 <span class="keywordtype">void</span> <a class="code" href="group__Standalone__bootload__EZSP.htm#gaa22bdbf5b08dde0046aef9de1e73100b" title="A function to display an EUI64.">printBigEndianEui64</a>(<a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> port, <a class="code" href="group__ember__types.htm#ga02a0425b19cee073902ca89f6a16d8e1" title="EUI 64-bit ID (an IEEE address).">EmberEUI64</a> eui64);
<a name="l00181"></a>00181 
<a name="l00199"></a>00199 <a class="code" href="group__ember__types.htm#ga333d7a94b63d29c627eb16b0667371ec" title="Return type for Ember functions.">EmberStatus</a> <a class="code" href="group__Standalone__bootload__EZSP.htm#ga7bfeec8cf5131e4aeec0234fe8a50414" title="A function to simular to emberSerialPrintf().">debugPrintf</a>(<a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> port, <a class="code" href="group__platform__common.htm#ga963f816fc88a5d8479c285ed4c630229" title="Char pointer to program memory declaration.">PGM_P</a> formatString, ...);
<a name="l00200"></a>00200 
</pre></div></div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the STM32F103RET Host platform. <br>

EmberZNet 4.5.0 - Document 120-3025-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:12:51 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
