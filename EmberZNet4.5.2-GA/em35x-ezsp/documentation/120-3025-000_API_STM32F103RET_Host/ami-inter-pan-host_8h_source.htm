<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the STM32F103RET Host platform: ami-inter-pan-host.h Source File</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
  <div class="navpath"><a class="el" href="dir_20396ffc616a28dbb6d73622b23934c9.htm">app</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_99acc1c0b623527d651e7c133a8e2a3d.htm">util</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_30f4ec98dd6b4f8bafba5ff8cd17b322.htm">zigbee-framework</a>
  </div>
<div class="contents">
<h1>ami-inter-pan-host.h</h1><a href="ami-inter-pan-host_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00015"></a>00015 <span class="preprocessor">#ifndef AMI_INTER_PAN_HOST_H</span>
<a name="l00016"></a>00016 <span class="preprocessor"></span><span class="preprocessor">#define AMI_INTER_PAN_HOST_H</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span>
<a name="l00024"></a><a class="code" href="group__message.htm#ga863e7f1949933404c860e8aef7723dc2">00024</a> <span class="preprocessor">#define INTER_PAN_UNICAST   0x03</span>
<a name="l00025"></a><a class="code" href="group__message.htm#gaa80b00a03b8376f5325d712b20a2e27a">00025</a> <span class="preprocessor"></span><span class="preprocessor">#define INTER_PAN_BROADCAST 0x0B</span>
<a name="l00026"></a><a class="code" href="group__message.htm#gaba09538bc0e840dfb88a209cf1d4ce46">00026</a> <span class="preprocessor"></span><span class="preprocessor">#define INTER_PAN_MULTICAST 0x0F</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="comment">// Frame control, sequence, dest PAN ID, dest, source PAN ID, source.</span>
<a name="l00030"></a><a class="code" href="group__message.htm#ga51be12efb9e4edc1d0132fc405380d5c">00030</a> <span class="preprocessor">#define MAX_INTER_PAN_MAC_SIZE (2 + 1 + 2 + 8 + 2 + 8)</span>
<a name="l00031"></a>00031 <span class="preprocessor"></span><span class="comment">//Short form has a short destination. </span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="comment">// NWK stub frame has two control bytes.</span>
<a name="l00034"></a><a class="code" href="group__message.htm#ga978c6b4a431e78b9b22d73fc30e8b889">00034</a> <span class="preprocessor">#define STUB_NWK_SIZE 2</span>
<a name="l00035"></a><a class="code" href="group__message.htm#ga40d7c39bfa1b3bf1385c345b851aca13">00035</a> <span class="preprocessor"></span><span class="preprocessor">#define STUB_NWK_FRAME_CONTROL 0x000B</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span>
<a name="l00037"></a>00037 <span class="comment">// APS frame control, group ID, cluster ID, profile ID</span>
<a name="l00038"></a><a class="code" href="group__message.htm#ga6ce3b454a51326c63a3a93514648283d">00038</a> <span class="preprocessor">#define MAX_STUB_APS_SIZE (1 + 2 + 2 + 2)</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00040"></a>00040 <span class="comment">// Short form has no group ID.</span>
<a name="l00041"></a><a class="code" href="group__message.htm#gae536eaf82df040ee023248a974b79953">00041</a> <span class="preprocessor">#define MAX_INTER_PAN_HEADER_SIZE \</span>
<a name="l00042"></a>00042 <span class="preprocessor"> (MAX_INTER_PAN_MAC_SIZE + STUB_NWK_SIZE + MAX_STUB_APS_SIZE)</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span>
<a name="l00048"></a>00048 <span class="keyword">typedef</span> <span class="keyword">struct </span>{
<a name="l00049"></a>00049   <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> messageType;            <span class="comment">// one of the INTER_PAN_...CAST values</span>
<a name="l00050"></a>00050 
<a name="l00051"></a>00051   <span class="comment">// MAC addressing</span>
<a name="l00052"></a>00052   <span class="comment">// For outgoing messages this is the destination.  For incoming messages</span>
<a name="l00053"></a>00053   <span class="comment">// it is the source, which always has a long address.</span>
<a name="l00054"></a>00054   <a class="code" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37" title="A typedef to make the size of the variable explicitly known.">int16u</a> panId;
<a name="l00055"></a>00055   <span class="keywordtype">boolean</span> hasLongAddress;       <span class="comment">// always TRUE for incoming messages</span>
<a name="l00056"></a>00056   <a class="code" href="group__ember__types.htm#ga83a055800b2191214f2bae6b8b905dab" title="16-bit ZigBee network address.">EmberNodeId</a> shortAddress;
<a name="l00057"></a>00057   <a class="code" href="group__ember__types.htm#ga02a0425b19cee073902ca89f6a16d8e1" title="EUI 64-bit ID (an IEEE address).">EmberEUI64</a> longAddress;
<a name="l00058"></a>00058 
<a name="l00059"></a>00059   <span class="comment">// APS data</span>
<a name="l00060"></a>00060   <a class="code" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37" title="A typedef to make the size of the variable explicitly known.">int16u</a> profileId;
<a name="l00061"></a>00061   <a class="code" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37" title="A typedef to make the size of the variable explicitly known.">int16u</a> clusterId;
<a name="l00062"></a>00062   <a class="code" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37" title="A typedef to make the size of the variable explicitly known.">int16u</a> groupId;               <span class="comment">// only used for INTER_PAN_MULTICAST</span>
<a name="l00063"></a>00063 } <a class="code" href="structInterPanHeader.htm" title="A struct for keeping track of all of the header info.">InterPanHeader</a>;
<a name="l00064"></a>00064 
<a name="l00071"></a>00071 <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> <a class="code" href="group__message.htm#ga7a9b486b6a20e47b47f52e2c6fc25b96" title="Creates an interpan message suitable for passing to emberSendRawMessage().">makeInterPanMessage</a>(<a class="code" href="structInterPanHeader.htm" title="A struct for keeping track of all of the header info.">InterPanHeader</a> *headerData,
<a name="l00072"></a>00072                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> *message,
<a name="l00073"></a>00073                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> maxLength,
<a name="l00074"></a>00074                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> *payload,
<a name="l00075"></a>00075                           <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> payloadLength);
<a name="l00076"></a>00076 
<a name="l00084"></a>00084 <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> <a class="code" href="group__message.htm#gac536883a0d31e602382cd3a6ceb0de94" title="This is meant to be called on the message and offset values passed to emberMacPassthroughMessageHand...">parseInterPanMessage</a>(<a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> *message,
<a name="l00085"></a>00085                            <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> messageLength,
<a name="l00086"></a>00086                            <a class="code" href="structInterPanHeader.htm" title="A struct for keeping track of all of the header info.">InterPanHeader</a> *headerData);
<a name="l00087"></a>00087 
<a name="l00088"></a>00088 <span class="preprocessor">#endif // AMI_INTER_PAN_HOST_H</span>
<a name="l00089"></a>00089 <span class="preprocessor"></span>
</pre></div></div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the STM32F103RET Host platform. <br>

EmberZNet 4.5.0 - Document 120-3025-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:12:51 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
