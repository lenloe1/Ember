<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the STM32F103RET Host platform: Command Interpreter 2</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
<div class="contents">
<h1>Command Interpreter 2<br/>
<small>
[<a class="el" href="group__command__interpreters.htm">Command Interpreters</a>]</small>
</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Command entry for a command table.  <a href="structEmberCommandEntry.htm#_details">More...</a><br/></td></tr>
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga8c2b776cce16ba8e6fff75b2c721b8ac">MAX_TOKEN_COUNT</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga7496f3015b2680061506bd7785c36e46">EMBER_COMMAND_INTERPRETER_CONFIGURATION_ECHO</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gaf585803ef1c923293184bbd24ac3b3cf">emberProcessCommandInput</a>(port)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga7acea4b3cbe34a91af3379be26460c83">emberCommandInterpreterEchoOn</a>()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gad9dc6bf00336b2086843b618c43020cf">emberCommandInterpreterEchoOff</a>()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gaf02c692ea6f0f2515eae353612c0c664">emberCommandInterpreterIsEchoOn</a>()</td></tr>
<tr><td colspan="2"><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef void(*&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gaae6a685e03bf1193816de6fdfc156888">CommandAction</a> )(void)</td></tr>
<tr><td colspan="2"><h2>Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a> { <br/>
&nbsp;&nbsp;<a class="el" href="group__commands2.htm#ggaaec7c86cf5b8f36193f372591927d2baa10052845164b30f4eed50406eef87def">EMBER_CMD_SUCCESS</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__commands2.htm#ggaaec7c86cf5b8f36193f372591927d2baa99b9df2353ec96c77291397d8c075a72">EMBER_CMD_ERR_PORT_PROBLEM</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__commands2.htm#ggaaec7c86cf5b8f36193f372591927d2baa952f77b5cab93244bc5f5c387db225cf">EMBER_CMD_ERR_NO_SUCH_COMMAND</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__commands2.htm#ggaaec7c86cf5b8f36193f372591927d2baab5c5f663912090d75a1f4dbf47872c42">EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__commands2.htm#ggaaec7c86cf5b8f36193f372591927d2baaac57a3355c346de0a70f4fadae1bc589">EMBER_CMD_ERR_ARGUMENT_OUT_OF_RANGE</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__commands2.htm#ggaaec7c86cf5b8f36193f372591927d2baab22b7db23789c28a8f5e2b8d8f42a78e">EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__commands2.htm#ggaaec7c86cf5b8f36193f372591927d2baa6797b75854b506dc77895ff570858ecf">EMBER_CMD_ERR_STRING_TOO_LONG</a>, 
<br/>
&nbsp;&nbsp;<a class="el" href="group__commands2.htm#ggaaec7c86cf5b8f36193f372591927d2baa5c39e7c3003579e05726c0238a8665b0">EMBER_CMD_ERR_INVALID_ARGUMENT_TYPE</a>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga1d145b3172341c6d7e9fc4573aaf5e4e">emberCommandErrorHandler</a> (<a class="el" href="group__commands2.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a> status)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gaf4fe6025e2cdcb2b7ea02c951f56dc12">emberPrintCommandUsage</a> (<a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *entry)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga3a8be4910cc0ec1e8340ff958dee9c5d">emberPrintCommandUsageNotes</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga743d5d0400ec49a46afed6ba7d37eb9e">emberPrintCommandTable</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gab5d855e4379e58bc176df18743c134ae">emberCommandReaderInit</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga66e1c9a27f07e96283f7141298f49eed">emberProcessCommandString</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *input, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> size)</td></tr>
<tr><td colspan="2"><h2>Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga6297df05837228f55b8b3ab00b34eb8d">emberCurrentCommand</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga748280e6231635371871e48bfc1be50b">emberCommandTable</a> []</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga7b835d75c04ce3e77593e493aff10b06">emberCommandInterpreter2Configuration</a></td></tr>
<tr><td colspan="2"><h2>Functions to Retrieve Arguments</h2></td></tr>
<tr><td colspan="2"><p><a class="anchor" id="amgrp6699fdf1901bd023acf41b42bcc17f12"></a> Use the following functions in your functions that process commands to retrieve arguments from the command interpreter. These functions pull out unsigned integers, signed integers, and strings, and hex strings. Index 0 is the first command argument. </p>
<br/><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga05aebcd1ffd9d69bda7b936f0cbd64b5">int32u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga949c6853d0b0c7b4484feb839966b057">emberUnsignedCommandArgument</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> index)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga36cdc07bf51be91bc9d92735b6c6695f">int16s</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga1f762ca7935d6cabcf68dfb12f011f27">emberSignedCommandArgument</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> index)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga599d65c57ead95750edccafadea5b963">emberStringCommandArgument</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#gac2017492c2bef74dd69c73d0c3452222">int8s</a> index, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *length)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga1292903c98f9c3510d8ef50c8bb23539">emberCopyStringArgument</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#gac2017492c2bef74dd69c73d0c3452222">int8s</a> index, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *destination, <a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> maxLength, <a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a> leftPad)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gab82a974479052624a3d2657e5bcf6dc1">emberCopyKeyArgument</a>(index, keyDataPointer)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#ga1d97b3a2fbcfc70c7e224c7b302ee76c">emberCopyEui64Argument</a>(index, eui64)</td></tr>
<tr><td colspan="2"><h2>Command Table Settings</h2></td></tr>
<tr><td colspan="2"><p><a class="anchor" id="amgrp8f300e80c7f092d1e5acfc3d9c21c919"></a> </p>
<br/><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gaee5bfb2bfa05c6537d2264b317ef770a">EMBER_MAX_COMMAND_ARGUMENTS</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__commands2.htm#gaa3bd86d137f069cefa4aed35b58f1c71">EMBER_COMMAND_BUFFER_LENGTH</a></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Interpret serial port commands. See command-interpreter2.c for source code.</p>
<p>See the following application usage example followed by a brief explanation. </p>
<div class="fragment"><pre class="fragment"> <span class="comment">// Usage: network form 22 0xAB12 -3 { 00 01 02 A3 A4 A5 A6 A7 }</span>
 <span class="keywordtype">void</span> formCommand(<span class="keywordtype">void</span>)
 {
   <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> channel = <a class="code" href="group__commands2.htm#ga949c6853d0b0c7b4484feb839966b057">emberUnsignedCommandArgument</a>(0);
   <a class="code" href="group__stm32f103ret__iar__config.htm#ga40790a257990626db514387099889f37" title="A typedef to make the size of the variable explicitly known.">int16u</a> panId  = <a class="code" href="group__commands2.htm#ga949c6853d0b0c7b4484feb839966b057">emberUnsignedCommandArgument</a>(1);
   <a class="code" href="group__stm32f103ret__iar__config.htm#gac2017492c2bef74dd69c73d0c3452222" title="A typedef to make the size of the variable explicitly known.">int8s</a> power   = <a class="code" href="group__commands2.htm#ga1f762ca7935d6cabcf68dfb12f011f27">emberSignedCommandArgument</a>(2);
   <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> length;
   <a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> *eui64  = <a class="code" href="group__commands2.htm#ga599d65c57ead95750edccafadea5b963">emberStringCommandArgument</a>(3, &amp;length);
   ... 
   ... call emberFormNetwork() etc
   ...
 }
 
 <span class="comment">// The main command table.</span>
 <a class="code" href="structEmberCommandEntry.htm" title="Command entry for a command table.">EmberCommandEntry</a> <a class="code" href="group__commands2.htm#ga748280e6231635371871e48bfc1be50b">emberCommandTable</a>[] = {
   { <span class="stringliteral">&quot;network&quot;</span>,  (<a class="code" href="group__commands2.htm#gaae6a685e03bf1193816de6fdfc156888">CommandAction</a>)networkCommands, <span class="stringliteral">&quot;n&quot;</span>,  <span class="stringliteral">&quot;network commands&quot;</span> },
   { <span class="stringliteral">&quot;status&quot;</span>,   statusCommand,                  <span class="stringliteral">&quot;&quot;</span>,   <span class="stringliteral">&quot;app status&quot;</span> },
   ...
   { <a class="code" href="group__stm32f103ret__iar__config.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a> }
  };

 <span class="comment">// The table of network commands.</span>
 <a class="code" href="structEmberCommandEntry.htm" title="Command entry for a command table.">EmberCommandEntry</a> networkCommands[] = {
   { <span class="stringliteral">&quot;form&quot;</span>,       formCommand, <span class="stringliteral">&quot;uvsh&quot;</span> },
   { <span class="stringliteral">&quot;join&quot;</span>,       joinCommand, <span class="stringliteral">&quot;uvsh&quot;</span> },    
   ...
   { <a class="code" href="group__stm32f103ret__iar__config.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4" title="The null pointer.">NULL</a> }
  };

 <span class="keywordtype">void</span> main(<span class="keywordtype">void</span>)
 {
    <a class="code" href="group__commands2.htm#gab5d855e4379e58bc176df18743c134ae" title="Initialize the command interpreter.">emberCommandReaderInit</a>();
    <span class="keywordflow">while</span>(0) {
      ...
      <span class="comment">// Process input and print prompt if it returns TRUE.</span>
      <span class="keywordflow">if</span> (<a class="code" href="group__commands2.htm#gaf585803ef1c923293184bbd24ac3b3cf" title="Process input coming in on the given serial port.">emberProcessCommandInput</a>(serialPort)) {
         <a class="code" href="group__serial__comm.htm#ga6f1d724a898f91deb001d0366edc3f79" title="Printf for printing on a specified port. Supports the following format specifiers:%%...">emberSerialPrintf</a>(1, <span class="stringliteral">&quot;%p&gt;&quot;</span>, PROMPT);
      }
      ...
    }
 }
</pre></div><ol type="1">
<li>Applications specify the commands that can be interpreted by defining the emberCommandTable array of type <a class="el" href="structEmberCommandEntry.htm" title="Command entry for a command table.">EmberCommandEntry</a>. The table includes the following information for each command:<ol type="a">
<li>The full command name.</li>
<li>Your application's function name that implements the command.</li>
<li>An <a class="el" href="structEmberCommandEntry.htm#aefb9505b320fd93aadc007936d23225a">EmberCommandEntry::argumentTypes</a> string specifies the number and types of arguments the command accepts. See argumentTypes for details.</li>
<li>A description string explains the command.</li>
</ol>
</li>
<li>A default error handler <a class="el" href="group__commands2.htm#ga1d145b3172341c6d7e9fc4573aaf5e4e">emberCommandErrorHandler()</a> is provided to deal with incorrect command input. Applications may override it.</li>
<li>The application calls <a class="el" href="group__commands2.htm#gab5d855e4379e58bc176df18743c134ae" title="Initialize the command interpreter.">emberCommandReaderInit()</a> to initalize, and <a class="el" href="group__commands2.htm#gaf585803ef1c923293184bbd24ac3b3cf" title="Process input coming in on the given serial port.">emberProcessCommandInput()</a> in its main loop.</li>
<li>Within the application's command functions, use emberXXXCommandArgument() functions to retrieve command arguments.</li>
</ol>
<p>The command interpreter does extensive processing and validation of the command input before calling the function that implements the command. It checks that the number, type, syntax, and range of all arguments are correct. It performs any conversions necessary (for example, converting integers and strings input in hexadecimal notation into the corresponding bytes), so that no additional parsing is necessary within command functions. If there is an error in the command input, <a class="el" href="group__commands2.htm#ga1d145b3172341c6d7e9fc4573aaf5e4e">emberCommandErrorHandler()</a> is called rather than a command function.</p>
<p>The command interpreter allows inexact matches of command names. The input command may be either shorter or longer than the actual command. However, if more than one inexact match is found and there is no exact match, an error of type EMBER_CMD_ERR_NO_SUCH_COMMAND will be generated. To disable this feature, define EMBER_REQUIRE_EXACT_COMMAND_NAME in the application configuration header. </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="gaee5bfb2bfa05c6537d2264b317ef770a"></a><!-- doxytag: member="command&#45;interpreter2.h::EMBER_MAX_COMMAND_ARGUMENTS" ref="gaee5bfb2bfa05c6537d2264b317ef770a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_MAX_COMMAND_ARGUMENTS</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The maximum number of arguments a command can have. A nested command counts as an argument. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00104">104</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaa3bd86d137f069cefa4aed35b58f1c71"></a><!-- doxytag: member="command&#45;interpreter2.h::EMBER_COMMAND_BUFFER_LENGTH" ref="gaa3bd86d137f069cefa4aed35b58f1c71" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_COMMAND_BUFFER_LENGTH</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The maximum number of arguments a command can have. A nested command counts as an argument. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00108">108</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga8c2b776cce16ba8e6fff75b2c721b8ac"></a><!-- doxytag: member="command&#45;interpreter2.h::MAX_TOKEN_COUNT" ref="ga8c2b776cce16ba8e6fff75b2c721b8ac" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MAX_TOKEN_COUNT</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>// END name group </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00115">115</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga7496f3015b2680061506bd7785c36e46"></a><!-- doxytag: member="command&#45;interpreter2.h::EMBER_COMMAND_INTERPRETER_CONFIGURATION_ECHO" ref="ga7496f3015b2680061506bd7785c36e46" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_COMMAND_INTERPRETER_CONFIGURATION_ECHO</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00183">183</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gab82a974479052624a3d2657e5bcf6dc1"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCopyKeyArgument" ref="gab82a974479052624a3d2657e5bcf6dc1" args="(index, keyDataPointer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCopyKeyArgument</td>
          <td>(</td>
          <td class="paramtype">index, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">keyDataPointer&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>A convenience macro for copying security key arguments to an <a class="el" href="structEmberKeyData.htm" title="This data structure contains the key data that is passed into various other functions...">EmberKeyData</a> pointer. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00251">251</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga1d97b3a2fbcfc70c7e224c7b302ee76c"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCopyEui64Argument" ref="ga1d97b3a2fbcfc70c7e224c7b302ee76c" args="(index, eui64)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCopyEui64Argument</td>
          <td>(</td>
          <td class="paramtype">index, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">eui64&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>A convenience macro for copying eui64 arguments to an EmberEUI64. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00258">258</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaf585803ef1c923293184bbd24ac3b3cf"></a><!-- doxytag: member="command&#45;interpreter2.h::emberProcessCommandInput" ref="gaf585803ef1c923293184bbd24ac3b3cf" args="(port)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberProcessCommandInput</td>
          <td>(</td>
          <td class="paramtype">port&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Process input coming in on the given serial port. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>TRUE if an end of line character was read. If the application uses a command line prompt, this indicates it is time to print the prompt. <div class="fragment"><pre class="fragment"> <span class="keywordtype">void</span> <a class="code" href="group__commands2.htm#gaf585803ef1c923293184bbd24ac3b3cf" title="Process input coming in on the given serial port.">emberProcessCommandInput</a>(<a class="code" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749" title="A typedef to make the size of the variable explicitly known.">int8u</a> port);
</pre></div> </dd></dl>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00291">291</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga7acea4b3cbe34a91af3379be26460c83"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCommandInterpreterEchoOn" ref="ga7acea4b3cbe34a91af3379be26460c83" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCommandInterpreterEchoOn</td>
          <td>(</td>
&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Turn echo of command line on. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00296">296</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gad9dc6bf00336b2086843b618c43020cf"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCommandInterpreterEchoOff" ref="gad9dc6bf00336b2086843b618c43020cf" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCommandInterpreterEchoOff</td>
          <td>(</td>
&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Turn echo of command line off. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00302">302</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaf02c692ea6f0f2515eae353612c0c664"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCommandInterpreterIsEchoOn" ref="gaf02c692ea6f0f2515eae353612c0c664" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define emberCommandInterpreterIsEchoOn</td>
          <td>(</td>
&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if echo is on, false otherwise. </p>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00308">308</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="gaae6a685e03bf1193816de6fdfc156888"></a><!-- doxytag: member="command&#45;interpreter2.h::CommandAction" ref="gaae6a685e03bf1193816de6fdfc156888" args=")(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* <a class="el" href="group__commands2.htm#gaae6a685e03bf1193816de6fdfc156888">CommandAction</a>)(void)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00117">117</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="gaaec7c86cf5b8f36193f372591927d2ba"></a><!-- doxytag: member="command&#45;interpreter2.h::EmberCommandStatus" ref="gaaec7c86cf5b8f36193f372591927d2ba" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__commands2.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Command error states. </p>
<p>If you change this list, ensure you also change the strings that describe these errors in the array emberCommandErrorNames[] in command-interpreter.c. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa10052845164b30f4eed50406eef87def"></a><!-- doxytag: member="EMBER_CMD_SUCCESS" ref="ggaaec7c86cf5b8f36193f372591927d2baa10052845164b30f4eed50406eef87def" args="" -->EMBER_CMD_SUCCESS</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa99b9df2353ec96c77291397d8c075a72"></a><!-- doxytag: member="EMBER_CMD_ERR_PORT_PROBLEM" ref="ggaaec7c86cf5b8f36193f372591927d2baa99b9df2353ec96c77291397d8c075a72" args="" -->EMBER_CMD_ERR_PORT_PROBLEM</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa952f77b5cab93244bc5f5c387db225cf"></a><!-- doxytag: member="EMBER_CMD_ERR_NO_SUCH_COMMAND" ref="ggaaec7c86cf5b8f36193f372591927d2baa952f77b5cab93244bc5f5c387db225cf" args="" -->EMBER_CMD_ERR_NO_SUCH_COMMAND</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baab5c5f663912090d75a1f4dbf47872c42"></a><!-- doxytag: member="EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS" ref="ggaaec7c86cf5b8f36193f372591927d2baab5c5f663912090d75a1f4dbf47872c42" args="" -->EMBER_CMD_ERR_WRONG_NUMBER_OF_ARGUMENTS</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baaac57a3355c346de0a70f4fadae1bc589"></a><!-- doxytag: member="EMBER_CMD_ERR_ARGUMENT_OUT_OF_RANGE" ref="ggaaec7c86cf5b8f36193f372591927d2baaac57a3355c346de0a70f4fadae1bc589" args="" -->EMBER_CMD_ERR_ARGUMENT_OUT_OF_RANGE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baab22b7db23789c28a8f5e2b8d8f42a78e"></a><!-- doxytag: member="EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR" ref="ggaaec7c86cf5b8f36193f372591927d2baab22b7db23789c28a8f5e2b8d8f42a78e" args="" -->EMBER_CMD_ERR_ARGUMENT_SYNTAX_ERROR</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa6797b75854b506dc77895ff570858ecf"></a><!-- doxytag: member="EMBER_CMD_ERR_STRING_TOO_LONG" ref="ggaaec7c86cf5b8f36193f372591927d2baa6797b75854b506dc77895ff570858ecf" args="" -->EMBER_CMD_ERR_STRING_TOO_LONG</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaaec7c86cf5b8f36193f372591927d2baa5c39e7c3003579e05726c0238a8665b0"></a><!-- doxytag: member="EMBER_CMD_ERR_INVALID_ARGUMENT_TYPE" ref="ggaaec7c86cf5b8f36193f372591927d2baa5c39e7c3003579e05726c0238a8665b0" args="" -->EMBER_CMD_ERR_INVALID_ARGUMENT_TYPE</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="command-interpreter2_8h_source.htm#l00191">191</a> of file <a class="el" href="command-interpreter2_8h_source.htm">command-interpreter2.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga949c6853d0b0c7b4484feb839966b057"></a><!-- doxytag: member="command&#45;interpreter2.h::emberUnsignedCommandArgument" ref="ga949c6853d0b0c7b4484feb839966b057" args="(int8u index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga05aebcd1ffd9d69bda7b936f0cbd64b5">int32u</a> emberUnsignedCommandArgument </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>index</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Retrieves unsigned integer arguments. </p>

</div>
</div>
<a class="anchor" id="ga1f762ca7935d6cabcf68dfb12f011f27"></a><!-- doxytag: member="command&#45;interpreter2.h::emberSignedCommandArgument" ref="ga1f762ca7935d6cabcf68dfb12f011f27" args="(int8u index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga36cdc07bf51be91bc9d92735b6c6695f">int16s</a> emberSignedCommandArgument </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>index</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Retrieves signed integer arguments. </p>

</div>
</div>
<a class="anchor" id="ga599d65c57ead95750edccafadea5b963"></a><!-- doxytag: member="command&#45;interpreter2.h::emberStringCommandArgument" ref="ga599d65c57ead95750edccafadea5b963" args="(int8s index, int8u *length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>* emberStringCommandArgument </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#gac2017492c2bef74dd69c73d0c3452222">int8s</a>&nbsp;</td>
          <td class="paramname"> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>length</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Retrieve quoted string or hex string arguments. Hex strings have already been converted into binary. To retrieve the name of the command itself, use an index of -1. For example, to retrieve the first character of the command, do: int8u firstChar = emberStringCommandArgument(-1, NULL)[0]. If the command is nested, an index of -2, -3, etc will work to retrieve the higher level command names. </p>

</div>
</div>
<a class="anchor" id="ga1292903c98f9c3510d8ef50c8bb23539"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCopyStringArgument" ref="ga1292903c98f9c3510d8ef50c8bb23539" args="(int8s index, int8u *destination, int8u maxLength, boolean leftPad)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> emberCopyStringArgument </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#gac2017492c2bef74dd69c73d0c3452222">int8s</a>&nbsp;</td>
          <td class="paramname"> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>destination</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>maxLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a>&nbsp;</td>
          <td class="paramname"> <em>leftPad</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Copies the string argument to the given destination up to maxLength. If the argument length is nonzero but less than maxLength and leftPad is TRUE, leading zeroes are prepended to bring the total length of the target up to maxLength. If the argument is longer than the maxLength, it is truncated to maxLength. Returns the minimum of the argument length and maxLength.</p>
<p>This function is commonly used for reading in hex strings such as EUI64 or key data and left padding them with zeroes. See <a class="el" href="group__commands2.htm#gab82a974479052624a3d2657e5bcf6dc1">emberCopyKeyArgument</a> and <a class="el" href="group__commands2.htm#ga1d97b3a2fbcfc70c7e224c7b302ee76c">emberCopyEui64Argument</a> for convenience macros for this purpose. </p>

</div>
</div>
<a class="anchor" id="ga1d145b3172341c6d7e9fc4573aaf5e4e"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCommandErrorHandler" ref="ga1d145b3172341c6d7e9fc4573aaf5e4e" args="(EmberCommandStatus status)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCommandErrorHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__commands2.htm#gaaec7c86cf5b8f36193f372591927d2ba">EmberCommandStatus</a>&nbsp;</td>
          <td class="paramname"> <em>status</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>// END name group The application may implement this handler. To override the default handler, define EMBER_APPLICATION_HAS_COMMAND_ERROR_HANDLER in the CONFIGURATION_HEADER. Defining this will also remove the help functions <a class="el" href="group__commands2.htm#gaf4fe6025e2cdcb2b7ea02c951f56dc12">emberPrintCommandUsage()</a>, <a class="el" href="group__commands2.htm#ga3a8be4910cc0ec1e8340ff958dee9c5d">emberPrintCommandUsageNotes()</a>, and <a class="el" href="group__commands2.htm#ga743d5d0400ec49a46afed6ba7d37eb9e">emberPrintCommandTable()</a>. </p>

</div>
</div>
<a class="anchor" id="gaf4fe6025e2cdcb2b7ea02c951f56dc12"></a><!-- doxytag: member="command&#45;interpreter2.h::emberPrintCommandUsage" ref="gaf4fe6025e2cdcb2b7ea02c951f56dc12" args="(EmberCommandEntry *entry)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberPrintCommandUsage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> *&nbsp;</td>
          <td class="paramname"> <em>entry</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga3a8be4910cc0ec1e8340ff958dee9c5d"></a><!-- doxytag: member="command&#45;interpreter2.h::emberPrintCommandUsageNotes" ref="ga3a8be4910cc0ec1e8340ff958dee9c5d" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberPrintCommandUsageNotes </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga743d5d0400ec49a46afed6ba7d37eb9e"></a><!-- doxytag: member="command&#45;interpreter2.h::emberPrintCommandTable" ref="ga743d5d0400ec49a46afed6ba7d37eb9e" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberPrintCommandTable </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gab5d855e4379e58bc176df18743c134ae"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCommandReaderInit" ref="gab5d855e4379e58bc176df18743c134ae" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCommandReaderInit </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initialize the command interpreter. </p>

</div>
</div>
<a class="anchor" id="ga66e1c9a27f07e96283f7141298f49eed"></a><!-- doxytag: member="command&#45;interpreter2.h::emberProcessCommandString" ref="ga66e1c9a27f07e96283f7141298f49eed" args="(int8u *input, int8u size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a> emberProcessCommandString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>size</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Process the given string as a command. </p>

</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="ga6297df05837228f55b8b3ab00b34eb8d"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCurrentCommand" ref="ga6297df05837228f55b8b3ab00b34eb8d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a>* <a class="el" href="group__commands2.htm#ga6297df05837228f55b8b3ab00b34eb8d">emberCurrentCommand</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>A pointer to the currently matching command entry. Only valid from within a command function. If the original command was nested, points to the final (non-nested) command entry. </p>

</div>
</div>
<a class="anchor" id="ga748280e6231635371871e48bfc1be50b"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCommandTable" ref="ga748280e6231635371871e48bfc1be50b" args="[]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structEmberCommandEntry.htm">EmberCommandEntry</a> <a class="el" href="group__commands2.htm#ga748280e6231635371871e48bfc1be50b">emberCommandTable</a>[]</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga7b835d75c04ce3e77593e493aff10b06"></a><!-- doxytag: member="command&#45;interpreter2.h::emberCommandInterpreter2Configuration" ref="ga7b835d75c04ce3e77593e493aff10b06" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga29edc2328533c8dbc46be2d7b654c749">int8u</a> <a class="el" href="group__commands2.htm#ga7b835d75c04ce3e77593e493aff10b06">emberCommandInterpreter2Configuration</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Configuration byte. </p>

</div>
</div>
</div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the STM32F103RET Host platform. <br>

EmberZNet 4.5.0 - Document 120-3025-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:12:53 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
