<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the STM32F103RET Host platform: Smart Energy Security</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
<div class="contents">
<h1>Smart Energy Security<br/>
<small>
[<a class="el" href="group__common.htm">Ember Common</a>]</small>
</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga3efb8a9cb70bdb0d3254bd40859416b4">emberGetCertificate</a> (<a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *result)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#gab8952f016f5e33511f30aeef69424d51">emberGenerateCbkeKeys</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga45c3df76fe76179c9f5bc128dab5af66">emberCalculateSmacs</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a> amInitiator, <a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *partnerCert, <a class="el" href="structEmberPublicKeyData.htm">EmberPublicKeyData</a> *partnerEphemeralPublicKey)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga33fdf8ca22f587cff4f36441cd16b51c">emberClearTemporaryDataMaybeStoreLinkKey</a> (<a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a> storeLinkKey)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga3948efc511fa4fdce242354f04d2a334">emberDsaSign</a> (<a class="el" href="group__ember__types.htm#ga6ed7385454b72470ac4daaa87fc8539c">EmberMessageBuffer</a> messageToSign)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga269e2ce38517a43b32f9f4794636a1fe">emberGenerateCbkeKeysHandler</a> (<a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> status, <a class="el" href="structEmberPublicKeyData.htm">EmberPublicKeyData</a> *ephemeralPublicKey)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga186c463a1da518f9b61a80a0417fac1a">emberCalculateSmacsHandler</a> (<a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> status, <a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *initiatorSmac, <a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *responderSmac)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#gac60166a5cb371cce8b9ff69111198073">emberDsaSignHandler</a> (<a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> status, <a class="el" href="group__ember__types.htm#ga6ed7385454b72470ac4daaa87fc8539c">EmberMessageBuffer</a> signedMessage)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga5fc274a1307fa7440b1b6cd7e1f64932">emberSetPreinstalledCbkeData</a> (<a class="el" href="structEmberPublicKeyData.htm">EmberPublicKeyData</a> *caPublic, <a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *myCert, <a class="el" href="structEmberPrivateKeyData.htm">EmberPrivateKeyData</a> *myKey)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#gaf69d14481a57514f02b84ca472ace8f2">emberGetStackCertificateEui64</a> (<a class="el" href="group__ember__types.htm#ga02a0425b19cee073902ca89f6a16d8e1">EmberEUI64</a> certEui64)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga4b69802e7375290ee47918eb80b0572a">emberDsaVerify</a> (<a class="el" href="structEmberMessageDigest.htm">EmberMessageDigest</a> *digest, <a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *signerCertificate, <a class="el" href="structEmberSignatureData.htm">EmberSignatureData</a> *receivedSig)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__smart__energy__security.htm#ga758cb85bf29bcd41a7dd79007b2a2b35">emberDsaVerifyHandler</a> (<a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> status)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>This file describes functionality for Certificate Based Key Exchange (CBKE). This is used by Smart Energy devices to generate and store ephemeral ECC keys, derive the SMACs for the Key establishment protocol, and sign messages using their private key for the Demand Response Load Control client cluster.</p>
<p>See <a class="el" href="cbke-crypto-engine_8h.htm" title="EmberZNet Smart Energy security API. See Smart Energy Security for documention.">cbke-crypto-engine.h</a> for source code. </p>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga3efb8a9cb70bdb0d3254bd40859416b4"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberGetCertificate" ref="ga3efb8a9cb70bdb0d3254bd40859416b4" args="(EmberCertificateData *result)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberGetCertificate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *&nbsp;</td>
          <td class="paramname"> <em>result</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Retrieves the implicit certificate stored in the MFG tokens of the device. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>result</em>&nbsp;</td><td>A pointer to an <a class="el" href="structEmberCertificateData.htm" title="This data structure contains the certificate data that is used for Certificate Based...">EmberCertificateData</a> structure where the retrieved certificate will be stored.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> if the certificate was successfully retrieved. <a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message.">EMBER_ERR_FATAL</a> if the token contains uninitialized data. </dd></dl>

</div>
</div>
<a class="anchor" id="gab8952f016f5e33511f30aeef69424d51"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberGenerateCbkeKeys" ref="gab8952f016f5e33511f30aeef69424d51" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberGenerateCbkeKeys </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function begins the process of generating an ephemeral public/private ECC key pair. </p>
<p>If no other ECC operation is going on, it will immediately return with <a class="el" href="group__status__codes.htm#gaf9e1de471e0c64712b06564e6658ca9e" title="The stack accepted the command and is currently processing the request. The results...">EMBER_OPERATION_IN_PROGRESS</a>. It will delay a period of time to let APS retries take place, but then it will shutdown the radio and consume the CPU processing until the key generation is complete. This may take up to 1 second.</p>
<p>The generated results of the key generation is returned via <a class="el" href="group__smart__energy__security.htm#ga269e2ce38517a43b32f9f4794636a1fe">emberGenerateCbkeKeysHandler()</a>.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd><a class="el" href="group__status__codes.htm#gaf9e1de471e0c64712b06564e6658ca9e" title="The stack accepted the command and is currently processing the request. The results...">EMBER_OPERATION_IN_PROGRESS</a> if the stack has queued up the operation for execution. </dd></dl>

</div>
</div>
<a class="anchor" id="ga45c3df76fe76179c9f5bc128dab5af66"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberCalculateSmacs" ref="ga45c3df76fe76179c9f5bc128dab5af66" args="(boolean amInitiator, EmberCertificateData *partnerCert, EmberPublicKeyData *partnerEphemeralPublicKey)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberCalculateSmacs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a>&nbsp;</td>
          <td class="paramname"> <em>amInitiator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *&nbsp;</td>
          <td class="paramname"> <em>partnerCert</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberPublicKeyData.htm">EmberPublicKeyData</a> *&nbsp;</td>
          <td class="paramname"> <em>partnerEphemeralPublicKey</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function will begin the process of generating the shared secret, the new link key, and the Secured Message Authentication Code (SMAC). </p>
<p>If no other ECC operation is going on, it will immediately return with <a class="el" href="group__status__codes.htm#gaf9e1de471e0c64712b06564e6658ca9e" title="The stack accepted the command and is currently processing the request. The results...">EMBER_OPERATION_IN_PROGRESS</a>. It will delay a period of time to let APS retries take place, but then it will shutdown the radio and consume the CPU processing until SMACs calculations are complete. This may take up to 3.5 seconds.</p>
<p>The calculated SMACS are returned via <a class="el" href="group__smart__energy__security.htm#ga186c463a1da518f9b61a80a0417fac1a">emberCalculateSmacsHandler()</a>.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>amInitiator</em>&nbsp;</td><td>This boolean indicates whether or not the device is the one that initiated the CBKE with the remote device, or whether it was the responder to the exchange. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>partnerCert</em>&nbsp;</td><td>A pointer to an <a class="el" href="structEmberCertificateData.htm" title="This data structure contains the certificate data that is used for Certificate Based...">EmberCertificateData</a> structure that contains the CBKE partner's implicit certificate. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>partnerEphemeralPublicKey</em>&nbsp;</td><td>A pointer to an <a class="el" href="structEmberPublicKeyData.htm" title="This data structure contains the public key data that is used for Certificate Based...">EmberPublicKeyData</a> structure that contains the CBKE partner's ephemeral public key.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><a class="el" href="group__status__codes.htm#gaf9e1de471e0c64712b06564e6658ca9e" title="The stack accepted the command and is currently processing the request. The results...">EMBER_OPERATION_IN_PROGRESS</a> if the stack has queued up the operation for execution. </dd></dl>

</div>
</div>
<a class="anchor" id="ga33fdf8ca22f587cff4f36441cd16b51c"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberClearTemporaryDataMaybeStoreLinkKey" ref="ga33fdf8ca22f587cff4f36441cd16b51c" args="(boolean storeLinkKey)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberClearTemporaryDataMaybeStoreLinkKey </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a>&nbsp;</td>
          <td class="paramname"> <em>storeLinkKey</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>This function should be called when all CBKE operations are done. Any temporary data created during calls to <a class="el" href="group__smart__energy__security.htm#gab8952f016f5e33511f30aeef69424d51" title="This function begins the process of generating an ephemeral public/private ECC key...">emberGenerateCbkeKeys()</a> or <a class="el" href="group__smart__energy__security.htm#ga45c3df76fe76179c9f5bc128dab5af66" title="This function will begin the process of generating the shared secret, the new link...">emberCalculateSmacs()</a> is wiped out. If the local device has validated that the partner device has generated the same SMACS as itself, it should set 'storeLinkKey' to TRUE. Otherwise it should pass in FALSE. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>storeLinkKey</em>&nbsp;</td><td>This tells the stack whether to store the newly generated link key, or discard it.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>If storeLinkkey is FALSE, this function returns <a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message.">EMBER_ERR_FATAL</a> always. If storeLinkKey is TRUE, then this function returns the results of whether or not the link key was stored. <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message.">EMBER_SUCCESS</a> is returned when key was stored successfully. </dd></dl>

</div>
</div>
<a class="anchor" id="ga3948efc511fa4fdce242354f04d2a334"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberDsaSign" ref="ga3948efc511fa4fdce242354f04d2a334" args="(EmberMessageBuffer messageToSign)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberDsaSign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga6ed7385454b72470ac4daaa87fc8539c">EmberMessageBuffer</a>&nbsp;</td>
          <td class="paramname"> <em>messageToSign</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga269e2ce38517a43b32f9f4794636a1fe"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberGenerateCbkeKeysHandler" ref="ga269e2ce38517a43b32f9f4794636a1fe" args="(EmberStatus status, EmberPublicKeyData *ephemeralPublicKey)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberGenerateCbkeKeysHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td>
          <td class="paramname"> <em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberPublicKeyData.htm">EmberPublicKeyData</a> *&nbsp;</td>
          <td class="paramname"> <em>ephemeralPublicKey</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga186c463a1da518f9b61a80a0417fac1a"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberCalculateSmacsHandler" ref="ga186c463a1da518f9b61a80a0417fac1a" args="(EmberStatus status, EmberSmacData *initiatorSmac, EmberSmacData *responderSmac)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberCalculateSmacsHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td>
          <td class="paramname"> <em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *&nbsp;</td>
          <td class="paramname"> <em>initiatorSmac</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberSmacData.htm">EmberSmacData</a> *&nbsp;</td>
          <td class="paramname"> <em>responderSmac</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gac60166a5cb371cce8b9ff69111198073"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberDsaSignHandler" ref="gac60166a5cb371cce8b9ff69111198073" args="(EmberStatus status, EmberMessageBuffer signedMessage)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberDsaSignHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td>
          <td class="paramname"> <em>status</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga6ed7385454b72470ac4daaa87fc8539c">EmberMessageBuffer</a>&nbsp;</td>
          <td class="paramname"> <em>signedMessage</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga5fc274a1307fa7440b1b6cd7e1f64932"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberSetPreinstalledCbkeData" ref="ga5fc274a1307fa7440b1b6cd7e1f64932" args="(EmberPublicKeyData *caPublic, EmberCertificateData *myCert, EmberPrivateKeyData *myKey)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberSetPreinstalledCbkeData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberPublicKeyData.htm">EmberPublicKeyData</a> *&nbsp;</td>
          <td class="paramname"> <em>caPublic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *&nbsp;</td>
          <td class="paramname"> <em>myCert</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberPrivateKeyData.htm">EmberPrivateKeyData</a> *&nbsp;</td>
          <td class="paramname"> <em>myKey</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gaf69d14481a57514f02b84ca472ace8f2"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberGetStackCertificateEui64" ref="gaf69d14481a57514f02b84ca472ace8f2" args="(EmberEUI64 certEui64)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__stm32f103ret__iar__config.htm#ga9c639bd343606632b938f16f4adf516a">boolean</a> emberGetStackCertificateEui64 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga02a0425b19cee073902ca89f6a16d8e1">EmberEUI64</a>&nbsp;</td>
          <td class="paramname"> <em>certEui64</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga4b69802e7375290ee47918eb80b0572a"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberDsaVerify" ref="ga4b69802e7375290ee47918eb80b0572a" args="(EmberMessageDigest *digest, EmberCertificateData *signerCertificate, EmberSignatureData *receivedSig)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a> emberDsaVerify </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structEmberMessageDigest.htm">EmberMessageDigest</a> *&nbsp;</td>
          <td class="paramname"> <em>digest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberCertificateData.htm">EmberCertificateData</a> *&nbsp;</td>
          <td class="paramname"> <em>signerCertificate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberSignatureData.htm">EmberSignatureData</a> *&nbsp;</td>
          <td class="paramname"> <em>receivedSig</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga758cb85bf29bcd41a7dd79007b2a2b35"></a><!-- doxytag: member="cbke&#45;crypto&#45;engine.h::emberDsaVerifyHandler" ref="ga758cb85bf29bcd41a7dd79007b2a2b35" args="(EmberStatus status)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberDsaVerifyHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="error_8h.htm#a333d7a94b63d29c627eb16b0667371ec">EmberStatus</a>&nbsp;</td>
          <td class="paramname"> <em>status</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
</div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the STM32F103RET Host platform. <br>

EmberZNet 4.5.0 - Document 120-3025-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:12:52 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
