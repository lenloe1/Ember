<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the PC Host platform: Cyclic Redundancy Code (CRC)</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
<div class="contents">
<h1>Cyclic Redundancy Code (CRC)<br/>
<small>
[<a class="el" href="group__hal__util.htm">HAL Utilities</a>]</small>
</h1>
<p>Functions that provide access to cyclic redundancy code (CRC) calculation. See <a class="el" href="crc_8h.htm">crc.h</a> for source code.  
<a href="#_details">More...</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__crc.htm#ga4247aa06c95245acf1910485862a4f29">INITIAL_CRC</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__crc.htm#gae961195bf1059e8d77843c9c04004834">CRC32_START</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__crc.htm#ga9b203cc3cbadb0d32d864365b764731c">CRC32_END</a></td></tr>
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f">int16u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__crc.htm#ga754f3fa8913360e99b7424af561b1abc">halCommonCrc16</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> newByte, <a class="el" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f">int16u</a> prevResult)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3">int32u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__crc.htm#gaf060fef1a4031b56e92e2d6a2eb71455">halCommonCrc32</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> newByte, <a class="el" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3">int32u</a> prevResult)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Functions that provide access to cyclic redundancy code (CRC) calculation. See <a class="el" href="crc_8h.htm">crc.h</a> for source code. </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga4247aa06c95245acf1910485862a4f29"></a><!-- doxytag: member="crc.h::INITIAL_CRC" ref="ga4247aa06c95245acf1910485862a4f29" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define INITIAL_CRC</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="crc_8h_source.htm#l00049">49</a> of file <a class="el" href="crc_8h_source.htm">crc.h</a>.</p>

</div>
</div>
<a class="anchor" id="gae961195bf1059e8d77843c9c04004834"></a><!-- doxytag: member="crc.h::CRC32_START" ref="gae961195bf1059e8d77843c9c04004834" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CRC32_START</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="crc_8h_source.htm#l00050">50</a> of file <a class="el" href="crc_8h_source.htm">crc.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga9b203cc3cbadb0d32d864365b764731c"></a><!-- doxytag: member="crc.h::CRC32_END" ref="ga9b203cc3cbadb0d32d864365b764731c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CRC32_END</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="crc_8h_source.htm#l00051">51</a> of file <a class="el" href="crc_8h_source.htm">crc.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga754f3fa8913360e99b7424af561b1abc"></a><!-- doxytag: member="crc.h::halCommonCrc16" ref="ga754f3fa8913360e99b7424af561b1abc" args="(int8u newByte, int16u prevResult)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f">int16u</a> halCommonCrc16 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>newByte</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f">int16u</a>&nbsp;</td>
          <td class="paramname"> <em>prevResult</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Calculates 16-bit cyclic redundancy code (CITT CRC 16). </p>
<p>Applies the standard CITT CRC 16 polynomial to a single byte. It should support being called first with an initial value, then repeatedly until all data is processed.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>newByte</em>&nbsp;</td><td>The new byte to be run through CRC.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>prevResult</em>&nbsp;</td><td>The previous CRC result.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The new CRC result. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf060fef1a4031b56e92e2d6a2eb71455"></a><!-- doxytag: member="crc.h::halCommonCrc32" ref="gaf060fef1a4031b56e92e2d6a2eb71455" args="(int8u newByte, int32u prevResult)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3">int32u</a> halCommonCrc32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>newByte</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3">int32u</a>&nbsp;</td>
          <td class="paramname"> <em>prevResult</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Calculates 32-bit cyclic redundancy code. </p>
<dl class="note"><dt><b>Note:</b></dt><dd>On some radios or micros, the CRC for error detection on packet data is calculated in hardware.</dd></dl>
<p>Applies a CRC32 polynomial to a single byte. It should support being called first with an initial value, then repeatedly until all data is processed.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>newByte</em>&nbsp;</td><td>The new byte to be run through CRC.</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>prevResult</em>&nbsp;</td><td>The previous CRC result.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The new CRC result. </dd></dl>

</div>
</div>
</div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the PC Host platform. <br>

EmberZNet 4.5.0 - Document 120-3026-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:13:00 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
