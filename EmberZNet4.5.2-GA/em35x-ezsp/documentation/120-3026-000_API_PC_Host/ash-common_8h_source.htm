<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the PC Host platform: ash-common.h Source File</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
  <div class="navpath"><a class="el" href="dir_928392185f3941e33d232d8d861cbeaf.htm">hal</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_4e2a585dad82a4ea0080f419c897dc8e.htm">micro</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_74f1401158ba39b948e929aa540bf261.htm">generic</a>
  </div>
<div class="contents">
<h1>ash-common.h</h1><a href="ash-common_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00010"></a>00010 <span class="preprocessor">#ifndef __ASH_COMMON_H__</span>
<a name="l00011"></a>00011 <span class="preprocessor"></span><span class="preprocessor">#define __ASH_COMMON_H__</span>
<a name="l00012"></a>00012 <span class="preprocessor"></span>
<a name="l00044"></a>00044 <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> <a class="code" href="group__ash.htm#gab530a8f247d2d64428531f11a9b47ee0" title="Builds an ASH frame. Byte stuffs the control and data fields as required, computes...">ashEncodeByte</a>(<a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> len, <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> byte, <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> *offset);
<a name="l00045"></a>00045 
<a name="l00067"></a>00067 EzspStatus <a class="code" href="group__ash.htm#gabf395b35bf8c8617a9350c90784bd548" title="Decodes and validates an ASH frame. Data is passed to it one byte at a time. Decodes...">ashDecodeByte</a>(<a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> byte, <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> *out, <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> *outLen);
<a name="l00068"></a>00068 
<a name="l00086"></a>00086 <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> <a class="code" href="group__ash.htm#ga5a46ee3a1ffbaee75261c04114e72aca" title="Randomizes array contents by XORing with an 8-bit pseudo random sequence. This reduces...">ashRandomizeArray</a>(<a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> seed, <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> *buf, <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> len);
<a name="l00087"></a>00087 
<a name="l00092"></a>00092 <span class="keywordtype">void</span> <a class="code" href="group__ash.htm#ga147d65defc87a85e45339a1abc797f00" title="Sets ashAckTimer to the specified period and starts it running.">ashStartAckTimer</a>(<span class="keywordtype">void</span>);
<a name="l00093"></a>00093 
<a name="l00097"></a>00097 <span class="keywordtype">void</span> <a class="code" href="group__ash.htm#gac77c7e1725f5e88a7918b9f7a1201df8" title="Stops and clears ashAckTimer.">ashStopAckTimer</a>(<span class="keywordtype">void</span>);
<a name="l00098"></a><a class="code" href="group__ash.htm#gac77c7e1725f5e88a7918b9f7a1201df8">00098</a> <span class="preprocessor">#define ashStopAckTimer() do {ashAckTimer = 0;} while (FALSE)</span>
<a name="l00099"></a>00099 <span class="preprocessor"></span>
<a name="l00104"></a><a class="code" href="group__ash.htm#gaddf03c2539fd08d2b1be401bd69121ea">00104</a> <span class="preprocessor">#define ashAckTimerIsRunning() (ashAckTimer != 0)</span>
<a name="l00105"></a>00105 <span class="preprocessor"></span>
<a name="l00110"></a><a class="code" href="group__ash.htm#ga197677a3180c521ab988ab7a130a916c">00110</a> <span class="preprocessor">#define ashAckTimerIsNotRunning() (ashAckTimer == 0)</span>
<a name="l00111"></a>00111 <span class="preprocessor"></span>
<a name="l00116"></a>00116 <span class="keywordtype">boolean</span> <a class="code" href="group__ash.htm#ga6177bf19c647a89752f14e00ef8ee54d" title="Indicates whether or not ashAckTimer has expired. If the timer is stopped then it...">ashAckTimerHasExpired</a>(<span class="keywordtype">void</span>);
<a name="l00117"></a>00117 
<a name="l00134"></a>00134 <span class="keywordtype">void</span> <a class="code" href="group__ash.htm#ga5558c33dfb7f3e697042d2ebf3dd227d" title="Adapts the acknowledgement timer period to the observed ACK delay. If the timer is...">ashAdjustAckPeriod</a>(<span class="keywordtype">boolean</span> expired);
<a name="l00135"></a>00135 
<a name="l00140"></a><a class="code" href="group__ash.htm#ga1d6e6532ea5d5e15d00f784739909bc7">00140</a> <span class="preprocessor">#define ashSetAckPeriod(msec)  \</span>
<a name="l00141"></a>00141 <span class="preprocessor">    do {ashAckPeriod = msec; ashAckTimer = 0;} while (FALSE)</span>
<a name="l00142"></a>00142 <span class="preprocessor"></span>
<a name="l00146"></a><a class="code" href="group__ash.htm#ga0ff23a54555245093a4e3c442f1e7a4b">00146</a> <span class="preprocessor">#define ashGetAckPeriod() (ashAckPeriod)</span>
<a name="l00147"></a>00147 <span class="preprocessor"></span>
<a name="l00151"></a><a class="code" href="group__ash.htm#ga204144717f2c2ac15d607aaf4288c4bf">00151</a> <span class="preprocessor">#define ashSetAndStartAckTimer(msec) \</span>
<a name="l00152"></a>00152 <span class="preprocessor">    do {ashSetAckPeriod(msec); ashStartAckTimer();}  while (FALSE)</span>
<a name="l00153"></a>00153 <span class="preprocessor"></span>
<a name="l00154"></a>00154 <span class="comment">// Define the units used by the Not Ready timer as 2**n msecs</span>
<a name="l00155"></a><a class="code" href="group__ash.htm#ga8233c444fe24216899e7e7888c1534d2">00155</a> <span class="preprocessor">#define ASH_NR_TIMER_BIT    4 // log2 of msecs per NR timer unit</span>
<a name="l00156"></a>00156 <span class="preprocessor"></span>
<a name="l00164"></a>00164 <span class="keywordtype">void</span> <a class="code" href="group__ash.htm#ga1404542c9c852c1d4bd9f572c5dae878" title="Starts the Not Ready timer.">ashStartNrTimer</a>(<span class="keywordtype">void</span>);
<a name="l00165"></a>00165 
<a name="l00168"></a><a class="code" href="group__ash.htm#gaf71d90097a4ddb4c22ba26177b2e0199">00168</a> <span class="preprocessor">#define ashStopNrTimer()  do {ashNrTimer = 0;} while (FALSE)</span>
<a name="l00169"></a>00169 <span class="preprocessor"></span>
<a name="l00175"></a>00175 <span class="keywordtype">boolean</span> <a class="code" href="group__ash.htm#ga57fe2077a9c0295418f49252601ab1bd" title="Tests whether the Not Ready timer has expired or has stopped. If expired, it is stopped...">ashNrTimerHasExpired</a>(<span class="keywordtype">void</span>);
<a name="l00176"></a>00176 
<a name="l00180"></a><a class="code" href="group__ash.htm#gafab75ffab06d84e964b54515d4d818c6">00180</a> <span class="preprocessor">#define ashNrTimerIsNotRunning() (ashAckTimer == 0)</span>
<a name="l00181"></a>00181 <span class="preprocessor"></span>
<a name="l00182"></a>00182 <span class="keyword">extern</span> <span class="keywordtype">boolean</span> <a class="code" href="group__ash.htm#gae3755dab3422cede57bbd093ae0efea2">ashDecodeInProgress</a>; <span class="comment">// set FALSE to start decoding a new frame</span>
<a name="l00183"></a>00183 
<a name="l00184"></a>00184 <span class="comment">// ASH timers (units)</span>
<a name="l00185"></a>00185 <span class="keyword">extern</span> <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> <a class="code" href="group__ash.htm#gaf31ba4f31375b78dbbb04c2408b34ff7">ashAckTimer</a>;        <span class="comment">// rec&apos;d ack timer (msecs)</span>
<a name="l00186"></a>00186 <span class="keyword">extern</span> <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> <a class="code" href="group__ash.htm#ga37dd36c5fc18ae7759c78678fba5cc3d">ashAckPeriod</a>;       <span class="comment">// rec&apos;d ack timer period (msecs)</span>
<a name="l00187"></a>00187 <span class="keyword">extern</span> <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> <a class="code" href="group__ash.htm#ga6f0184b3adbaa83cc476670b5565aa5e">ashNrTimer</a>;          <span class="comment">// not ready timer (16 msec units)</span>
<a name="l00188"></a>00188 
<a name="l00189"></a>00189 <span class="preprocessor">#endif //__ASH_COMMON_H__</span>
<a name="l00190"></a>00190 <span class="preprocessor"></span>
</pre></div></div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the PC Host platform. <br>

EmberZNet 4.5.0 - Document 120-3026-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:13:00 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
