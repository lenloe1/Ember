<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the PC Host platform: gcc.h File Reference</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
  <div class="navpath"><a class="el" href="dir_928392185f3941e33d232d8d861cbeaf.htm">hal</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_4e2a585dad82a4ea0080f419c897dc8e.htm">micro</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_0b59cb9117e88b40a76a0d2b68c0da5f.htm">unix</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_3d230877af666f30c1767583f9564573.htm">compiler</a>
  </div>
<div class="contents">
<h1>gcc.h File Reference</h1><code>#include &lt;string.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="platform-common_8h_source.htm">hal/micro/generic/compiler/platform-common.h</a>&quot;</code><br/>

<p><a href="gcc_8h_source.htm">Go to the source code of this file.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gabe39414e4403ea34572d829b72775efd">HAL_HAS_INT64</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga5cd18da9b188103037c75e5ed623b136">_HAL_USE_COMMON_PGM_</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga7e71cc0eb54b859562fb1463dcce4f6f">BIGENDIAN_CPU</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gaf947e7d809d6ff89fe93f6367c20f4c6">_HAL_USE_COMMON_DIVMOD_</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gac6e2cc702734ab195fc0bdfedcacd1d3">PLATCOMMONOKTOINCLUDE</a></td></tr>
<tr><td colspan="2"><div class="groupHeader">C Standard Library Memory Utilities</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p><a class="anchor" id="amgrpbf48f4f0649a81a7c3078ce674249b85"></a> These should be used in place of the standard library functions. </p>
<br/><br/></div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gad7795912037ecd3781859d0895f051a8">MEMSET</a>(d, v, l)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga757f7559cae8d5d8a1a52fd78afaf916">MEMCOPY</a>(d, s, l)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga597876271ae29123a4513e5a3e07e1b5">MEMFASTCOPY</a>(d, s, l)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gaaf10cad513a5560c6132a768e050a5c7">MEMCOMPARE</a>(s0, s1, l)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga0470dcdb8618b1d1140acfc239ea24d6">MEMPGMCOMPARE</a>(s0, s1, l)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gaebdb39ad5b093d6d3086a7d8bbeae893">halCommonMemPGMCopy</a>(d, s, l)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga13b80827ad3ef982d2805c45c169c451">halCommonMemPGMCompare</a>(s1, s2, l)</td></tr>
<tr><td colspan="2"><h2>Typedefs</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Master Variable Types</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p><a class="anchor" id="amgrp262870f49a9535caab372ecd6f5c0b25"></a> These are a set of typedefs to make the size of all variable declarations explicitly known. </p>
<br/><br/></div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef signed char&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gaf7aa9c3e7e9603e38247d0e319a4ca92">int8s</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef unsigned short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f">int16u</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef signed short&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gaa025efe469f75150b783a831c4b67c3f">int16s</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3">int32u</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef signed int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gadb24cb50c464543685a4699c5d7ea660">int32s</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef unsigned long long&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gab790cb95c4fa621fbaba2c19b1f77ba1">int64u</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef signed long long&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga36abda5e1f1ef6791e8b1e106cacb46a">int64s</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#gaa80fca2d9f3519b788c0c2cfc2fb296e">PointerType</a></td></tr>
<tr><td colspan="2"><h2>Watchdog Prototypes</h2></td></tr>
<tr><td colspan="2"><p><a class="anchor" id="amgrp8e030054552e82e36b40af0719cd8026"></a> Define the watchdog macro and internal function to simply be stubs to satisfy those programs that have no HAL (i.e. scripted tests) and those that want to reference real HAL functions (simulation binaries and Unix host applications) we define both <a class="el" href="group__unix__gcc__config.htm#ga12ef4b3c98231a44d2c2cd3b04cec5a4" title="Watchdog stub prototype.">halResetWatchdog()</a> and halInternalResetWatchdog(). The former is used by most of the scripted tests while the latter is used by simulation and real host applications. </p>
<br/><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga12ef4b3c98231a44d2c2cd3b04cec5a4">halResetWatchdog</a>()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__unix__gcc__config.htm#ga8a39a028776dc2065aa3f02c2a1fd1d6">halInternalResetWatchDog</a> (void)</td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>See <a class="el" href="group__platform__common.htm">Common PLATFORM_HEADER Configuration</a> and <a class="el" href="group__unix__gcc__config.htm">Unix GCC Specific PLATFORM_HEADER Configuration</a> for documentation. </p>

<p>Definition in file <a class="el" href="gcc_8h_source.htm">gcc.h</a>.</p>
</div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the PC Host platform. <br>

EmberZNet 4.5.0 - Document 120-3026-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:13:00 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
