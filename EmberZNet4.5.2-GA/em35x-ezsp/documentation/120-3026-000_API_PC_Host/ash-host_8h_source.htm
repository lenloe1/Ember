<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the PC Host platform: ash-host.h Source File</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
  <div class="navpath"><a class="el" href="dir_20396ffc616a28dbb6d73622b23934c9.htm">app</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_46d34dd45b36ccc33d24ee8b4c587228.htm">ezsp-uart-host</a>
  </div>
<div class="contents">
<h1>ash-host.h</h1><a href="ash-host_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00016"></a>00016 <span class="preprocessor">#ifndef __ASH_HOST_H__</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span><span class="preprocessor">#define __ASH_HOST_H__</span>
<a name="l00018"></a>00018 <span class="preprocessor"></span>
<a name="l00019"></a><a class="code" href="group__ash__util.htm#ga7bd77d60e87105fbaa7ad22784ddc798">00019</a> <span class="preprocessor">#define ASH_MAX_TIMEOUTS          6   </span>
<a name="l00020"></a><a class="code" href="group__ash__util.htm#gac3110a330209b7b1ce9829fcc2cf91c4">00020</a> <span class="preprocessor">#define ASH_MAX_WAKE_TIME         150 </span>
<a name="l00022"></a><a class="code" href="group__ash__util.htm#gaf99a54dc619e4851f76fbe03fdf856d7">00022</a> <span class="preprocessor">#define ASH_PORT_LEN              40  </span>
<a name="l00024"></a>00024 <span class="preprocessor">// Bits in traceFlags to enable various host trace outputs</span>
<a name="l00025"></a><a class="code" href="group__ash__util.htm#ga86770f69d225d7b74910e83a0bd11e25">00025</a> <span class="preprocessor"></span><span class="preprocessor">#define TRACE_FRAMES_BASIC        1   </span>
<a name="l00026"></a><a class="code" href="group__ash__util.htm#ga73c9956c8cf46ed664668428316689b9">00026</a> <span class="preprocessor">#define TRACE_FRAMES_VERBOSE      2   </span>
<a name="l00027"></a><a class="code" href="group__ash__util.htm#ga6759a7327f33642796fed1bdf57fceb2">00027</a> <span class="preprocessor">#define TRACE_EVENTS              4   </span>
<a name="l00028"></a><a class="code" href="group__ash__util.htm#gab3c3aed0a70d99f5d9cd379f6b493453">00028</a> <span class="preprocessor">#define TRACE_EZSP                8   </span>
<a name="l00029"></a><a class="code" href="group__ash__util.htm#ga381c2013f22c0a4ee1b71b14acabb510">00029</a> <span class="preprocessor">#define TRACE_EZSP_VERBOSE        16  </span>
<a name="l00031"></a>00031 <span class="preprocessor">// resetMethod values</span>
<a name="l00032"></a><a class="code" href="group__ash__util.htm#gad59c910b4bf32b2aec8e92119df63039">00032</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_RESET_METHOD_RST      0   </span>
<a name="l00033"></a><a class="code" href="group__ash__util.htm#ga0fe048c1b317449c0a189d8bc2c70a98">00033</a> <span class="preprocessor">#define ASH_RESET_METHOD_DTR      1   </span>
<a name="l00034"></a><a class="code" href="group__ash__util.htm#ga5dc510fa42cbba0fec51f998489e87d4">00034</a> <span class="preprocessor">#define ASH_RESET_METHOD_CUSTOM   2   </span>
<a name="l00035"></a><a class="code" href="group__ash__util.htm#ga2ff522c15cf4cca06c7e348ec4b64500">00035</a> <span class="preprocessor">#define ASH_RESET_METHOD_NONE     3   </span>
<a name="l00037"></a>00037 <span class="preprocessor">// ncpType values</span>
<a name="l00038"></a><a class="code" href="group__ash__util.htm#gaa578477d4364b92dc5111d4b92284d91">00038</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_NCP_TYPE_EM2XX_EM3XX  0   </span>
<a name="l00040"></a>00040 <span class="preprocessor">// ashSelectHostConfig() values</span>
<a name="l00041"></a><a class="code" href="group__ash__util.htm#ga8a370a89d6e17130c864e55bfba1213a">00041</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_HOST_CONFIG_EM2XX_EM3XX_115200_RTSCTS   0</span>
<a name="l00042"></a><a class="code" href="group__ash__util.htm#ga63e931e88f096e944f99a3dc81dd19bf">00042</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_HOST_CONFIG_EM2XX_EM3XX_57600_XONXOFF   1</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span>
<a name="l00047"></a><a class="code" href="structAshHostConfig.htm">00047</a> <span class="keyword">typedef</span> <span class="keyword">struct</span>
<a name="l00048"></a>00048 {
<a name="l00049"></a><a class="code" href="structAshHostConfig.htm#a4bfea1213ef98260a8c017d972c11348">00049</a>   <span class="keywordtype">char</span> serialPort[<a class="code" href="group__ash__util.htm#gaf99a54dc619e4851f76fbe03fdf856d7">ASH_PORT_LEN</a>];  
<a name="l00050"></a><a class="code" href="structAshHostConfig.htm#af915cecb0aed5c60de9c62e9a3f1d75d">00050</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> baudRate;      
<a name="l00051"></a><a class="code" href="structAshHostConfig.htm#af24a5e6073a946b77aa69c87a2f1af74">00051</a>   <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a>  stopBits;      
<a name="l00052"></a><a class="code" href="structAshHostConfig.htm#a84e231a8f9f37d22f57ddc4bf7483d82">00052</a>   <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a>  rtsCts;        
<a name="l00053"></a><a class="code" href="structAshHostConfig.htm#a29450e9cac94fac89688cd5bd67b60df">00053</a>   <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> outBlockLen;   
<a name="l00054"></a><a class="code" href="structAshHostConfig.htm#a784bba57819bef9a773d46e6b7cc8e8c">00054</a>   <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> inBlockLen;    
<a name="l00055"></a><a class="code" href="structAshHostConfig.htm#a2b17609d1c66a1af2dc65852727e83dc">00055</a>   <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a>  traceFlags;    
<a name="l00056"></a><a class="code" href="structAshHostConfig.htm#aba3aaad3d14b92685d503b61f004cc68">00056</a>   <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a>  txK;           
<a name="l00057"></a><a class="code" href="structAshHostConfig.htm#a49eaef542cbdabc49c69aa6ae082cabb">00057</a>   <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a>  randomize;     
<a name="l00058"></a><a class="code" href="structAshHostConfig.htm#a36f13e527221561613016713925fa09a">00058</a>   <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> ackTimeInit;   
<a name="l00059"></a><a class="code" href="structAshHostConfig.htm#a111a88eade601d36bf9b1dc6c6069436">00059</a>   <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> ackTimeMin;    
<a name="l00060"></a><a class="code" href="structAshHostConfig.htm#ab6a6811f405865ec45ac8fb463300125">00060</a>   <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> ackTimeMax;    
<a name="l00061"></a><a class="code" href="structAshHostConfig.htm#adf919093d84a8fa2aaf422fa55dbb28b">00061</a>   <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> timeRst;       
<a name="l00062"></a><a class="code" href="structAshHostConfig.htm#aa60433f3afa428d933369a2b68f55fc5">00062</a>   <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a>  nrLowLimit;    
<a name="l00063"></a><a class="code" href="structAshHostConfig.htm#a6b1b77689e55c97dc4876c69170c559f">00063</a>   <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a>  nrHighLimit;   
<a name="l00064"></a><a class="code" href="structAshHostConfig.htm#ad4ec0aa795f58917d593a76e5c644a83">00064</a>   <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> nrTime;        
<a name="l00065"></a><a class="code" href="structAshHostConfig.htm#aa0b1cf84b5efafefbfed8f86a2d62d2a">00065</a>   <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a>  resetMethod;   
<a name="l00066"></a><a class="code" href="structAshHostConfig.htm#a3a99df8c9a3fc6ab5735721d7e775894">00066</a>   <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a>  ncpType;       
<a name="l00067"></a>00067 } <a class="code" href="structAshHostConfig.htm" title="Configuration parameters: values must be defined before calling ashResetNcp() or...">AshHostConfig</a>;
<a name="l00068"></a>00068 
<a name="l00069"></a><a class="code" href="group__ash__util.htm#ga29b61c315e4fad3211e30c8c4fd4f6c0">00069</a> <span class="preprocessor">#define ashReadConfig(member) \</span>
<a name="l00070"></a>00070 <span class="preprocessor">  (ashHostConfig.member)</span>
<a name="l00071"></a>00071 <span class="preprocessor"></span>
<a name="l00072"></a><a class="code" href="group__ash__util.htm#ga80017e372c7bd07a713cd93f4d68673f">00072</a> <span class="preprocessor">#define ashReadConfigOrDefault(member, defval) \</span>
<a name="l00073"></a>00073 <span class="preprocessor">  (ashHostConfig.member)</span>
<a name="l00074"></a>00074 <span class="preprocessor"></span>
<a name="l00075"></a><a class="code" href="group__ash__util.htm#ga6e6b527ab60edb8b9202ead196383e69">00075</a> <span class="preprocessor">#define ashWriteConfig(member, value) \</span>
<a name="l00076"></a>00076 <span class="preprocessor">  do { ashHostConfig.member = value; } while (0)</span>
<a name="l00077"></a>00077 <span class="preprocessor"></span>
<a name="l00078"></a><a class="code" href="group__ash__util.htm#ga2e74cb31dba9abe74fb20f267f359672">00078</a> <span class="preprocessor">#define BUMP_HOST_COUNTER(mbr) do {ashCount.mbr++;} while (0)</span>
<a name="l00079"></a><a class="code" href="group__ash__util.htm#ga6dc6431d885f235159202f9015f65c0b">00079</a> <span class="preprocessor"></span><span class="preprocessor">#define ADD_HOST_COUNTER(op, mbr) do {ashCount.mbr += op;}  while(0)</span>
<a name="l00080"></a>00080 <span class="preprocessor"></span>
<a name="l00081"></a><a class="code" href="structAshCount.htm">00081</a> <span class="keyword">typedef</span> <span class="keyword">struct </span>
<a name="l00082"></a>00082 {
<a name="l00083"></a><a class="code" href="structAshCount.htm#ae61362905a01181f99bc1d357d59c499">00083</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txBytes;             
<a name="l00084"></a><a class="code" href="structAshCount.htm#a63b645b3f5b5206e2d94e69c420aed83">00084</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txBlocks;            
<a name="l00085"></a><a class="code" href="structAshCount.htm#a79750d4fdbe97b53eb2c540933c3f52d">00085</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txData;              
<a name="l00086"></a><a class="code" href="structAshCount.htm#abd089280aa67433d43b0453322af9afe">00086</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txAllFrames;         
<a name="l00087"></a><a class="code" href="structAshCount.htm#ad52d937677204fae4e502c55fbf136a2">00087</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txDataFrames;        
<a name="l00088"></a><a class="code" href="structAshCount.htm#a8d1c1d73cb79bca7fcc2141f397906be">00088</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txAckFrames;         
<a name="l00089"></a><a class="code" href="structAshCount.htm#a79eedee56223bb67c149651a3d67894f">00089</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txNakFrames;         
<a name="l00090"></a><a class="code" href="structAshCount.htm#a1f4242c9fd392d8564b98c5b51279124">00090</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txReDataFrames;      
<a name="l00091"></a><a class="code" href="structAshCount.htm#a3bdd134a05bf901775449a8cfbbcf3a3">00091</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txN0Frames;          
<a name="l00092"></a><a class="code" href="structAshCount.htm#a610049d431e189cc91b66d4e452098c7">00092</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txN1Frames;          
<a name="l00093"></a><a class="code" href="structAshCount.htm#ae38bdf2cd23f2fb4494eccda5019a3b1">00093</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> txCancelled;         
<a name="l00095"></a><a class="code" href="structAshCount.htm#a48a42f1e26f963b74fb9b809477a27b3">00095</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxBytes;             
<a name="l00096"></a><a class="code" href="structAshCount.htm#a44378a0d4253aac3113400bd34515e33">00096</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxBlocks;            
<a name="l00097"></a><a class="code" href="structAshCount.htm#a18fb3f45a1c54d4cfe2a601b86f85f39">00097</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxData;              
<a name="l00098"></a><a class="code" href="structAshCount.htm#a1c416b4358e3b4e27d7df17ea0f24695">00098</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxAllFrames;         
<a name="l00099"></a><a class="code" href="structAshCount.htm#ab1654bf8d5d88dd5a99872faf1954a0b">00099</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxDataFrames;        
<a name="l00100"></a><a class="code" href="structAshCount.htm#a4ef6f480492f7b5e025283c6dffa7af8">00100</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxAckFrames;         
<a name="l00101"></a><a class="code" href="structAshCount.htm#a5fe78d5504f148640d6bf1687820b623">00101</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxNakFrames;         
<a name="l00102"></a><a class="code" href="structAshCount.htm#a048e0605023f142950971221bcd4b83b">00102</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxReDataFrames;      
<a name="l00103"></a><a class="code" href="structAshCount.htm#a147a737e4a27c16b6008db29da3575b5">00103</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxN0Frames;          
<a name="l00104"></a><a class="code" href="structAshCount.htm#a2ee1384029f052d6ab630a30e737d1e8">00104</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxN1Frames;          
<a name="l00105"></a><a class="code" href="structAshCount.htm#a18040fa354324960ac3dcc841fee7d8e">00105</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxCancelled;         
<a name="l00107"></a><a class="code" href="structAshCount.htm#a3cceaa7b69f7bb653f1212e97a4a9436">00107</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxCrcErrors;         
<a name="l00108"></a><a class="code" href="structAshCount.htm#a19dd33e7d1ae38e538a708ba344d1019">00108</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxCommErrors;        
<a name="l00109"></a><a class="code" href="structAshCount.htm#a5151affb52ffd4f359859bcb480f1ce7">00109</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxTooShort;          
<a name="l00110"></a><a class="code" href="structAshCount.htm#aef875678b59f5c70b3da7132346e5c18">00110</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxTooLong;           
<a name="l00111"></a><a class="code" href="structAshCount.htm#a9d0663d00eada4b318f68eefdb16206f">00111</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxBadControl;        
<a name="l00112"></a><a class="code" href="structAshCount.htm#a58adeb1b200c2073a81bcda27ca2fa44">00112</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxBadLength;         
<a name="l00113"></a><a class="code" href="structAshCount.htm#aa622a0648ffe4a09e150583f75877905">00113</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxBadAckNumber;      
<a name="l00114"></a><a class="code" href="structAshCount.htm#a9338dbdf0cc7814c805eee1f742e2a9f">00114</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxNoBuffer;          
<a name="l00115"></a><a class="code" href="structAshCount.htm#ab6aef6bec6330962be95994968b312ea">00115</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxDuplicates;        
<a name="l00116"></a><a class="code" href="structAshCount.htm#ae512e2feeaca981b6b31823cc15fb22e">00116</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxOutOfSequence;     
<a name="l00117"></a><a class="code" href="structAshCount.htm#a632fd9ec5566cbfe52d6f4354497978d">00117</a>   <a class="code" href="group__unix__gcc__config.htm#ga2ba8e0357fdc7b7a450e6893ed81e8e3" title="A typedef to make the size of the variable explicitly known.">int32u</a> rxAckTimeouts;       
<a name="l00118"></a>00118 } <a class="code" href="structAshCount.htm">AshCount</a>;
<a name="l00119"></a>00119 
<a name="l00120"></a>00120 <span class="keyword">extern</span> EzspStatus <a class="code" href="group__ash__util.htm#gaf7f372ef577cdcb3376617dac97ae6ee">ashError</a>;
<a name="l00121"></a>00121 <span class="keyword">extern</span> EzspStatus <a class="code" href="group__ash__util.htm#ga2ec57e3f4fba9d707eb55a2a0bdb2e9c">ncpError</a>;
<a name="l00122"></a>00122 <span class="keyword">extern</span> <a class="code" href="structAshHostConfig.htm" title="Configuration parameters: values must be defined before calling ashResetNcp() or...">AshHostConfig</a> <a class="code" href="group__ash__util.htm#gabf7703458fec85273a6720ae66633db1">ashHostConfig</a>;
<a name="l00123"></a>00123 <span class="keyword">extern</span> <a class="code" href="structAshCount.htm">AshCount</a> <a class="code" href="group__ash__util.htm#ga8fbc2964e4bc4d7b352d646a710cf5e9">ashCount</a>;
<a name="l00124"></a>00124 <span class="keyword">extern</span> <span class="keywordtype">boolean</span> <a class="code" href="group__ash__util.htm#ga46f30ed2469663fa033b1be61d751fe4">ncpSleepEnabled</a>;
<a name="l00125"></a>00125 
<a name="l00138"></a>00138 EzspStatus <a class="code" href="group__ash__util.htm#ga7bc878c6f1d7225b6f00d100b230a28b" title="Selects a set of host configuration parameters. To select a configuration other than...">ashSelectHostConfig</a>(<a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> config);
<a name="l00139"></a>00139 
<a name="l00148"></a>00148 EzspStatus <a class="code" href="group__ash__util.htm#ga9dc02790c04d37a7bc09262775fc773b" title="Initializes the ASH protocol, and waits until the NCP finishes rebooting, or a non-recoverable...">ashStart</a>(<span class="keywordtype">void</span>);
<a name="l00149"></a>00149 
<a name="l00154"></a>00154 <span class="keywordtype">void</span> <a class="code" href="group__ash__util.htm#ga03f168a9a503d741e9c3f8e2fdcce297" title="Stops the ASH protocol - flushes and closes the serial port, clears all queues, stops...">ashStop</a>(<span class="keywordtype">void</span>);
<a name="l00155"></a>00155 
<a name="l00173"></a>00173 EzspStatus <a class="code" href="group__ash__util.htm#ga8114996b8b0ae2bfa263ad0b261f6219" title="Adds a DATA frame to the transmit queue to send to the NCP. Frames that are too long...">ashSend</a>(<a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> len, <span class="keyword">const</span> <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> *inptr);
<a name="l00174"></a>00174 
<a name="l00187"></a>00187 EzspStatus <a class="code" href="group__ash__util.htm#gabecfa511121305e24a3d4225382d9ecf" title="Initializes the ASH serial port and (if enabled) resets the NCP. The method used...">ashResetNcp</a>(<span class="keywordtype">void</span>);
<a name="l00188"></a>00188 
<a name="l00199"></a>00199 EzspStatus <a class="code" href="group__ash__util.htm#gad47506d1749cc5cf78bfc11daf695e35" title="Wakes up the NCP by sending two 0xFF bytes. When the NCP wakes, it sends back an...">ashWakeUpNcp</a>(<span class="keywordtype">boolean</span> init);
<a name="l00200"></a>00200 
<a name="l00210"></a>00210 <span class="keywordtype">boolean</span> <a class="code" href="group__ash__util.htm#ga9fd907565bcb7763df0ab4ad1eaeb1e0" title="Indicates if the host is in the Connected state. If not, the host and NCP cannot...">ashIsConnected</a>(<span class="keywordtype">void</span>);
<a name="l00211"></a>00211 
<a name="l00216"></a>00216 <span class="keywordtype">void</span> <a class="code" href="group__ash__util.htm#gac7d49ebcfbe303cdd9c57e90a7c15678" title="Manages outgoing communication to the NCP, including DATA frames as well as the frames...">ashSendExec</a>(<span class="keywordtype">void</span>);
<a name="l00217"></a>00217 
<a name="l00229"></a>00229 EzspStatus <a class="code" href="group__ash__util.htm#ga2f23c27ed9c82eae691f001e430ad776" title="Processes all received frames. Received DATA frames are appended to the receive queue...">ashReceiveExec</a>(<span class="keywordtype">void</span>);
<a name="l00230"></a>00230 
<a name="l00244"></a>00244 EzspStatus <a class="code" href="group__ash__util.htm#ga77b28de8ad4553ea88701167ec48e6cc" title="Returns the next DATA frame received, if there is one. To be more precise, the head...">ashReceive</a>(<a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> *len, <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> *buffer);
<a name="l00245"></a>00245 
<a name="l00250"></a>00250 <span class="keywordtype">boolean</span> <a class="code" href="group__ash__util.htm#ga2bed798f4c1f8b26f67617a72ba739e9" title="Returns TRUE if the host can sleep without causing errors in the ASH protocol.">ashOkToSleep</a>(<span class="keywordtype">void</span>);
<a name="l00251"></a>00251 
<a name="l00252"></a>00252 <span class="preprocessor">#endif //__ASH_HOST_H___</span>
<a name="l00253"></a>00253 <span class="preprocessor"></span>
</pre></div></div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the PC Host platform. <br>

EmberZNet 4.5.0 - Document 120-3026-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:13:00 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
