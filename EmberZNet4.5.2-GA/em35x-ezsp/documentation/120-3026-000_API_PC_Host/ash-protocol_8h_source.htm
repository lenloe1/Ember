<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the PC Host platform: ash-protocol.h Source File</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
  <div class="navpath"><a class="el" href="dir_928392185f3941e33d232d8d861cbeaf.htm">hal</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_4e2a585dad82a4ea0080f419c897dc8e.htm">micro</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_74f1401158ba39b948e929aa540bf261.htm">generic</a>
  </div>
<div class="contents">
<h1>ash-protocol.h</h1><a href="ash-protocol_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00016"></a>00016 <span class="preprocessor">#ifndef __ASH_PROTOCOL_H__</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span><span class="preprocessor">#define __ASH_PROTOCOL_H__</span>
<a name="l00018"></a>00018 <span class="preprocessor"></span>
<a name="l00019"></a>00019 <span class="preprocessor">#include &quot;app/util/ezsp/ezsp-protocol.h&quot;</span>
<a name="l00020"></a>00020 
<a name="l00021"></a><a class="code" href="group__ash.htm#gaeb4bda89a12197b7206389bc16accbe5">00021</a> <span class="preprocessor">#define ASH_VERSION 2   // protocol version</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="comment">// Special byte values for ASH protocol and/or low-level comm</span>
<a name="l00024"></a>00024 <span class="comment">// Bytes with these values must be escaped (byte-stuffed) before transmission</span>
<a name="l00025"></a><a class="code" href="group__ash.htm#ga35d6a5603fa48cc59eb18417e4376ace">00025</a> <span class="preprocessor">#define ASH_FLAG  0x7E  </span>
<a name="l00026"></a><a class="code" href="group__ash.htm#ga49beb2720fbfe232c4bf45b5884a91c9">00026</a> <span class="preprocessor">#define ASH_ESC   0x7D  </span>
<a name="l00027"></a><a class="code" href="group__ash.htm#ga4babb5a5068de0f896475917c68acced">00027</a> <span class="preprocessor">#define ASH_XON   0x11  </span>
<a name="l00028"></a><a class="code" href="group__ash.htm#ga0a5eca103d9652529a4dfa180e3c9bfb">00028</a> <span class="preprocessor">#define ASH_XOFF  0x13  </span>
<a name="l00029"></a><a class="code" href="group__ash.htm#gabcda112acc53753f967b93850140df4a">00029</a> <span class="preprocessor">#define ASH_SUB   0x18  </span>
<a name="l00030"></a><a class="code" href="group__ash.htm#ga1946f9e5f9f0f4b0c66eca65ca403d7e">00030</a> <span class="preprocessor">#define ASH_CAN   0x1A  </span>
<a name="l00032"></a>00032 <span class="preprocessor">// The wake byte special function applies only when in between frames, so it</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span><span class="comment">// does not need to be escaped within a frame.</span>
<a name="l00034"></a><a class="code" href="group__ash.htm#ga332851ed803cd5e679c48ddeaaedbd6a">00034</a> <span class="preprocessor">#define ASH_WAKE  0xFF  </span>
<a name="l00036"></a>00036 <span class="preprocessor">// Constant used in byte-stuffing</span>
<a name="l00037"></a><a class="code" href="group__ash.htm#ga89bddb13376d55adac2f6353f790f96e">00037</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_FLIP  0x20  </span>
<a name="l00039"></a>00039 <span class="preprocessor">// Field and frame lengths, excluding flag byte and any byte stuffing overhead</span>
<a name="l00040"></a>00040 <span class="preprocessor"></span><span class="comment">// All limits are inclusive</span>
<a name="l00041"></a><a class="code" href="group__ash.htm#gaf5e41d36168f169fc865f2ac06f7bd5f">00041</a> <span class="preprocessor">#define ASH_MIN_DATA_FIELD_LEN    EZSP_MIN_FRAME_LENGTH</span>
<a name="l00042"></a><a class="code" href="group__ash.htm#ga261d8f8ded6642f5009b60d50c945dab">00042</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_MAX_DATA_FIELD_LEN    EZSP_MAX_FRAME_LENGTH</span>
<a name="l00043"></a><a class="code" href="group__ash.htm#gad4b690adfb6a311e75030574065c7381">00043</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_MIN_DATA_FRAME_LEN    (ASH_MIN_DATA_FIELD_LEN + 1) // with control</span>
<a name="l00044"></a><a class="code" href="group__ash.htm#ga4b164e46d5f044035e5b764b13c38c67">00044</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_MIN_FRAME_LEN         1    // control plus data field, but not CRC</span>
<a name="l00045"></a><a class="code" href="group__ash.htm#gacd50a05a0ee070dcce3401ed8254f417">00045</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_MAX_FRAME_LEN         (ASH_MAX_DATA_FIELD_LEN + 1)</span>
<a name="l00046"></a><a class="code" href="group__ash.htm#ga45780211b0000f179081c1bc046d760b">00046</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_CRC_LEN               2</span>
<a name="l00047"></a><a class="code" href="group__ash.htm#ga5872a0a1d9316b15555391538451acac">00047</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_MIN_FRAME_WITH_CRC_LEN  (ASH_MIN_FRAME_LEN + ASH_CRC_LEN)</span>
<a name="l00048"></a><a class="code" href="group__ash.htm#ga2460dce1f67f795c3b6b3d90d5f55a37">00048</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_MAX_FRAME_WITH_CRC_LEN  (ASH_MAX_FRAME_LEN + ASH_CRC_LEN)</span>
<a name="l00049"></a>00049 <span class="preprocessor"></span>
<a name="l00050"></a>00050 <span class="comment">// Define lengths of short frames - includes control byte and data field</span>
<a name="l00051"></a><a class="code" href="group__ash.htm#gaea69d657ec3359ac657826ba460e113b">00051</a> <span class="preprocessor">#define ASH_NCP_SHFRAME_RX_LEN    2     </span>
<a name="l00052"></a><a class="code" href="group__ash.htm#ga5a2ae1d75b190712cf47d87c911d833c">00052</a> <span class="preprocessor">#define ASH_NCP_SHFRAME_TX_LEN    3     </span>
<a name="l00053"></a><a class="code" href="group__ash.htm#ga82514fb89653cf75bd697d93f0e9a640">00053</a> <span class="preprocessor">#define ASH_HOST_SHFRAME_RX_LEN   3     </span>
<a name="l00054"></a><a class="code" href="group__ash.htm#gae32682f971448378c00cff14f1489bda">00054</a> <span class="preprocessor">#define ASH_HOST_SHFRAME_TX_LEN   2     </span>
<a name="l00056"></a>00056 <span class="preprocessor">// Control byte formats</span>
<a name="l00057"></a>00057 <span class="preprocessor"></span><span class="comment">//  +---------+----+----+----+----+----+----+----+----++---------+</span>
<a name="l00058"></a>00058 <span class="comment">//  |         | B7 | B6 | B5 | B4 | B3 | B2 | B1 | B0 ||  Range  |</span>
<a name="l00059"></a>00059 <span class="comment">//  +---------+----+----+----+----+----+----+----+----++---------+</span>
<a name="l00060"></a>00060 <span class="comment">//  | DATA    |  0 |   frameNum   | rF |    ackNum    ||0x00-0x7F|</span>
<a name="l00061"></a>00061 <span class="comment">//  +---------+----+----+----+----+----+----+----+----++---------+</span>
<a name="l00062"></a>00062 <span class="comment">//  | ACK     |  1 |  0 |  0 | pF | nF |    ackNum    ||0x80-0x9F|</span>
<a name="l00063"></a>00063 <span class="comment">//  | NAK     |  1 |  0 |  1 | pF | nF |    ackNum    ||0xA0-0xBF|</span>
<a name="l00064"></a>00064 <span class="comment">//  +---------+----+----+----+----+----+----+----+----++---------+</span>
<a name="l00065"></a>00065 <span class="comment">//  | RST     |  1 |  1 |  0 |  0 |  0 |  0 |  0 |  0 ||   0xC0  |</span>
<a name="l00066"></a>00066 <span class="comment">//  | RSTACK  |  1 |  1 |  0 |  0 |  0 |  0 |  0 |  1 ||   0xC1  |</span>
<a name="l00067"></a>00067 <span class="comment">//  | ERROR   |  1 |  1 |  0 |  0 |  0 |  0 |  1 |  0 ||   0xC2  |</span>
<a name="l00068"></a>00068 <span class="comment">//  +---------+----+----+----+----+----+----+----+----++---------+</span>
<a name="l00069"></a>00069 <span class="comment">//           rF = rFlag (retransmission flag)</span>
<a name="l00070"></a>00070 <span class="comment">//           nF = nFlag (receiver not ready flag)</span>
<a name="l00071"></a>00071 <span class="comment">//           pF = flag reserved for future use</span>
<a name="l00072"></a>00072 <span class="comment">//  Control byte values 0xC3-0xFE are unused, 0xFF is reserved.</span>
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <span class="comment">// Define frame control byte codes</span>
<a name="l00075"></a><a class="code" href="group__ash.htm#gabcb3ec9e1acc3ca155ab5ce204d05e5e">00075</a> <span class="preprocessor">#define ASH_DFRAME_MASK     0x80</span>
<a name="l00076"></a><a class="code" href="group__ash.htm#ga7c4ee83b4ffbf494a43de4a088126286">00076</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_CONTROL_DATA    0x00</span>
<a name="l00077"></a>00077 <span class="preprocessor"></span>
<a name="l00078"></a><a class="code" href="group__ash.htm#ga7079bb4f28dd1f7445af6da53384b976">00078</a> <span class="preprocessor">#define ASH_SHFRAME_MASK    0xE0</span>
<a name="l00079"></a><a class="code" href="group__ash.htm#gae76ffea8a1fdb51aff2e111d4c936ebe">00079</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_CONTROL_ACK     0x80</span>
<a name="l00080"></a><a class="code" href="group__ash.htm#gade34ed73b7a3e25c3ad93c5996e55dcd">00080</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_CONTROL_NAK     0xA0</span>
<a name="l00081"></a><a class="code" href="group__ash.htm#ga15c48a0e18b0593f4f704bdfd3d66552">00081</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_CONTROL_RST     0xC0</span>
<a name="l00082"></a><a class="code" href="group__ash.htm#gaf16bc1f257b4f71cb1eb917bd33ee33a">00082</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_CONTROL_RSTACK  0xC1</span>
<a name="l00083"></a><a class="code" href="group__ash.htm#ga16898e4ad2e5158c362552e3e3839ac5">00083</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_CONTROL_ERROR   0xC2</span>
<a name="l00084"></a>00084 <span class="preprocessor"></span>
<a name="l00085"></a><a class="code" href="group__ash.htm#ga1dbd877609a0b774937feac35c5cef6d">00085</a> <span class="preprocessor">#define ASH_ACKNUM_MASK     0x07      </span>
<a name="l00086"></a><a class="code" href="group__ash.htm#gadca9df1c2051ac91987698055f83ebac">00086</a> <span class="preprocessor">#define ASH_ACKNUM_BIT         0</span>
<a name="l00087"></a><a class="code" href="group__ash.htm#gaccc858afce6923b0353dad3126b82791">00087</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_RFLAG_MASK      0x08      </span>
<a name="l00088"></a><a class="code" href="group__ash.htm#ga11705caec569d3c24b84e9ee63b9108e">00088</a> <span class="preprocessor">#define ASH_RFLAG_BIT          3</span>
<a name="l00089"></a><a class="code" href="group__ash.htm#ga48a7c71037eabc860599cd58231c1287">00089</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_NFLAG_MASK      0x08      </span>
<a name="l00090"></a><a class="code" href="group__ash.htm#gaf9ccf6ede7dafcf7e9c91c68285324b5">00090</a> <span class="preprocessor">#define ASH_NFLAG_BIT          3</span>
<a name="l00091"></a><a class="code" href="group__ash.htm#gaf40a57dd20e71a9d54d581e8286f4d6c">00091</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_PFLAG_MASK      0x10      </span>
<a name="l00092"></a><a class="code" href="group__ash.htm#gaf4466418d9255f9c1d07dac05def992c">00092</a> <span class="preprocessor">#define ASH_PFLAG_BIT          4</span>
<a name="l00093"></a><a class="code" href="group__ash.htm#gad5e36e399b5c19737561afedab35c270">00093</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_FRMNUM_MASK     0x70      </span>
<a name="l00094"></a><a class="code" href="group__ash.htm#ga2ddd92ee289aa948ba35ba86531a2db4">00094</a> <span class="preprocessor">#define ASH_FRMNUM_BIT         4</span>
<a name="l00095"></a><a class="code" href="group__ash.htm#ga655cc3fe691d43b0cd203becfb6f751c">00095</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_GET_RFLAG(ctl)  ((ctl &amp; ASH_RFLAG_MASK ) &gt;&gt; ASH_RFLAG_BIT )</span>
<a name="l00096"></a><a class="code" href="group__ash.htm#ga75bb56465f606e5174ec088399e025bb">00096</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_GET_NFLAG(ctl)  ((ctl &amp; ASH_NFLAG_MASK ) &gt;&gt; ASH_NFLAG_BIT )</span>
<a name="l00097"></a><a class="code" href="group__ash.htm#ga78a2bae8aeacf4ce1995f16a5f1d023b">00097</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_GET_FRMNUM(ctl) ((ctl &amp; ASH_FRMNUM_MASK) &gt;&gt; ASH_FRMNUM_BIT)</span>
<a name="l00098"></a><a class="code" href="group__ash.htm#ga7df31bf72d24c820e4a1243ff96187f8">00098</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_GET_ACKNUM(ctl) ((ctl &amp; ASH_ACKNUM_MASK) &gt;&gt; ASH_ACKNUM_BIT)</span>
<a name="l00099"></a>00099 <span class="preprocessor"></span>
<a name="l00100"></a>00100 <span class="comment">// Lengths for each frame type: includes control and data field (if any),</span>
<a name="l00101"></a>00101 <span class="comment">// excludes the CRC and flag bytes</span>
<a name="l00102"></a><a class="code" href="group__ash.htm#ga19a9f7a954d0dd3c6e38e15bb39d44ab">00102</a> <span class="preprocessor">#define ASH_FRAME_LEN_DATA_MIN  (ASH_MIN_DATA_FIELD_LEN + 1)</span>
<a name="l00103"></a><a class="code" href="group__ash.htm#gab5a0de3e8308ab9fd9400f855ecc1a09">00103</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_FRAME_LEN_ACK       1     // control</span>
<a name="l00104"></a><a class="code" href="group__ash.htm#ga2aa43b4215ad139e0338a9abeb6faf26">00104</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_FRAME_LEN_NAK       1     // control</span>
<a name="l00105"></a><a class="code" href="group__ash.htm#ga19d74b2a1df99d20c6214fcabae3de6d">00105</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_FRAME_LEN_RST       1     // control</span>
<a name="l00106"></a><a class="code" href="group__ash.htm#ga90757e0bcc1e1b3e682e754e1026dbb3">00106</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_FRAME_LEN_RSTACK    3     // control, version, reset reason</span>
<a name="l00107"></a><a class="code" href="group__ash.htm#ga708f5cb7bcb761aff31a317df06620e5">00107</a> <span class="preprocessor"></span><span class="preprocessor">#define ASH_FRAME_LEN_ERROR     3     // control, version, error</span>
<a name="l00108"></a>00108 <span class="preprocessor"></span>
<a name="l00109"></a>00109 <span class="comment">// Define macros for handling 3-bit frame numbers modulo 8</span>
<a name="l00110"></a><a class="code" href="group__ash.htm#ga7d19ec4f8e6ec9bbd332bdab13207c71">00110</a> <span class="preprocessor">#define MOD8(n)     ((n) &amp; 7)         </span>
<a name="l00111"></a><a class="code" href="group__ash.htm#ga0a7a5c33457360e03518352bd25aca65">00111</a> <span class="preprocessor">#define INC8(n)     (n=(MOD8(n+1)))   </span>
<a name="l00112"></a>00112 <span class="preprocessor">// Return TRUE if n is within the range lo through hi, computed (mod 8)</span>
<a name="l00113"></a><a class="code" href="group__ash.htm#gab23cff93f59f7e01fc1000d12adeed54">00113</a> <span class="preprocessor"></span><span class="preprocessor">#define WITHIN_RANGE(lo, n, hi) (MOD8(n-lo)&lt;=MOD8(hi-lo))</span>
<a name="l00114"></a>00114 <span class="preprocessor"></span>
<a name="l00115"></a>00115 <span class="preprocessor">#endif //__ASH_PROTOCOL_H__</span>
<a name="l00116"></a>00116 <span class="preprocessor"></span>
</pre></div></div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the PC Host platform. <br>

EmberZNet 4.5.0 - Document 120-3026-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:13:00 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
