<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the PC Host platform: ASH Application Utility</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
<div class="contents">
<h1>ASH Application Utility<br/>
<small>
[<a class="el" href="group__apputil.htm">Application Utilities API Reference</a>]</small>
</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structashBuffer.htm">ashBuffer</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Buffer to hold a DATA frame.  <a href="structashBuffer.htm#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAshQueue.htm">AshQueue</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Simple queue (singly-linked list).  <a href="structAshQueue.htm#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAshFreeList.htm">AshFreeList</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Simple free list (singly-linked list).  <a href="structAshFreeList.htm#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAshHostConfig.htm">AshHostConfig</a></td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Configuration parameters: values must be defined before calling <a class="el" href="group__ash__util.htm#gabecfa511121305e24a3d4225382d9ecf" title="Initializes the ASH serial port and (if enabled) resets the NCP. The method used...">ashResetNcp()</a> or <a class="el" href="group__ash__util.htm#ga9dc02790c04d37a7bc09262775fc773b" title="Initializes the ASH protocol, and waits until the NCP finishes rebooting, or a non-recoverable...">ashStart()</a>. Note that all times are in milliseconds.  <a href="structAshHostConfig.htm#_details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structAshCount.htm">AshCount</a></td></tr>
<tr><td colspan="2"><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga01cc042ece075ab5f79f608fed6aa192">DEBUG_STREAM</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gab1426488009bbf880349c6ef806b7a00">ashDebugPrintf</a>(...)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga914098922843d69e278484f5975b1c0a">ashDebugVfprintf</a>(format, argPointer)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2f763955153f2a9ca3ef45de2112431c">TX_POOL_BUFFERS</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga340c2fdf03a1cd7dac6904ed899ebf1a">RX_FREE_LWM</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga8186f2f1d89891d40ea19f5a953c9d5c">RX_FREE_HWM</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2e74cb31dba9abe74fb20f267f359672">BUMP_HOST_COUNTER</a>(mbr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga6dc6431d885f235159202f9015f65c0b">ADD_HOST_COUNTER</a>(op, mbr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga7bd77d60e87105fbaa7ad22784ddc798">ASH_MAX_TIMEOUTS</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gac3110a330209b7b1ce9829fcc2cf91c4">ASH_MAX_WAKE_TIME</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gaf99a54dc619e4851f76fbe03fdf856d7">ASH_PORT_LEN</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga86770f69d225d7b74910e83a0bd11e25">TRACE_FRAMES_BASIC</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga73c9956c8cf46ed664668428316689b9">TRACE_FRAMES_VERBOSE</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga6759a7327f33642796fed1bdf57fceb2">TRACE_EVENTS</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gab3c3aed0a70d99f5d9cd379f6b493453">TRACE_EZSP</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga381c2013f22c0a4ee1b71b14acabb510">TRACE_EZSP_VERBOSE</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gad59c910b4bf32b2aec8e92119df63039">ASH_RESET_METHOD_RST</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga0fe048c1b317449c0a189d8bc2c70a98">ASH_RESET_METHOD_DTR</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga5dc510fa42cbba0fec51f998489e87d4">ASH_RESET_METHOD_CUSTOM</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2ff522c15cf4cca06c7e348ec4b64500">ASH_RESET_METHOD_NONE</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gaa578477d4364b92dc5111d4b92284d91">ASH_NCP_TYPE_EM2XX_EM3XX</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga8a370a89d6e17130c864e55bfba1213a">ASH_HOST_CONFIG_EM2XX_EM3XX_115200_RTSCTS</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga63e931e88f096e944f99a3dc81dd19bf">ASH_HOST_CONFIG_EM2XX_EM3XX_57600_XONXOFF</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga29b61c315e4fad3211e30c8c4fd4f6c0">ashReadConfig</a>(member)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga80017e372c7bd07a713cd93f4d68673f">ashReadConfigOrDefault</a>(member, defval)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga6e6b527ab60edb8b9202ead196383e69">ashWriteConfig</a>(member, value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2e74cb31dba9abe74fb20f267f359672">BUMP_HOST_COUNTER</a>(mbr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga6dc6431d885f235159202f9015f65c0b">ADD_HOST_COUNTER</a>(op, mbr)</td></tr>
<tr><td colspan="2"><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structashBuffer.htm">ashBuffer</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga37de1a17e11f25f3fec463392a422f01">AshBuffer</a></td></tr>
<tr><td colspan="2"><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga02940e009a5a232706644cdd41bb91a4">ashSerialInit</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2b93694b9e120ff77cabaddcf6f31593">ashSerialClose</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga603e8cb3603fa8534e8a661d855e9d5b">ashResetDtr</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga60f6d914ce84b3dea8a95d5a232405fd">ashResetCustom</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga7e2b1f4b052224686dc21c6f40f21c51">ashSerialWriteAvailable</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga084d70f769d39d1828b6475c9c1a2475">ashSerialWriteByte</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> byte)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga14e9f8d81e03691cd9f0bab30ff99d1c">ashSerialWriteFlush</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga4b387ca3786d7984f5a484c4c1a037b9">ashSerialReadByte</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *byte)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gaebdb3327eab67d434429490c9c7ee749">ashSerialReadAvailable</a> (<a class="el" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f">int16u</a> *count)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gaf3ad3f2aa391dd652b6357ff1074fb5f">ashSerialReadFlush</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga905e980b1a8477753acea50d254dfe5e">ashDebugFlush</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga586a054b512132584b78f49ad8c50aa5">ashSerialGetFd</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gad3a2e6005053cf9161c2126e5ad5f14f">ashSerialOutputIsIdle</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga36b9fa042bc24b2dd20b0f8bbd3c4539">ashTraceFrame</a> (<a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> sent)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gad35137af0d9109ac3773964886ba6bf0">ashTraceEventRecdFrame</a> (const char *string)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gad12739bea5c4c36603b8ea64da86ad46">ashTraceEventTime</a> (const char *string)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga1e4a6bbb4577701f7510c05604cfb393">ashTraceDisconnected</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> error)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga4aa368286e2013f570087ab8b6418367">ashTraceArray</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *name, <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> len, <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *data)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gac4378bc641fde0c9ae72b0001ec98dd5">ashTraceEzspFrameId</a> (const char *message, <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *ezspFrame)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gaa82919584d9416a96e795b4c35ebed6e">ashTraceEzspVerbose</a> (char *format,...)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gabf8fbbc9043e6a2019d780fea1d5f6b4">ashCountFrame</a> (<a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> sent)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga399aa95ad1bc1cb3c0c7b9b3704a60c3">readTxControl</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga1cde966b271556ee8d94e011847ef0d2">readRxControl</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gabe142d76721144773fa2ffa6495832f9">readAckRx</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2ad7f0d83679f902267b07fdcd5064f5">readAckTx</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gacb39a189c6a5aeec94c2f87753a7a74a">readFrmTx</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga88dc272f214593c9398e48636cf4d89b">readFrmReTx</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gae7dbdcab0f59d929717740421617b6b5">readFrmRx</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gabccd9e78e8158e05b8f72d491320ca50">readAshTimeouts</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gad91e2cf4e7ef4e66b7b1f70355e4fb6a">ashInitQueues</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga0b900eb64117f3116aae1362f7118a6c">ashFreeBuffer</a> (<a class="el" href="structAshFreeList.htm">AshFreeList</a> *list, <a class="el" href="structashBuffer.htm">AshBuffer</a> *buffer)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2e0c39aaf9efbfedf779b4816413b4b2">ashAllocBuffer</a> (<a class="el" href="structAshFreeList.htm">AshFreeList</a> *list)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gad1e7a61ecf509fbc42dcb2819d88afdc">ashRemoveQueueHead</a> (<a class="el" href="structAshQueue.htm">AshQueue</a> *queue)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga677ab08656d32185757b684aadc8ff8b">ashQueueHead</a> (<a class="el" href="structAshQueue.htm">AshQueue</a> *queue)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gabc56ebff8534f6d8a28a3d300543fbc2">ashQueueNthEntry</a> (<a class="el" href="structAshQueue.htm">AshQueue</a> *queue, <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> n)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2a0567a19fb04444b5bb3f78b6965052">ashQueuePrecedingEntry</a> (<a class="el" href="structAshQueue.htm">AshQueue</a> *queue, <a class="el" href="structashBuffer.htm">AshBuffer</a> *buffer)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga4f49042c77fdedca6ad6fe2a3281ff7f">ashRemoveQueueEntry</a> (<a class="el" href="structAshQueue.htm">AshQueue</a> *queue, <a class="el" href="structashBuffer.htm">AshBuffer</a> *buffer)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga847387661259b00101f750af184c0f8c">ashQueueLength</a> (<a class="el" href="structAshQueue.htm">AshQueue</a> *queue)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga6997fc8fa8f176ac40ba88835200fed6">ashFreeListLength</a> (<a class="el" href="structAshFreeList.htm">AshFreeList</a> *list)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga4edcf0c7f04bb19734e1e39e6cba6011">ashAddQueueTail</a> (<a class="el" href="structAshQueue.htm">AshQueue</a> *queue, <a class="el" href="structashBuffer.htm">AshBuffer</a> *buffer)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gad5d5ab7c983e5888fe885212c6a6addc">ashQueueIsEmpty</a> (<a class="el" href="structAshQueue.htm">AshQueue</a> *queue)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga8fe9c4e51daacc16eef5c226f78663bc">ashPrintUsage</a> (char *name)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gaf2009d2731d39816a5c94caefb631a05">ashProcessCommandOptions</a> (int argc, char *argv[])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga9d854bb3f3fafe58e946df451ae0ed91">ashTraceEvent</a> (const char *string)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga7073d32531dbca8615203d12ef75dcd1">ashPrintCounters</a> (<a class="el" href="structAshCount.htm">AshCount</a> *counters, <a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> clear)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gaa15c99a1af70241f5df19d0054a91913">ashClearCounters</a> (<a class="el" href="structAshCount.htm">AshCount</a> *counters)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gacf5d54eb7bdb1fd5ebac9414f9c39c8c">ashErrorString</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> error)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga6fd0028451b563ee602434ac35d15fdd">ashEzspErrorString</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> error)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga7bc878c6f1d7225b6f00d100b230a28b">ashSelectHostConfig</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> config)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga9dc02790c04d37a7bc09262775fc773b">ashStart</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga03f168a9a503d741e9c3f8e2fdcce297">ashStop</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga8114996b8b0ae2bfa263ad0b261f6219">ashSend</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> len, const <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *inptr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gabecfa511121305e24a3d4225382d9ecf">ashResetNcp</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gad47506d1749cc5cf78bfc11daf695e35">ashWakeUpNcp</a> (<a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> init)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga9fd907565bcb7763df0ab4ad1eaeb1e0">ashIsConnected</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gac7d49ebcfbe303cdd9c57e90a7c15678">ashSendExec</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2f23c27ed9c82eae691f001e430ad776">ashReceiveExec</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga77b28de8ad4553ea88701167ec48e6cc">ashReceive</a> (<a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *len, <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *buffer)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2bed798f4c1f8b26f67617a72ba739e9">ashOkToSleep</a> (void)</td></tr>
<tr><td colspan="2"><h2>Variables</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structAshQueue.htm">AshQueue</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gaab15c4512df121780a8c2bd3e19b1b16">txQueue</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structAshQueue.htm">AshQueue</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gad6f25b6618b0f3b2cf6f7a3991b5b360">reTxQueue</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structAshQueue.htm">AshQueue</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga81be96792b9e47cb0919dd8072a4f45d">rxQueue</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structAshFreeList.htm">AshFreeList</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gac368463dc24aead1b0d74ce4c63f2db8">txFree</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structAshFreeList.htm">AshFreeList</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga1f8e697cdd2d9e465a8f10e45e36e501">rxFree</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gaf7f372ef577cdcb3376617dac97ae6ee">ashError</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">EzspStatus&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga2ec57e3f4fba9d707eb55a2a0bdb2e9c">ncpError</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structAshHostConfig.htm">AshHostConfig</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#gabf7703458fec85273a6720ae66633db1">ashHostConfig</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structAshCount.htm">AshCount</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga8fbc2964e4bc4d7b352d646a710cf5e9">ashCount</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__ash__util.htm#ga46f30ed2469663fa033b1be61d751fe4">ncpSleepEnabled</a></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>See also <a class="el" href="group__ash.htm">Asynchronous Serial Host (ASH) Framework</a>.</p>
<p>See <a class="el" href="ash-host-io_8h.htm" title="Header for ASH host I/O functions.">ash-host-io.h</a>.</p>
<p>See <a class="el" href="ash-host-priv_8h.htm" title="Private header for ASH Host functions.">ash-host-priv.h</a>.</p>
<p>See <a class="el" href="ash-host-queues_8h.htm" title="Header for ASH host queue functions.">ash-host-queues.h</a>.</p>
<p>See <a class="el" href="ash-host-ui_8h.htm" title="Header for ASH Host user interface functions.">ash-host-ui.h</a>.</p>
<p>See <a class="el" href="ash-host_8h.htm" title="Header for ASH Host functions.">ash-host.h</a>. </p>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga01cc042ece075ab5f79f608fed6aa192"></a><!-- doxytag: member="ash&#45;host&#45;io.h::DEBUG_STREAM" ref="ga01cc042ece075ab5f79f608fed6aa192" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEBUG_STREAM</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Prints ASH ACSII trace information. </p>

<p>Definition at line <a class="el" href="ash-host-io_8h_source.htm#l00099">99</a> of file <a class="el" href="ash-host-io_8h_source.htm">ash-host-io.h</a>.</p>

</div>
</div>
<a class="anchor" id="gab1426488009bbf880349c6ef806b7a00"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashDebugPrintf" ref="gab1426488009bbf880349c6ef806b7a00" args="(...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ashDebugPrintf</td>
          <td>(</td>
          <td class="paramtype"> <em>...</em>&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host-io_8h_source.htm#l00104">104</a> of file <a class="el" href="ash-host-io_8h_source.htm">ash-host-io.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga914098922843d69e278484f5975b1c0a"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashDebugVfprintf" ref="ga914098922843d69e278484f5975b1c0a" args="(format, argPointer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ashDebugVfprintf</td>
          <td>(</td>
          <td class="paramtype">format, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">argPointer&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host-io_8h_source.htm#l00107">107</a> of file <a class="el" href="ash-host-io_8h_source.htm">ash-host-io.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga2f763955153f2a9ca3ef45de2112431c"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::TX_POOL_BUFFERS" ref="ga2f763955153f2a9ca3ef45de2112431c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_POOL_BUFFERS</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>The number of transmit buffers must be set to the number of receive buffers -- to hold the immediate ACKs sent for each callabck frame received -- plus 3 buffers for the retransmit queue and one each for an automatic ACK (due to data flow control) and a command. </p>

<p>Definition at line <a class="el" href="ash-host-queues_8h_source.htm#l00024">24</a> of file <a class="el" href="ash-host-queues_8h_source.htm">ash-host-queues.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga340c2fdf03a1cd7dac6904ed899ebf1a"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::RX_FREE_LWM" ref="ga340c2fdf03a1cd7dac6904ed899ebf1a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RX_FREE_LWM</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Define the limits used to decide if the host will hold off the ncp from sending normal priority frames. </p>

<p>Definition at line <a class="el" href="ash-host-queues_8h_source.htm#l00029">29</a> of file <a class="el" href="ash-host-queues_8h_source.htm">ash-host-queues.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga8186f2f1d89891d40ea19f5a953c9d5c"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::RX_FREE_HWM" ref="ga8186f2f1d89891d40ea19f5a953c9d5c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RX_FREE_HWM</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host-queues_8h_source.htm#l00030">30</a> of file <a class="el" href="ash-host-queues_8h_source.htm">ash-host-queues.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga2e74cb31dba9abe74fb20f267f359672"></a><!-- doxytag: member="ash&#45;host&#45;ui.h::BUMP_HOST_COUNTER" ref="ga2e74cb31dba9abe74fb20f267f359672" args="(mbr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BUMP_HOST_COUNTER</td>
          <td>(</td>
          <td class="paramtype">mbr&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host-ui_8h_source.htm#l00075">75</a> of file <a class="el" href="ash-host-ui_8h_source.htm">ash-host-ui.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga6dc6431d885f235159202f9015f65c0b"></a><!-- doxytag: member="ash&#45;host&#45;ui.h::ADD_HOST_COUNTER" ref="ga6dc6431d885f235159202f9015f65c0b" args="(op, mbr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ADD_HOST_COUNTER</td>
          <td>(</td>
          <td class="paramtype">op, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">mbr&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host-ui_8h_source.htm#l00076">76</a> of file <a class="el" href="ash-host-ui_8h_source.htm">ash-host-ui.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga7bd77d60e87105fbaa7ad22784ddc798"></a><!-- doxytag: member="ash&#45;host.h::ASH_MAX_TIMEOUTS" ref="ga7bd77d60e87105fbaa7ad22784ddc798" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_MAX_TIMEOUTS</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>timeouts before link is judged down </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00019">19</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="gac3110a330209b7b1ce9829fcc2cf91c4"></a><!-- doxytag: member="ash&#45;host.h::ASH_MAX_WAKE_TIME" ref="gac3110a330209b7b1ce9829fcc2cf91c4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_MAX_WAKE_TIME</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>max time in msecs for ncp to wake </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00020">20</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaf99a54dc619e4851f76fbe03fdf856d7"></a><!-- doxytag: member="ash&#45;host.h::ASH_PORT_LEN" ref="gaf99a54dc619e4851f76fbe03fdf856d7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_PORT_LEN</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>length of serial port name string </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00022">22</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga86770f69d225d7b74910e83a0bd11e25"></a><!-- doxytag: member="ash&#45;host.h::TRACE_FRAMES_BASIC" ref="ga86770f69d225d7b74910e83a0bd11e25" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TRACE_FRAMES_BASIC</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>frames sent and received </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00025">25</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga73c9956c8cf46ed664668428316689b9"></a><!-- doxytag: member="ash&#45;host.h::TRACE_FRAMES_VERBOSE" ref="ga73c9956c8cf46ed664668428316689b9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TRACE_FRAMES_VERBOSE</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>basic frames + internal variables </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00026">26</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga6759a7327f33642796fed1bdf57fceb2"></a><!-- doxytag: member="ash&#45;host.h::TRACE_EVENTS" ref="ga6759a7327f33642796fed1bdf57fceb2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TRACE_EVENTS</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>events </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00027">27</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="gab3c3aed0a70d99f5d9cd379f6b493453"></a><!-- doxytag: member="ash&#45;host.h::TRACE_EZSP" ref="gab3c3aed0a70d99f5d9cd379f6b493453" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TRACE_EZSP</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>EZSP commands, responses and callbacks </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00028">28</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga381c2013f22c0a4ee1b71b14acabb510"></a><!-- doxytag: member="ash&#45;host.h::TRACE_EZSP_VERBOSE" ref="ga381c2013f22c0a4ee1b71b14acabb510" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TRACE_EZSP_VERBOSE</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>additional EZSP information </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00029">29</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="gad59c910b4bf32b2aec8e92119df63039"></a><!-- doxytag: member="ash&#45;host.h::ASH_RESET_METHOD_RST" ref="gad59c910b4bf32b2aec8e92119df63039" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_RESET_METHOD_RST</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>send RST frame </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00032">32</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga0fe048c1b317449c0a189d8bc2c70a98"></a><!-- doxytag: member="ash&#45;host.h::ASH_RESET_METHOD_DTR" ref="ga0fe048c1b317449c0a189d8bc2c70a98" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_RESET_METHOD_DTR</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>reset using DTR </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00033">33</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga5dc510fa42cbba0fec51f998489e87d4"></a><!-- doxytag: member="ash&#45;host.h::ASH_RESET_METHOD_CUSTOM" ref="ga5dc510fa42cbba0fec51f998489e87d4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_RESET_METHOD_CUSTOM</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>hook for user-defined reset </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00034">34</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga2ff522c15cf4cca06c7e348ec4b64500"></a><!-- doxytag: member="ash&#45;host.h::ASH_RESET_METHOD_NONE" ref="ga2ff522c15cf4cca06c7e348ec4b64500" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_RESET_METHOD_NONE</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>no reset - for testing </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00035">35</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="gaa578477d4364b92dc5111d4b92284d91"></a><!-- doxytag: member="ash&#45;host.h::ASH_NCP_TYPE_EM2XX_EM3XX" ref="gaa578477d4364b92dc5111d4b92284d91" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_NCP_TYPE_EM2XX_EM3XX</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>EM2XX or EM3XX </p>

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00038">38</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga8a370a89d6e17130c864e55bfba1213a"></a><!-- doxytag: member="ash&#45;host.h::ASH_HOST_CONFIG_EM2XX_EM3XX_115200_RTSCTS" ref="ga8a370a89d6e17130c864e55bfba1213a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_HOST_CONFIG_EM2XX_EM3XX_115200_RTSCTS</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00041">41</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga63e931e88f096e944f99a3dc81dd19bf"></a><!-- doxytag: member="ash&#45;host.h::ASH_HOST_CONFIG_EM2XX_EM3XX_57600_XONXOFF" ref="ga63e931e88f096e944f99a3dc81dd19bf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ASH_HOST_CONFIG_EM2XX_EM3XX_57600_XONXOFF</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00042">42</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga29b61c315e4fad3211e30c8c4fd4f6c0"></a><!-- doxytag: member="ash&#45;host.h::ashReadConfig" ref="ga29b61c315e4fad3211e30c8c4fd4f6c0" args="(member)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ashReadConfig</td>
          <td>(</td>
          <td class="paramtype">member&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00069">69</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga80017e372c7bd07a713cd93f4d68673f"></a><!-- doxytag: member="ash&#45;host.h::ashReadConfigOrDefault" ref="ga80017e372c7bd07a713cd93f4d68673f" args="(member, defval)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ashReadConfigOrDefault</td>
          <td>(</td>
          <td class="paramtype">member, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">defval&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00072">72</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga6e6b527ab60edb8b9202ead196383e69"></a><!-- doxytag: member="ash&#45;host.h::ashWriteConfig" ref="ga6e6b527ab60edb8b9202ead196383e69" args="(member, value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ashWriteConfig</td>
          <td>(</td>
          <td class="paramtype">member, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">value&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00075">75</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga2e74cb31dba9abe74fb20f267f359672"></a><!-- doxytag: member="ash&#45;host.h::BUMP_HOST_COUNTER" ref="ga2e74cb31dba9abe74fb20f267f359672" args="(mbr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BUMP_HOST_COUNTER</td>
          <td>(</td>
          <td class="paramtype">mbr&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00078">78</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<a class="anchor" id="ga6dc6431d885f235159202f9015f65c0b"></a><!-- doxytag: member="ash&#45;host.h::ADD_HOST_COUNTER" ref="ga6dc6431d885f235159202f9015f65c0b" args="(op, mbr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ADD_HOST_COUNTER</td>
          <td>(</td>
          <td class="paramtype">op, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">mbr&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="ash-host_8h_source.htm#l00079">79</a> of file <a class="el" href="ash-host_8h_source.htm">ash-host.h</a>.</p>

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="ga37de1a17e11f25f3fec463392a422f01"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::AshBuffer" ref="ga37de1a17e11f25f3fec463392a422f01" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structashBuffer.htm">ashBuffer</a>  <a class="el" href="structashBuffer.htm">AshBuffer</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Buffer to hold a DATA frame. </p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga02940e009a5a232706644cdd41bb91a4"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialInit" ref="ga02940e009a5a232706644cdd41bb91a4" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashSerialInit </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initializes the serial port for use by ASH. The port number, baud rate, stop bits, and flow control method are specifed by the by the ashHostConfig structure. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS</li>
<li>EZSP_ASH_HOST_FATAL_ERROR </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga2b93694b9e120ff77cabaddcf6f31593"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialClose" ref="ga2b93694b9e120ff77cabaddcf6f31593" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashSerialClose </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>If the serial port is open, discards all I/O data and closes the port. </p>

</div>
</div>
<a class="anchor" id="ga603e8cb3603fa8534e8a661d855e9d5b"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashResetDtr" ref="ga603e8cb3603fa8534e8a661d855e9d5b" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashResetDtr </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Resets the ncp by deasserting and asserting DTR. This requires a conenction between DTR and nRESET, as there is on the EM260 breakout board when the on-board USB interface is used. </p>

</div>
</div>
<a class="anchor" id="ga60f6d914ce84b3dea8a95d5a232405fd"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashResetCustom" ref="ga60f6d914ce84b3dea8a95d5a232405fd" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashResetCustom </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Custom method for resetting the ncp which must be defined by the user for their specific hardware and interconect. As shipped, this function does nothing. </p>

</div>
</div>
<a class="anchor" id="ga7e2b1f4b052224686dc21c6f40f21c51"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialWriteAvailable" ref="ga7e2b1f4b052224686dc21c6f40f21c51" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashSerialWriteAvailable </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Checks to see if there is space available in the serial write buffer. If the buffer is full, it is output to the serial port and it return a "no space indication". </p>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS _ EZSP_ASH_NO_TX_SPACE </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga084d70f769d39d1828b6475c9c1a2475"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialWriteByte" ref="ga084d70f769d39d1828b6475c9c1a2475" args="(int8u byte)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashSerialWriteByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>byte</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Writes a byte to the serial output buffer. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>byte</em>&nbsp;</td><td>byte to write </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga14e9f8d81e03691cd9f0bab30ff99d1c"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialWriteFlush" ref="ga14e9f8d81e03691cd9f0bab30ff99d1c" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashSerialWriteFlush </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Writes all data the write output buffer to the serial port and calls fsync(). This is called when a complete frame to be sent to the ncp has been created. </p>

</div>
</div>
<a class="anchor" id="ga4b387ca3786d7984f5a484c4c1a037b9"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialReadByte" ref="ga4b387ca3786d7984f5a484c4c1a037b9" args="(int8u *byte)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashSerialReadByte </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>byte</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reads a byte from the serial port, if one is available. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>byte</em>&nbsp;</td><td>pointer to a variable where the byte read will be output</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS</li>
<li>EZSP_ASH_NO_RX_DATA </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gaebdb3327eab67d434429490c9c7ee749"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialReadAvailable" ref="gaebdb3327eab67d434429490c9c7ee749" args="(int16u *count)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashSerialReadAvailable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f">int16u</a> *&nbsp;</td>
          <td class="paramname"> <em>count</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns number of the bytes available to read from the serial port. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>count</em>&nbsp;</td><td>pointer to a variable where the byte count will be written</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS</li>
<li>EZSP_ASH_NO_RX_DATA </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gaf3ad3f2aa391dd652b6357ff1074fb5f"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialReadFlush" ref="gaf3ad3f2aa391dd652b6357ff1074fb5f" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashSerialReadFlush </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Discards input data from the serial port until there is none left. </p>

</div>
</div>
<a class="anchor" id="ga905e980b1a8477753acea50d254dfe5e"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashDebugFlush" ref="ga905e980b1a8477753acea50d254dfe5e" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashDebugFlush </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Flushes the ASH ASCII trace output stream. </p>

</div>
</div>
<a class="anchor" id="ga586a054b512132584b78f49ad8c50aa5"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialGetFd" ref="ga586a054b512132584b78f49ad8c50aa5" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ashSerialGetFd </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns the file descriptor associated with the serial port. </p>

</div>
</div>
<a class="anchor" id="gad3a2e6005053cf9161c2126e5ad5f14f"></a><!-- doxytag: member="ash&#45;host&#45;io.h::ashSerialOutputIsIdle" ref="gad3a2e6005053cf9161c2126e5ad5f14f" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> ashSerialOutputIsIdle </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>tests to see if all serial transmit data has actually been shifted out the host's serial port transmit data pin. As shipped this is a stub function that must be edited to match the actual operating system and/or UART hardware. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>TRUE if all data has been shifted out. </dd></dl>

</div>
</div>
<a class="anchor" id="ga36b9fa042bc24b2dd20b0f8bbd3c4539"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::ashTraceFrame" ref="ga36b9fa042bc24b2dd20b0f8bbd3c4539" args="(boolean sent)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashTraceFrame </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td>
          <td class="paramname"> <em>sent</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gad35137af0d9109ac3773964886ba6bf0"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::ashTraceEventRecdFrame" ref="gad35137af0d9109ac3773964886ba6bf0" args="(const char *string)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashTraceEventRecdFrame </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>string</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gad12739bea5c4c36603b8ea64da86ad46"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::ashTraceEventTime" ref="gad12739bea5c4c36603b8ea64da86ad46" args="(const char *string)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashTraceEventTime </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>string</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga1e4a6bbb4577701f7510c05604cfb393"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::ashTraceDisconnected" ref="ga1e4a6bbb4577701f7510c05604cfb393" args="(int8u error)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashTraceDisconnected </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>error</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga4aa368286e2013f570087ab8b6418367"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::ashTraceArray" ref="ga4aa368286e2013f570087ab8b6418367" args="(int8u *name, int8u len, int8u *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashTraceArray </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>data</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gac4378bc641fde0c9ae72b0001ec98dd5"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::ashTraceEzspFrameId" ref="gac4378bc641fde0c9ae72b0001ec98dd5" args="(const char *message, int8u *ezspFrame)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashTraceEzspFrameId </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>message</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>ezspFrame</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gaa82919584d9416a96e795b4c35ebed6e"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::ashTraceEzspVerbose" ref="gaa82919584d9416a96e795b4c35ebed6e" args="(char *format,...)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashTraceEzspVerbose </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&nbsp;</td>
          <td class="paramname"> <em>...</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gabf8fbbc9043e6a2019d780fea1d5f6b4"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::ashCountFrame" ref="gabf8fbbc9043e6a2019d780fea1d5f6b4" args="(boolean sent)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashCountFrame </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td>
          <td class="paramname"> <em>sent</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga399aa95ad1bc1cb3c0c7b9b3704a60c3"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::readTxControl" ref="ga399aa95ad1bc1cb3c0c7b9b3704a60c3" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> readTxControl </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga1cde966b271556ee8d94e011847ef0d2"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::readRxControl" ref="ga1cde966b271556ee8d94e011847ef0d2" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> readRxControl </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gabe142d76721144773fa2ffa6495832f9"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::readAckRx" ref="gabe142d76721144773fa2ffa6495832f9" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> readAckRx </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga2ad7f0d83679f902267b07fdcd5064f5"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::readAckTx" ref="ga2ad7f0d83679f902267b07fdcd5064f5" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> readAckTx </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gacb39a189c6a5aeec94c2f87753a7a74a"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::readFrmTx" ref="gacb39a189c6a5aeec94c2f87753a7a74a" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> readFrmTx </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga88dc272f214593c9398e48636cf4d89b"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::readFrmReTx" ref="ga88dc272f214593c9398e48636cf4d89b" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> readFrmReTx </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gae7dbdcab0f59d929717740421617b6b5"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::readFrmRx" ref="gae7dbdcab0f59d929717740421617b6b5" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> readFrmRx </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gabccd9e78e8158e05b8f72d491320ca50"></a><!-- doxytag: member="ash&#45;host&#45;priv.h::readAshTimeouts" ref="gabccd9e78e8158e05b8f72d491320ca50" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> readAshTimeouts </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gad91e2cf4e7ef4e66b7b1f70355e4fb6a"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashInitQueues" ref="gad91e2cf4e7ef4e66b7b1f70355e4fb6a" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashInitQueues </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initializes all queues and free lists. All receive buffers are put into rxFree, and rxQueue is empty. All transmit buffers are put into txFree, and txQueue and reTxQueue are empty. </p>

</div>
</div>
<a class="anchor" id="ga0b900eb64117f3116aae1362f7118a6c"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashFreeBuffer" ref="ga0b900eb64117f3116aae1362f7118a6c" args="(AshFreeList *list, AshBuffer *buffer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashFreeBuffer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshFreeList.htm">AshFreeList</a> *&nbsp;</td>
          <td class="paramname"> <em>list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td>
          <td class="paramname"> <em>buffer</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add a buffer to the free list. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>pointer to the free list </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buffer</em>&nbsp;</td><td>pointer to the buffer </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2e0c39aaf9efbfedf779b4816413b4b2"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashAllocBuffer" ref="ga2e0c39aaf9efbfedf779b4816413b4b2" args="(AshFreeList *list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structashBuffer.htm">AshBuffer</a>* ashAllocBuffer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshFreeList.htm">AshFreeList</a> *&nbsp;</td>
          <td class="paramname"> <em>list</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get a buffer from the free list. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>pointer to the free list</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>pointer to the buffer allocated, NULL if free list was empty </dd></dl>

</div>
</div>
<a class="anchor" id="gad1e7a61ecf509fbc42dcb2819d88afdc"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashRemoveQueueHead" ref="gad1e7a61ecf509fbc42dcb2819d88afdc" args="(AshQueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structashBuffer.htm">AshBuffer</a>* ashRemoveQueueHead </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshQueue.htm">AshQueue</a> *&nbsp;</td>
          <td class="paramname"> <em>queue</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Remove the buffer at the head of a queue. The queue must not be empty. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>queue</em>&nbsp;</td><td>pointer to the queue</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>pointer to the buffer that had been the head of the queue </dd></dl>

</div>
</div>
<a class="anchor" id="ga677ab08656d32185757b684aadc8ff8b"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashQueueHead" ref="ga677ab08656d32185757b684aadc8ff8b" args="(AshQueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structashBuffer.htm">AshBuffer</a>* ashQueueHead </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshQueue.htm">AshQueue</a> *&nbsp;</td>
          <td class="paramname"> <em>queue</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get a pointer to the buffer at the head of the queue. The queue must not be empty. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>queue</em>&nbsp;</td><td>pointer to the queue</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>pointer to the buffer at the nead of the queue </dd></dl>

</div>
</div>
<a class="anchor" id="gabc56ebff8534f6d8a28a3d300543fbc2"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashQueueNthEntry" ref="gabc56ebff8534f6d8a28a3d300543fbc2" args="(AshQueue *queue, int8u n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structashBuffer.htm">AshBuffer</a>* ashQueueNthEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshQueue.htm">AshQueue</a> *&nbsp;</td>
          <td class="paramname"> <em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>n</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get a pointer to the Nth entry in a queue. The tail is entry number 1, and if the queue has N entries, the head is entry number N. The queue must not be empty. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>queue</em>&nbsp;</td><td>pointer to the queue </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>n</em>&nbsp;</td><td>number of the entry to which a pointer will be returned</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>pointer to the Nth queue entry </dd></dl>

</div>
</div>
<a class="anchor" id="ga2a0567a19fb04444b5bb3f78b6965052"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashQueuePrecedingEntry" ref="ga2a0567a19fb04444b5bb3f78b6965052" args="(AshQueue *queue, AshBuffer *buffer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structashBuffer.htm">AshBuffer</a>* ashQueuePrecedingEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshQueue.htm">AshQueue</a> *&nbsp;</td>
          <td class="paramname"> <em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td>
          <td class="paramname"> <em>buffer</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get a pointer to the queue entry before (closer to the tail) than the specified entry. If the entry specified is the tail, NULL is returned. If the entry specifed is NULL, a pointer to the head is returned. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>queue</em>&nbsp;</td><td>pointer to the queue </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buffer</em>&nbsp;</td><td>pointer to the buffer whose predecessor is wanted</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>pointer to the buffer before that specifed, or NULL if none </dd></dl>

</div>
</div>
<a class="anchor" id="ga4f49042c77fdedca6ad6fe2a3281ff7f"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashRemoveQueueEntry" ref="ga4f49042c77fdedca6ad6fe2a3281ff7f" args="(AshQueue *queue, AshBuffer *buffer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structashBuffer.htm">AshBuffer</a>* ashRemoveQueueEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshQueue.htm">AshQueue</a> *&nbsp;</td>
          <td class="paramname"> <em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td>
          <td class="paramname"> <em>buffer</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Removes the buffer from the queue, and returns a pointer to its predecssor, if there is one, otherwise it returns NULL. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>queue</em>&nbsp;</td><td>pointer to the queue </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buffer</em>&nbsp;</td><td>pointer to the buffer to be removed</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>pointer to the buffer before that removed, or NULL if none </dd></dl>

</div>
</div>
<a class="anchor" id="ga847387661259b00101f750af184c0f8c"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashQueueLength" ref="ga847387661259b00101f750af184c0f8c" args="(AshQueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> ashQueueLength </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshQueue.htm">AshQueue</a> *&nbsp;</td>
          <td class="paramname"> <em>queue</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns the number of entries in the queue. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>queue</em>&nbsp;</td><td>pointer to the queue</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>number of entries in the queue </dd></dl>

</div>
</div>
<a class="anchor" id="ga6997fc8fa8f176ac40ba88835200fed6"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashFreeListLength" ref="ga6997fc8fa8f176ac40ba88835200fed6" args="(AshFreeList *list)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> ashFreeListLength </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshFreeList.htm">AshFreeList</a> *&nbsp;</td>
          <td class="paramname"> <em>list</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns the number of entries in the free list. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>list</em>&nbsp;</td><td>pointer to the free list</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>number of entries in the free list </dd></dl>

</div>
</div>
<a class="anchor" id="ga4edcf0c7f04bb19734e1e39e6cba6011"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashAddQueueTail" ref="ga4edcf0c7f04bb19734e1e39e6cba6011" args="(AshQueue *queue, AshBuffer *buffer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashAddQueueTail </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshQueue.htm">AshQueue</a> *&nbsp;</td>
          <td class="paramname"> <em>queue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structashBuffer.htm">AshBuffer</a> *&nbsp;</td>
          <td class="paramname"> <em>buffer</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add a buffer to the tail of the queue. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>queue</em>&nbsp;</td><td>pointer to the queue </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buffer</em>&nbsp;</td><td>pointer to the buffer </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad5d5ab7c983e5888fe885212c6a6addc"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::ashQueueIsEmpty" ref="gad5d5ab7c983e5888fe885212c6a6addc" args="(AshQueue *queue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> ashQueueIsEmpty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshQueue.htm">AshQueue</a> *&nbsp;</td>
          <td class="paramname"> <em>queue</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns TRUE if the queue is empty. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>queue</em>&nbsp;</td><td>pointer to the queue</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>TRUE if the queue is empty </dd></dl>

</div>
</div>
<a class="anchor" id="ga8fe9c4e51daacc16eef5c226f78663bc"></a><!-- doxytag: member="ash&#45;host&#45;ui.h::ashPrintUsage" ref="ga8fe9c4e51daacc16eef5c226f78663bc" args="(char *name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashPrintUsage </td>
          <td>(</td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>name</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Prints usage instructions to stderr. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>name</em>&nbsp;</td><td>program name (usually argv[0]) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf2009d2731d39816a5c94caefb631a05"></a><!-- doxytag: member="ash&#45;host&#45;ui.h::ashProcessCommandOptions" ref="gaf2009d2731d39816a5c94caefb631a05" args="(int argc, char *argv[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> ashProcessCommandOptions </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&nbsp;</td>
          <td class="paramname"> <em>argv</em>[]</td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets host configuration values from command line options. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argc</em>&nbsp;</td><td>number of command line tokens</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>argv</em>&nbsp;</td><td>array of pointer to command line tokens</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>TRUE if no errors were detected in the command line </dd></dl>

</div>
</div>
<a class="anchor" id="ga9d854bb3f3fafe58e946df451ae0ed91"></a><!-- doxytag: member="ash&#45;host&#45;ui.h::ashTraceEvent" ref="ga9d854bb3f3fafe58e946df451ae0ed91" args="(const char *string)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashTraceEvent </td>
          <td>(</td>
          <td class="paramtype">const char *&nbsp;</td>
          <td class="paramname"> <em>string</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Writes a debug trace message, if enabled. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>string</em>&nbsp;</td><td>pointer to message string</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS</li>
<li>EZSP_ASH_NO_RX_DATA </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga7073d32531dbca8615203d12ef75dcd1"></a><!-- doxytag: member="ash&#45;host&#45;ui.h::ashPrintCounters" ref="ga7073d32531dbca8615203d12ef75dcd1" args="(AshCount *counters, boolean clear)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashPrintCounters </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshCount.htm">AshCount</a> *&nbsp;</td>
          <td class="paramname"> <em>counters</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td>
          <td class="paramname"> <em>clear</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Prints host counter data. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>counters</em>&nbsp;</td><td>pointer to counters structure</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>clear</em>&nbsp;</td><td>if TRUE clears counters </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa15c99a1af70241f5df19d0054a91913"></a><!-- doxytag: member="ash&#45;host&#45;ui.h::ashClearCounters" ref="gaa15c99a1af70241f5df19d0054a91913" args="(AshCount *counters)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashClearCounters </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structAshCount.htm">AshCount</a> *&nbsp;</td>
          <td class="paramname"> <em>counters</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Clears host counter data. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>counters</em>&nbsp;</td><td>pointer to counters structure </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gacf5d54eb7bdb1fd5ebac9414f9c39c8c"></a><!-- doxytag: member="ash&#45;host&#45;ui.h::ashErrorString" ref="gacf5d54eb7bdb1fd5ebac9414f9c39c8c" args="(int8u error)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>* ashErrorString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>error</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Converts ASH reset/error code to a string. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>error</em>&nbsp;</td><td>error or reset code (from ashError or ncpError)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>pointer to the string </dd></dl>

</div>
</div>
<a class="anchor" id="ga6fd0028451b563ee602434ac35d15fdd"></a><!-- doxytag: member="ash&#45;host&#45;ui.h::ashEzspErrorString" ref="ga6fd0028451b563ee602434ac35d15fdd" args="(int8u error)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>* ashEzspErrorString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>error</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Converts EZSP-ASH error code to a string. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>error</em>&nbsp;</td><td>error code</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>pointer to the string </dd></dl>

</div>
</div>
<a class="anchor" id="ga7bc878c6f1d7225b6f00d100b230a28b"></a><!-- doxytag: member="ash&#45;host.h::ashSelectHostConfig" ref="ga7bc878c6f1d7225b6f00d100b230a28b" args="(int8u config)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashSelectHostConfig </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>config</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Selects a set of host configuration parameters. To select a configuration other than the default, must be called before <a class="el" href="group__ash__util.htm#ga9dc02790c04d37a7bc09262775fc773b" title="Initializes the ASH protocol, and waits until the NCP finishes rebooting, or a non-recoverable...">ashStart()</a>. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>config</em>&nbsp;</td><td>one of the following:</p>
<ul>
<li><a class="el" href="group__ash__util.htm#ga8a370a89d6e17130c864e55bfba1213a">ASH_HOST_CONFIG_EM2XX_EM3XX_115200_RTSCTS</a> (default)</li>
<li><a class="el" href="group__ash__util.htm#ga63e931e88f096e944f99a3dc81dd19bf">ASH_HOST_CONFIG_EM2XX_EM3XX_57600_XONXOFF</a></li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS _ EZSP_ASH_HOST_FATAL_ERROR </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga9dc02790c04d37a7bc09262775fc773b"></a><!-- doxytag: member="ash&#45;host.h::ashStart" ref="ga9dc02790c04d37a7bc09262775fc773b" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashStart </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initializes the ASH protocol, and waits until the NCP finishes rebooting, or a non-recoverable error occurs. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS</li>
<li>EZSP_ASH_HOST_FATAL_ERROR</li>
<li>EZSP_ASH_NCP_FATAL_ERROR </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga03f168a9a503d741e9c3f8e2fdcce297"></a><!-- doxytag: member="ash&#45;host.h::ashStop" ref="ga03f168a9a503d741e9c3f8e2fdcce297" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashStop </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Stops the ASH protocol - flushes and closes the serial port, clears all queues, stops timers, etc. Does not affect any host configuration parameters. </p>

</div>
</div>
<a class="anchor" id="ga8114996b8b0ae2bfa263ad0b261f6219"></a><!-- doxytag: member="ash&#45;host.h::ashSend" ref="ga8114996b8b0ae2bfa263ad0b261f6219" args="(int8u len, const int8u *inptr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashSend </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a>&nbsp;</td>
          <td class="paramname"> <em>len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>inptr</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds a DATA frame to the transmit queue to send to the NCP. Frames that are too long or too short will not be sent, and frames will not be added to the queue if the host is not in the Connected state, or the NCP is not ready to receive a DATA frame or if there is no room in the queue;. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>len</em>&nbsp;</td><td>length of data field</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>inptr</em>&nbsp;</td><td>pointer to array containing the data to be sent</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS</li>
<li>EZSP_ASH_NO_TX_SPACE</li>
<li>EZSP_ASH_DATA_FRAME_TOO_SHORT</li>
<li>EZSP_ASH_DATA_FRAME_TOO_LONG</li>
<li>EZSP_ASH_NOT_CONNECTED </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gabecfa511121305e24a3d4225382d9ecf"></a><!-- doxytag: member="ash&#45;host.h::ashResetNcp" ref="gabecfa511121305e24a3d4225382d9ecf" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashResetNcp </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initializes the ASH serial port and (if enabled) resets the NCP. The method used to do the reset is specified by the the host configuration parameter resetMethod. </p>
<p>When the reset method is sending a RST frame, the caller should retry NCP resets a few times if it fails.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS</li>
<li>EZSP_ASH_HOST_FATAL_ERROR</li>
<li>EZSP_ASH_NCP_FATAL_ERROR </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gad47506d1749cc5cf78bfc11daf695e35"></a><!-- doxytag: member="ash&#45;host.h::ashWakeUpNcp" ref="gad47506d1749cc5cf78bfc11daf695e35" args="(boolean init)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashWakeUpNcp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a>&nbsp;</td>
          <td class="paramname"> <em>init</em></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Wakes up the NCP by sending two 0xFF bytes. When the NCP wakes, it sends back an 0xFF byte. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>init</em>&nbsp;</td><td>set TRUE on the first call to this function, starts timer</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_ASH_IN_PROGRESS NCP is not yet awake, but has not timed out</li>
<li>EZSP_SUCCESS NCP is swake</li>
<li>EZSP_ASH_HOST_FATAL_ERROR NCP did not wake within ASH_MAX_WAKE_TIME </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga9fd907565bcb7763df0ab4ad1eaeb1e0"></a><!-- doxytag: member="ash&#45;host.h::ashIsConnected" ref="ga9fd907565bcb7763df0ab4ad1eaeb1e0" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> ashIsConnected </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Indicates if the host is in the Connected state. If not, the host and NCP cannot exchange DATA frames. Note that this function does not actively confirm that communication with NCP is healthy, but simply returns its last known status. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>TRUE host and NCP can exchange DATA frames</li>
<li>FALSE host and NCP cannot now exchange DATA frames </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gac7d49ebcfbe303cdd9c57e90a7c15678"></a><!-- doxytag: member="ash&#45;host.h::ashSendExec" ref="gac7d49ebcfbe303cdd9c57e90a7c15678" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ashSendExec </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Manages outgoing communication to the NCP, including DATA frames as well as the frames used for initialization and error detection and recovery. </p>

</div>
</div>
<a class="anchor" id="ga2f23c27ed9c82eae691f001e430ad776"></a><!-- doxytag: member="ash&#45;host.h::ashReceiveExec" ref="ga2f23c27ed9c82eae691f001e430ad776" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashReceiveExec </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Processes all received frames. Received DATA frames are appended to the receive queue if there is room. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS</li>
<li>EZSP_ASH_IN_PROGRESS</li>
<li>EZSP_ASH_NO_RX_DATA</li>
<li>EZSP_ASH_NO_RX_SPACE</li>
<li>EZSP_ASH_HOST_FATAL_ERROR</li>
<li>EZSP_ASH_NCP_FATAL_ERROR </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga77b28de8ad4553ea88701167ec48e6cc"></a><!-- doxytag: member="ash&#45;host.h::ashReceive" ref="ga77b28de8ad4553ea88701167ec48e6cc" args="(int8u *len, int8u *buffer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus ashReceive </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049">int8u</a> *&nbsp;</td>
          <td class="paramname"> <em>buffer</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns the next DATA frame received, if there is one. To be more precise, the head of the receive queue is copied into the specified buffer and then freed. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>len</em>&nbsp;</td><td>length of the DATA frame if one was returnnd</td></tr>
    <tr><td valign="top"></td><td valign="top"><em>buffer</em>&nbsp;</td><td>array into which the DATA frame should be copied</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd><ul>
<li>EZSP_SUCCESS</li>
<li>EZSP_ASH_NO_RX_DATA</li>
<li>EZSP_ASH_NOT_CONNECTED </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga2bed798f4c1f8b26f67617a72ba739e9"></a><!-- doxytag: member="ash&#45;host.h::ashOkToSleep" ref="ga2bed798f4c1f8b26f67617a72ba739e9" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> ashOkToSleep </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns TRUE if the host can sleep without causing errors in the ASH protocol. </p>

</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="gaab15c4512df121780a8c2bd3e19b1b16"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::txQueue" ref="gaab15c4512df121780a8c2bd3e19b1b16" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structAshQueue.htm">AshQueue</a> <a class="el" href="group__ash__util.htm#gaab15c4512df121780a8c2bd3e19b1b16">txQueue</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gad6f25b6618b0f3b2cf6f7a3991b5b360"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::reTxQueue" ref="gad6f25b6618b0f3b2cf6f7a3991b5b360" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structAshQueue.htm">AshQueue</a> <a class="el" href="group__ash__util.htm#gad6f25b6618b0f3b2cf6f7a3991b5b360">reTxQueue</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga81be96792b9e47cb0919dd8072a4f45d"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::rxQueue" ref="ga81be96792b9e47cb0919dd8072a4f45d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structAshQueue.htm">AshQueue</a> <a class="el" href="group__ash__util.htm#ga81be96792b9e47cb0919dd8072a4f45d">rxQueue</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gac368463dc24aead1b0d74ce4c63f2db8"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::txFree" ref="gac368463dc24aead1b0d74ce4c63f2db8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structAshFreeList.htm">AshFreeList</a> <a class="el" href="group__ash__util.htm#gac368463dc24aead1b0d74ce4c63f2db8">txFree</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga1f8e697cdd2d9e465a8f10e45e36e501"></a><!-- doxytag: member="ash&#45;host&#45;queues.h::rxFree" ref="ga1f8e697cdd2d9e465a8f10e45e36e501" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structAshFreeList.htm">AshFreeList</a> <a class="el" href="group__ash__util.htm#ga1f8e697cdd2d9e465a8f10e45e36e501">rxFree</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gaf7f372ef577cdcb3376617dac97ae6ee"></a><!-- doxytag: member="ash&#45;host.h::ashError" ref="gaf7f372ef577cdcb3376617dac97ae6ee" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus <a class="el" href="group__ash__util.htm#gaf7f372ef577cdcb3376617dac97ae6ee">ashError</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga2ec57e3f4fba9d707eb55a2a0bdb2e9c"></a><!-- doxytag: member="ash&#45;host.h::ncpError" ref="ga2ec57e3f4fba9d707eb55a2a0bdb2e9c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EzspStatus <a class="el" href="group__ash__util.htm#ga2ec57e3f4fba9d707eb55a2a0bdb2e9c">ncpError</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="gabf7703458fec85273a6720ae66633db1"></a><!-- doxytag: member="ash&#45;host.h::ashHostConfig" ref="gabf7703458fec85273a6720ae66633db1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structAshHostConfig.htm">AshHostConfig</a> <a class="el" href="group__ash__util.htm#gabf7703458fec85273a6720ae66633db1">ashHostConfig</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga8fbc2964e4bc4d7b352d646a710cf5e9"></a><!-- doxytag: member="ash&#45;host.h::ashCount" ref="ga8fbc2964e4bc4d7b352d646a710cf5e9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structAshCount.htm">AshCount</a> <a class="el" href="group__ash__util.htm#ga8fbc2964e4bc4d7b352d646a710cf5e9">ashCount</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga46f30ed2469663fa033b1be61d751fe4"></a><!-- doxytag: member="ash&#45;host.h::ncpSleepEnabled" ref="ga46f30ed2469663fa033b1be61d751fe4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__unix__gcc__config.htm#ga7670a4e8a07d9ebb00411948b0bbf86d">boolean</a> <a class="el" href="group__ash__util.htm#ga46f30ed2469663fa033b1be61d751fe4">ncpSleepEnabled</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
</div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the PC Host platform. <br>

EmberZNet 4.5.0 - Document 120-3026-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:13:01 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
