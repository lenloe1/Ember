<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">

<title>EmberZNet API Reference: For the PC Host platform: platform-common.h Source File</title>

<LINK HREF="doxygen.css" REL="stylesheet" TYPE="text/css">

</head><body>

<table border="0" cellspacing="0" cellpadding="0"  width=100%>

<tr>

<td><img src="emberLogoSmallWebsiteVer.gif"></td>

<td> <div class="qindex">

<a class="qindex" href="main.htm">Home</a>&nbsp;

 | &nbsp;<a class="qindex" href="modules.htm">Modules</a>&nbsp;

 | &nbsp;<a class="qindex" href="annotated.htm">Data Structures</a>&nbsp;

 | &nbsp;<a class="qindex" href="files.htm">File List</a>&nbsp;

 | &nbsp;<a class="qindex" href="dirs.htm">Directories</a>&nbsp;

 | &nbsp;<a class="qindex" href="globals.htm">Index</a></div>

</td>

</table>
<!-- Generated by Doxygen 1.6.1 -->
  <div class="navpath"><a class="el" href="dir_928392185f3941e33d232d8d861cbeaf.htm">hal</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_4e2a585dad82a4ea0080f419c897dc8e.htm">micro</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_74f1401158ba39b948e929aa540bf261.htm">generic</a>&nbsp;&raquo&nbsp;<a class="el" href="dir_cbfc1b49a019f478c7799b398f5c539b.htm">compiler</a>
  </div>
<div class="contents">
<h1>platform-common.h</h1><a href="platform-common_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef PLATCOMMONOKTOINCLUDE</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span>  <span class="comment">//  This header should only be included by a PLATFORM_HEADER</span>
<a name="l00021"></a>00021 <span class="preprocessor">  #error  platform-common.h should not be included directly</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00024"></a>00024 <span class="preprocessor">#ifndef __PLATFORMCOMMON_H__</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span><span class="preprocessor">#define __PLATFORMCOMMON_H__</span>
<a name="l00027"></a>00027 <span class="preprocessor">// Many of the common definitions must be explicitly enabled by the </span>
<a name="l00028"></a>00028 <span class="preprocessor"></span><span class="comment">//  particular PLATFORM_HEADER being used</span>
<a name="l00030"></a>00030 <span class="comment"></span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="preprocessor">#ifndef DOXYGEN_SHOULD_SKIP_THIS</span>
<a name="l00034"></a>00034 <span class="preprocessor">// The XAP2b compiler uses these macros to enable and disable placement</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span><span class="comment">// in zero-page memory.  All other platforms do not have zero-page memory</span>
<a name="l00036"></a>00036 <span class="comment">// so these macros define to nothing.</span>
<a name="l00037"></a>00037 <span class="preprocessor">#ifndef _HAL_USING_XAP2B_PRAGMAS_</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span><span class="preprocessor">  #define XAP2B_PAGEZERO_ON</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span><span class="preprocessor">  #define XAP2B_PAGEZERO_OFF</span>
<a name="l00040"></a>00040 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00042"></a>00042 <span class="preprocessor">#endif //DOXYGEN_SHOULD_SKIP_THIS</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span>
<a name="l00044"></a>00044 
<a name="l00046"></a>00046 <span class="preprocessor">#ifdef _HAL_USE_COMMON_PGM_</span>
<a name="l00047"></a>00047 <span class="preprocessor"></span>
<a name="l00054"></a><a class="code" href="group__platform__common.htm#gaaa9b358e8bf541ff73d8616ca43a869e">00054</a> <span class="preprocessor">  #define PGM     const</span>
<a name="l00055"></a>00055 <span class="preprocessor"></span>
<a name="l00059"></a><a class="code" href="group__platform__common.htm#ga963f816fc88a5d8479c285ed4c630229">00059</a> <span class="preprocessor">  #define PGM_P   const char *</span>
<a name="l00060"></a>00060 <span class="preprocessor"></span>
<a name="l00064"></a><a class="code" href="group__platform__common.htm#gaa9a877b6f1dd1c27050df37e47020ea6">00064</a> <span class="preprocessor">  #define PGM_PU  const unsigned char *</span>
<a name="l00065"></a>00065 <span class="preprocessor"></span>
<a name="l00066"></a>00066 
<a name="l00072"></a><a class="code" href="group__platform__common.htm#ga4b68f8b2a27e9ef2bc2e29ac0a56e6ac">00072</a> <span class="preprocessor">  #define PGM_NO_CONST</span>
<a name="l00073"></a>00073 <span class="preprocessor"></span>
<a name="l00074"></a>00074 <span class="preprocessor">#endif //_HAL_USE_COMMON_PGM_</span>
<a name="l00075"></a>00075 <span class="preprocessor"></span>
<a name="l00076"></a>00076 
<a name="l00078"></a>00078 <span class="preprocessor">#ifdef _HAL_USE_COMMON_DIVMOD_</span>
<a name="l00079"></a>00079 <span class="preprocessor"></span>
<a name="l00092"></a><a class="code" href="group__platform__common.htm#gaa99c936421e2df1c7e289cde67548399">00092</a> <span class="preprocessor">  #define halCommonUDiv32By16(x, y) ((int16u) (((int32u) (x)) / ((int16u) (y))))</span>
<a name="l00093"></a>00093 <span class="preprocessor"></span>
<a name="l00099"></a><a class="code" href="group__platform__common.htm#gad2d0642a54279d837b918f1fbad0ef9d">00099</a> <span class="preprocessor">  #define halCommonSDiv32By16(x, y) ((int16s) (((int32s) (x)) / ((int16s) (y))))</span>
<a name="l00100"></a>00100 <span class="preprocessor"></span>
<a name="l00106"></a><a class="code" href="group__platform__common.htm#gaa4396f0e008fcc2722feb92ade26d553">00106</a> <span class="preprocessor">  #define halCommonUMod32By16(x, y) ((int16u) (((int32u) (x)) % ((int16u) (y))))</span>
<a name="l00107"></a>00107 <span class="preprocessor"></span>
<a name="l00113"></a><a class="code" href="group__platform__common.htm#gab01f62a24a77e7f3efcf731e3cc4c728">00113</a> <span class="preprocessor">  #define halCommonSMod32By16(x, y) ((int16s) (((int32s) (x)) % ((int16s) (y))))</span>
<a name="l00114"></a>00114 <span class="preprocessor"></span>
<a name="l00115"></a>00115 <span class="preprocessor">#endif //_HAL_USE_COMMON_DIVMOD_</span>
<a name="l00116"></a>00116 <span class="preprocessor"></span>
<a name="l00117"></a>00117 
<a name="l00119"></a>00119 <span class="preprocessor">#ifdef _HAL_USE_COMMON_MEMUTILS_</span>
<a name="l00120"></a>00120 <span class="preprocessor"></span>
<a name="l00132"></a>00132 
<a name="l00136"></a>00136   <span class="keywordtype">void</span> halCommonMemCopy(<span class="keywordtype">void</span> *dest, <span class="keyword">const</span> <span class="keywordtype">void</span> *src, <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> bytes);
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 
<a name="l00142"></a>00142   <span class="keywordtype">void</span> halCommonMemSet(<span class="keywordtype">void</span> *dest, <a class="code" href="group__unix__gcc__config.htm#gae712ac7a6479b38bdbb3286e80b72049" title="A typedef to make the size of the variable explicitly known.">int8u</a> val, <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> bytes);
<a name="l00143"></a>00143 
<a name="l00144"></a>00144 
<a name="l00148"></a>00148   <a class="code" href="group__unix__gcc__config.htm#gaf7aa9c3e7e9603e38247d0e319a4ca92" title="A typedef to make the size of the variable explicitly known.">int8s</a> halCommonMemCompare(<span class="keyword">const</span> <span class="keywordtype">void</span> *source0, <span class="keyword">const</span> <span class="keywordtype">void</span> *source1, <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> bytes);
<a name="l00149"></a>00149 
<a name="l00150"></a>00150 
<a name="l00155"></a>00155   <a class="code" href="group__unix__gcc__config.htm#gaf7aa9c3e7e9603e38247d0e319a4ca92" title="A typedef to make the size of the variable explicitly known.">int8s</a> <a class="code" href="group__unix__gcc__config.htm#ga13b80827ad3ef982d2805c45c169c451" title="All of the ember defined macros/functions simply redirect to the full C Standard...">halCommonMemPGMCompare</a>(<span class="keyword">const</span> <span class="keywordtype">void</span> *source0, <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="group__platform__common.htm#ga4b68f8b2a27e9ef2bc2e29ac0a56e6ac" title="Sometimes a second PGM is needed in a declaration. Having two &amp;#39;const&amp;#39; declarations...">PGM_NO_CONST</a> *source1, <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> bytes);
<a name="l00156"></a>00156 
<a name="l00161"></a>00161   <span class="keywordtype">void</span> <a class="code" href="group__unix__gcc__config.htm#gaebdb39ad5b093d6d3086a7d8bbeae893" title="All of the ember defined macros/functions simply redirect to the full C Standard...">halCommonMemPGMCopy</a>(<span class="keywordtype">void</span>* dest, <span class="keyword">const</span> <span class="keywordtype">void</span> <a class="code" href="group__platform__common.htm#ga4b68f8b2a27e9ef2bc2e29ac0a56e6ac" title="Sometimes a second PGM is needed in a declaration. Having two &amp;#39;const&amp;#39; declarations...">PGM_NO_CONST</a> *source, <a class="code" href="group__unix__gcc__config.htm#ga409a5c4bea6981c30b308684efa33f6f" title="A typedef to make the size of the variable explicitly known.">int16u</a> bytes);
<a name="l00162"></a>00162 
<a name="l00166"></a>00166 <span class="preprocessor">  #define MEMSET(d,v,l)  halCommonMemSet(d,v,l)</span>
<a name="l00167"></a>00167 <span class="preprocessor"></span><span class="preprocessor">  #define MEMCOPY(d,s,l) halCommonMemCopy(d,s,l)</span>
<a name="l00168"></a>00168 <span class="preprocessor"></span><span class="preprocessor">  #define MEMCOMPARE(s0,s1,l) halCommonMemCompare(s0, s1, l)</span>
<a name="l00169"></a>00169 <span class="preprocessor"></span><span class="preprocessor">  #define MEMPGMCOMPARE(s0,s1,l) halCommonMemPGMCompare(s0, s1, l)</span>
<a name="l00170"></a>00170 <span class="preprocessor"></span>
<a name="l00172"></a>00172 <span class="preprocessor">#endif //_HAL_USE_COMMON_MEMUTILS_</span>
<a name="l00173"></a>00173 <span class="preprocessor"></span>
<a name="l00174"></a>00174 
<a name="l00175"></a>00175 
<a name="l00176"></a>00176 
<a name="l00177"></a>00177 
<a name="l00178"></a>00178 
<a name="l00179"></a>00179 
<a name="l00180"></a>00180 
<a name="l00181"></a>00181 
<a name="l00183"></a>00183 <span class="comment">//  The following sections are common on all platforms</span>
<a name="l00185"></a>00185 <span class="comment"></span>
<a name="l00187"></a>00187 
<a name="l00195"></a><a class="code" href="group__platform__common.htm#gaa8cecfc5c5c054d2875c03e77b7be15d">00195</a> <span class="preprocessor">#define TRUE  1</span>
<a name="l00196"></a>00196 <span class="preprocessor"></span>
<a name="l00200"></a><a class="code" href="group__platform__common.htm#gaa93f0eb578d23995850d61f7d61c55c1">00200</a> <span class="preprocessor">#define FALSE 0</span>
<a name="l00201"></a>00201 <span class="preprocessor"></span>
<a name="l00202"></a>00202 <span class="preprocessor">#ifndef NULL</span>
<a name="l00203"></a>00203 <span class="preprocessor"></span>
<a name="l00206"></a><a class="code" href="group__platform__common.htm#ga070d2ce7b6bb7e5c05602aa8c308d0c4">00206</a> <span class="preprocessor">#define NULL ((void *)0)</span>
<a name="l00207"></a>00207 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00208"></a>00208 <span class="preprocessor"></span>
<a name="l00210"></a>00210 
<a name="l00211"></a>00211 
<a name="l00216"></a>00216 
<a name="l00220"></a><a class="code" href="group__platform__common.htm#gad27cc17b25bb93134368d5eb21126eae">00220</a> <span class="preprocessor">#define BIT(x) (1U &lt;&lt; (x))  // Unsigned avoids compiler warnings re BIT(15)</span>
<a name="l00221"></a>00221 <span class="preprocessor"></span>
<a name="l00225"></a><a class="code" href="group__platform__common.htm#gadfad29ac9abeda5f41af0130ebe92028">00225</a> <span class="preprocessor">#define BIT32(x) (((int32u) 1) &lt;&lt; (x))</span>
<a name="l00226"></a>00226 <span class="preprocessor"></span>
<a name="l00232"></a><a class="code" href="group__platform__common.htm#gab6d297e4c7bab3d95ea364c87ab4ba10">00232</a> <span class="preprocessor">#define SETBIT(reg, bit)      reg |= BIT(bit)</span>
<a name="l00233"></a>00233 <span class="preprocessor"></span>
<a name="l00239"></a><a class="code" href="group__platform__common.htm#ga7d10fff3f219a04b45a10162952ff658">00239</a> <span class="preprocessor">#define SETBITS(reg, bits)    reg |= (bits)</span>
<a name="l00240"></a>00240 <span class="preprocessor"></span>
<a name="l00246"></a><a class="code" href="group__platform__common.htm#ga0251472e37e2bbc799e0d52836cf9011">00246</a> <span class="preprocessor">#define CLEARBIT(reg, bit)    reg &amp;= ~(BIT(bit))</span>
<a name="l00247"></a>00247 <span class="preprocessor"></span>
<a name="l00253"></a><a class="code" href="group__platform__common.htm#ga7b2143d5ce4e8097b6732855aeebe344">00253</a> <span class="preprocessor">#define CLEARBITS(reg, bits)  reg &amp;= ~(bits)</span>
<a name="l00254"></a>00254 <span class="preprocessor"></span>
<a name="l00258"></a><a class="code" href="group__platform__common.htm#ga058ee17f5399d46ce18c639481e18513">00258</a> <span class="preprocessor">#define READBIT(reg, bit)     (reg &amp; (BIT(bit)))</span>
<a name="l00259"></a>00259 <span class="preprocessor"></span>
<a name="l00264"></a><a class="code" href="group__platform__common.htm#gaebed556d6516b7c0d16905c26848bd99">00264</a> <span class="preprocessor">#define READBITS(reg, bits)   (reg &amp; (bits))</span>
<a name="l00265"></a>00265 <span class="preprocessor"></span>
<a name="l00267"></a>00267 
<a name="l00268"></a>00268 
<a name="l00270"></a>00270 
<a name="l00274"></a>00274 
<a name="l00278"></a><a class="code" href="group__platform__common.htm#ga930cd568cc48ccfe26affc627e8ed85a">00278</a> <span class="preprocessor">#define LOW_BYTE(n)                     ((int8u)((n) &amp; 0xFF))</span>
<a name="l00279"></a>00279 <span class="preprocessor"></span>
<a name="l00283"></a><a class="code" href="group__platform__common.htm#ga2b23bd27632360de737fc779b59251f5">00283</a> <span class="preprocessor">#define HIGH_BYTE(n)                    ((int8u)(LOW_BYTE((n) &gt;&gt; 8)))</span>
<a name="l00284"></a>00284 <span class="preprocessor"></span>
<a name="l00289"></a><a class="code" href="group__platform__common.htm#ga9fe50dee570338bd5ee8b6ac14611953">00289</a> <span class="preprocessor">#define HIGH_LOW_TO_INT(high, low) (                              \</span>
<a name="l00290"></a>00290 <span class="preprocessor">                                    (( (int16u) (high) ) &lt;&lt; 8) +  \</span>
<a name="l00291"></a>00291 <span class="preprocessor">                                    (  (int16u) ( (low) &amp; 0xFF))  \</span>
<a name="l00292"></a>00292 <span class="preprocessor">                                   )                                </span>
<a name="l00293"></a>00293 <span class="preprocessor"></span>
<a name="l00297"></a><a class="code" href="group__platform__common.htm#gaa5f884348afbd2bc7184efefeec6aae3">00297</a> <span class="preprocessor">#define BYTE_0(n)                    ((int8u)((n) &amp; 0xFF))</span>
<a name="l00298"></a>00298 <span class="preprocessor"></span>
<a name="l00302"></a><a class="code" href="group__platform__common.htm#ga488ffa16ddba15b23e5a40fb201754a8">00302</a> <span class="preprocessor">#define BYTE_1(n)                    ((int8u)(BYTE_0((n) &gt;&gt; 8)))</span>
<a name="l00303"></a>00303 <span class="preprocessor"></span>
<a name="l00307"></a><a class="code" href="group__platform__common.htm#ga00cb9a8f13e389d83e850771463d1069">00307</a> <span class="preprocessor">#define BYTE_2(n)                    ((int8u)(BYTE_0((n) &gt;&gt; 16)))</span>
<a name="l00308"></a>00308 <span class="preprocessor"></span>
<a name="l00312"></a><a class="code" href="group__platform__common.htm#gab7bd5e94af2e86f3e19fb7f208995e09">00312</a> <span class="preprocessor">#define BYTE_3(n)                    ((int8u)(BYTE_0((n) &gt;&gt; 24)))</span>
<a name="l00313"></a>00313 <span class="preprocessor"></span>
<a name="l00315"></a>00315 
<a name="l00316"></a>00316 
<a name="l00318"></a>00318 
<a name="l00322"></a>00322 
<a name="l00327"></a><a class="code" href="group__platform__common.htm#ga4da05aa78bf33330f993d9f0fadaf926">00327</a> <span class="preprocessor">#define elapsedTimeInt8u(oldTime, newTime)       \</span>
<a name="l00328"></a>00328 <span class="preprocessor">  ((int8u) ((int8u)(newTime) - (int8u)(oldTime)))</span>
<a name="l00329"></a>00329 <span class="preprocessor"></span>
<a name="l00334"></a><a class="code" href="group__platform__common.htm#gab728801c3fb8c18040ae604170773f9e">00334</a> <span class="preprocessor">#define elapsedTimeInt16u(oldTime, newTime)      \</span>
<a name="l00335"></a>00335 <span class="preprocessor">  ((int16u) ((int16u)(newTime) - (int16u)(oldTime)))</span>
<a name="l00336"></a>00336 <span class="preprocessor"></span>
<a name="l00341"></a><a class="code" href="group__platform__common.htm#gaab3f415fd9db1deecb2ae74a6b0cdd96">00341</a> <span class="preprocessor">#define elapsedTimeInt32u(oldTime, newTime)      \</span>
<a name="l00342"></a>00342 <span class="preprocessor">  ((int32u) ((int32u)(newTime) - (int32u)(oldTime)))</span>
<a name="l00343"></a>00343 <span class="preprocessor"></span>
<a name="l00348"></a><a class="code" href="group__platform__common.htm#ga08fa97d649adefa1b487da3a56c49435">00348</a> <span class="preprocessor">#define MAX_INT8U_VALUE       (0xFF)</span>
<a name="l00349"></a><a class="code" href="group__platform__common.htm#ga15d97484a32b62f82b121a40e9385564">00349</a> <span class="preprocessor"></span><span class="preprocessor">#define HALF_MAX_INT8U_VALUE  (0x80)</span>
<a name="l00350"></a><a class="code" href="group__platform__common.htm#gaab8d26cb3b36c56f626e1d7debc0397b">00350</a> <span class="preprocessor"></span><span class="preprocessor">#define timeGTorEqualInt8u(t1, t2)           \</span>
<a name="l00351"></a>00351 <span class="preprocessor">  (elapsedTimeInt8u(t2, t1) &lt;= (HALF_MAX_INT8U_VALUE))</span>
<a name="l00352"></a>00352 <span class="preprocessor"></span>
<a name="l00357"></a><a class="code" href="group__platform__common.htm#ga4148a761b1307b024e44a0e2bd40f6e7">00357</a> <span class="preprocessor">#define MAX_INT16U_VALUE      (0xFFFF)</span>
<a name="l00358"></a><a class="code" href="group__platform__common.htm#gadcc8708077b35e04eb1dd3168d7764cc">00358</a> <span class="preprocessor"></span><span class="preprocessor">#define HALF_MAX_INT16U_VALUE (0x8000)</span>
<a name="l00359"></a><a class="code" href="group__platform__common.htm#ga8279c76138a23ad7854ab01611b502ca">00359</a> <span class="preprocessor"></span><span class="preprocessor">#define timeGTorEqualInt16u(t1, t2)           \</span>
<a name="l00360"></a>00360 <span class="preprocessor">  (elapsedTimeInt16u(t2, t1) &lt;= (HALF_MAX_INT16U_VALUE))</span>
<a name="l00361"></a>00361 <span class="preprocessor"></span>
<a name="l00366"></a><a class="code" href="group__platform__common.htm#ga7f25400a597f9329241df095431792a3">00366</a> <span class="preprocessor">#define MAX_INT32U_VALUE      (0xFFFFFFFFL)</span>
<a name="l00367"></a><a class="code" href="group__platform__common.htm#ga04554bf89f920a1cafa4b8d070c6bd1f">00367</a> <span class="preprocessor"></span><span class="preprocessor">#define HALF_MAX_INT32U_VALUE (0x80000000L)</span>
<a name="l00368"></a><a class="code" href="group__platform__common.htm#ga5abb1d7348e6239a7b3a3274d8e28196">00368</a> <span class="preprocessor"></span><span class="preprocessor">#define timeGTorEqualInt32u(t1, t2)           \</span>
<a name="l00369"></a>00369 <span class="preprocessor">  (elapsedTimeInt32u(t2, t1) &lt;= (HALF_MAX_INT32U_VALUE))</span>
<a name="l00370"></a>00370 <span class="preprocessor"></span>
<a name="l00372"></a>00372 
<a name="l00373"></a>00373 
<a name="l00374"></a>00374 
<a name="l00375"></a>00375 <span class="preprocessor">#endif //__PLATFORMCOMMON_H__</span>
<a name="l00376"></a>00376 <span class="preprocessor"></span>
</pre></div></div>
<hr size="1">

<table border="0" cellspacing="0" cellpadding="0" width=100%>

<tr>

<td><address><small>

EmberZNet API Reference: For the PC Host platform. <br>

EmberZNet 4.5.0 - Document 120-3026-000-45xx.

</small></address>

</td>

<td align="right">

<address><small>

Copyright &copy; 2006-2010 by Ember Corporation. All rights reserved.<br>

Generated Fri Jun 24 15:13:00 2011 with <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.6.1.

</small></address>

</td>

</tr>

</table>

</body>

</html>
