<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.ember.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="com.ember.core" id="decoder" name="Decoder"/>
      </appInfo>
      <documentation>
         Decoder is the extension point through which plugins can add new custom payload decoders to the framework.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="decoder"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="decoder">
      <complexType>
         <sequence>
            <element ref="option" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  The payload decoder class.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="com.ember.workbench.decoder.payload.ICustomDecoder"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="filterName" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="enableByDefault" type="boolean">
            <annotation>
               <documentation>
                  If this is set to true, then this decoder is enabled by default.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="frameKey" type="string">
            <annotation>
               <documentation>
                  This corresponds to one of the values in EventKey enum. If it fails to, then it explodes. If you want to use the custom frame, then leave this empty.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="frameDescription" type="string">
            <annotation>
               <documentation>
                  Frame description, used if frame key is present.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="option">
      <complexType>
         <attribute name="key" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="default" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         1.1
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         Create a class that extends ICustomDecoder.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         See ICustomDecoder
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         (c) 2005, Ember Corporation
      </documentation>
   </annotation>

</schema>
